This chapters is concerned with the model of the safe lambda calculus its applied variations.
We first give a categorical interpretation of the safe lambda calculus. We then presents the game semantic model and adapt the fully-abstraction result for \pcf\ to safe \pcf.


\section{Categorical model}

It is well-known \cite{lambek1986ccc} that any extensional model of the simply-typed lambda calculus is a Cartesian-Closed Category (CCC) (a category with a terminal object, finite product and exponential). \emph{What is the categorical interpretation of the safe lambda calculus?}
This section introduces \emph{incremental closed categories} and show that they provides a sound model of the safe lambda calculus.

\subsection{Safe lambda calculus with product}
\label{sec:safelmd_product}
The safe lambda calculus defined in Chapter \ref{chap:safelambda}
does not have a product. It is fairly easy to add it to the language.
The type grammar is given by:
$$
T ::= \ B\ | \ T \rightarrow T | \ T \times T
$$
for some set $B$ of base types, and the typing system is extended with three rules corresponding to pairing, first projection and second projection (respectively
$\rulename{\times}$, $\rulename{\pi_1}$ and $\rulename{\pi_2}$ in
Def.\ \ref{def:safecalc_withprod}). For the abstraction and application rules, we could keep the same definition as in Chapter \ref{chap:safelambda}. This would guarantee that the basic property of the safe-lambda calculus is verified (free variables have order greater than the term itself) and in turn implies the No-variable-renaming Lemma. Although this definition conveys the syntactic notion of safety, it does not have desirable semantic properties. For instance take the following two simply-typed terms:
\begin{align*}
 x:(o\typear o)\times o &\stentail \lambda z^o.\, (\pi_2 x) : (o\typear (o\typear o)) \equiv M_1\\
 x_1:(o\typear o), x_2:o &\stentail \lambda z^o.\, x_2 : (o\typear (o\typear o)) \equiv M_2
\end{align*}
In the categorical model of the simply-typed lambda calculus, these two terms are denoted by the same morphism. However the first term would be considered safe and the second one unsafe!


One way to overcome this problem is to impose that for any context-variable of type $A \times B$ we have $\ord A = \ord B$. Another solution is to forbid the use of variables of product type and only allow product types for terms created with the pairing rule. But these two approaches are too restrictive.

The right approach consists in modifying slightly the side-condition of the application and abstraction rules: instead of requiring that all variables in the context have order greater than the order of the term, we require that the order
of \emph{any prime sub-type of any variable} in the context has
order greater that that of the term, where the set $Pr(A)$ of
\defname{prime sub-types} of a type $A$ is given by:
\begin{align*}
Pr(B) &= \{ B \} & \mbox{ if $B$ is a base type,}\\
Pr(A\rightarrow B) &= \{ A\rightarrow B \} \\
Pr(A\times B) &= Pr(A) \union Pr(B) \ .
\end{align*}
Then for any finite typed alphabet $\Gamma$ and type $B$, we define the \defname{safety predicate} $SC(\Gamma ; B)$ as
$$SC(\Gamma ; B) \quad \defeq \quad  \forall x:A\; \in \Gamma . \forall A' \in Pr(A) . \ord A' \geq \ord B$$
where $Pr(A)$ denotes the set of prime sub-types of $A$.

We can now replace the side-condition in the abstraction and application rules by $SC(\Gamma ; B)$ where $B$ is the type of the term being formed and $\Gamma$ its context.

This change partly fixes the problem: the terms $M_1$ are $M_2$ are now both considered unsafe, but unfortunately we still do not capture adequately the notion of safety. Take the two simply-typed terms:
\begin{align*}
 x:(o\typear o)\times o &\stentail \lambda z^o.\, (\pi_1 x) : (o\typear (o\typear o)) \equiv N_1\\
 x_1:(o\typear o), x_2:o &\stentail \lambda z^o.\, x_1 : (o\typear (o\typear o)) \equiv N_2 \ .
\end{align*}
Again, these terms are denoted by the same morphism in the categorical model. But
with our modified calculus $N_1$ is unsafe whereas $N_2$ is safe. (This is because in $N_1$, the variable $x$ has to be introduced first in the derivation tree, whereas in $N_2$, $x_1$ has to be introduced first but $x_2$ can be added to the context at the end of the derivation using the weakening rule.)

We therefore need to change the system to be able to type terms like $N_2$. This is done using a new kind of weakening rule that alters the type of a context-variable instead of extending the context with new variables:
$$
\rulename{wk^\times} \ \rulef{\Gamma, x:A \sentail s : T}{\Gamma, x:A\times B \sentail s\subst{(\pi_1 x)}{x} : T}
$$
This rule, which is semantically equivalent to the weakening rule, allows us to type the term $N_1$.

We can now give the full system of rules of the safe calculus with product:
\begin{definition}
\label{def:safecalc_withprod}
 The \defname{safe lambda calculus with product}, or safe $\Lambda^{\rightarrow}_\times$ for short, is given
by induction over the following rules (the framed parts show the differences with the safe lambda calculus):
$$ \rulename{var} \ \rulef{}{x : A\sentail x : A} \qquad
\rulename{wk} \ \rulef{\Gamma \sentail s : A}{\Delta \sentail s : A}
\quad \Gamma \subset \Delta
$$
\begin{center}
\framebox{
\begin{Bcenter}
$\dps \rulename{\times} \ \rulef{\Gamma \sentail s : A \qquad \Gamma \sentail t : B}
{\Gamma \sentail \langle s, t \rangle : A \times B}
\qquad \rulename{\pi_1} \ \rulef{\Gamma \sentail s : A \times B}
{\Gamma \sentail \pi_1 s : A} \qquad
 \rulename{\pi_2} \ \rulef{\Gamma \sentail s : A \times B}
{\Gamma \sentail \pi_2 s : B}$
\\[10pt]
$\rulename{wk^\times} \ \rulef{\Gamma, x:A \sentail s : T}{\Gamma, x:A\times B \sentail s\subst{(\pi_1 x)}{x} : T}$
\end{Bcenter}
}
\end{center}
$$ \rulename{app_{as}} \ \rulef{\Gamma \sentail s : (A_1, \ldots , A_n,B)
\quad \Gamma \sentail t_1 : A_1 \quad \ldots
\quad \Gamma \sentail t_n : A_n} {\Gamma \asappentail s~t_1 \ldots t_n : B} $$

$$ \rulename{app} \ \rulef{\Gamma \sentail s : (A_1, \ldots , A_n,B)
\quad \Gamma \sentail t_1 : A_1 \quad \ldots
\quad \Gamma \sentail t_n : A_n} {\Gamma \sentail s~t_1 \ldots t_n : B} \quad \ \framebox{$SC(\Gamma ; B)$}$$

$$ \rulename{abs_{as}} \ \rulef{\Gamma, x_1 : A_1, \ldots, x_n : A_n
  \asappentail s : B} {\Gamma \sentail \lambda x_1 \ldots x_n . s :
  (A_1, \ldots ,A_n,B)} \ \framebox{$SC(\Gamma ; (A_1, \ldots ,A_n,B) )$}
$$
$$ \rulename{abs} \ \rulef{\Gamma, x_1 : A_1, \ldots, x_n : A_n
  \sentail s : B} {\Gamma \sentail \lambda x_1 \ldots x_n . s :
  (A_1, \ldots ,A_n,B)} \ \framebox{$SC(\Gamma ; (A_1, \ldots ,A_n,B) )$}
$$
\end{definition}
\begin{example}
The terms $M_1$, $M_2$ are unsafe and the terms $N_1$ and $N_2$ are safe.
\end{example}

\subsection{Incremental closed category}

We first recall some basic categorical notions and fix some notations.

\subsubsection*{Basic definitions}

A \defname{category} $\mathbf{C}$ is given by a class $\catobj{\mathbf{C}}$ of objects
and a class $\cathom{\mathbf{C}}$ of morphisms between objects: for each pair of objects $A$, $B$, a set
of morphisms $\mathbf{C}(A,B)$, written $f:A\typear B$, where $A$ is the domain and $B$ is the codomain
Further for any three objects $A$, $B$ and $C$, and morphisms $f:A\typear B$ and $g:B\typear C$ there is a composite morphism
written $f;g$ or $g\circ f$ such that the composition operation is associative and for each object $A$ there is a morphism $id_A$ that is the identity
for composition.

A \defname{subcategory} of a category $\mathbf{C}$ is a category whose objects and morphisms are objects and morphisms of $\mathbf{C}$.
It is a \emph{lluf} subcategory if it contains all the objects of $\mathbf{C}$.

A object $I$ is \defname{terminal} if for every object $A$ there is a unique morphism from $A$ to $I$.

A category has \defname{products} if for any two objects $A$ and $B$ there is an object $A\times B$ and two morphisms $\pi_1$, $\pi_2$ mapping $A\times B$ to $A$ and $B$ respectively such that for any morphisms $f:C\typear A$, $g:C\typear B$, there is a unique morphism
$\langle f,g\rangle : C \typear A\times B$, called the \defname{pairing} of $f$ and $g$ such that
$\pi_2 \circ \langle f,g\rangle = g$ and $ \pi_1 \circ \langle f,g\rangle = f$, where $f \circ g$ denotes the composition of $g$ with $f$ in the category.

A category has \defname{exponential} if for any two objects $B$ and $C$ there is a distinguished object $C^B$ and
  a morphism $ev_{B,C} : (C^B\times B) \typear C$ such that for any object $A$ and morphism $f:(A\times B) \typear C$ there is a unique morphism $\Lambda(f) : A \typear C^B$ such that the following diagram commutes:
\begin{center}
\begin{tikzpicture}
\matrix [matrix of math nodes,row sep=1cm, column sep=2cm]
{
|(AB)|  A\times B \\
|(CBB)| C^B \times B & |(C)| C \\
};
\begin{scope}[every node/.style={midway,font=\scriptsize}]
\draw[->] (AB) -- node[above] {$f$} (C);
\draw[->,dashed] (AB) -- node[left] {$\Lambda(f) \times id_B$} (CBB);
\draw[->] (CBB) -- node[below] {$ev_{B,C}$} (C);
\end{scope}
\end{tikzpicture}
\end{center}

\begin{definition}
A \defname{cartesian closed category}, CCC for short, is a category with a terminal object, binary products and exponentials.
\end{definition}

\subsubsection*{Incremental closed category}

Let $\mathbf{C}$ be a CCC. We define an \emph{order} function $\ord : {\sf Obj}(\mathbf{C}) \rightarrow \nat \union \{-1\}$ and a function $\dro : {\sf Obj}(\mathbf{C}) \rightarrow \nat \union \{-1\}$ on objects as follows:
\begin{compactitem}
    \item $\ord(I) = \dro(I) = -1$,
    \item $\ord(A\times B) = \max(\ord A,\ord B)$ and $\dro(A\times B) = \min(\dro(A),\dro(B))$,
    \item $\ord(B^A) = \dro(B^A) = \max(1+\ord A ,\ord B)$,
    \item $\ord{A} = \dro(A) = 0$ for any other object $A$.
\end{compactitem}

Clearly we have $\ord \geq \dro$ hence:
\begin{lemma}
\label{lem:increm_transitive}
For any objects $A$, $B$ and $C$ of a CCC, if $\dro(A) \geq \ord(B)$ and $\dro(B) \geq \ord(C)$
then $\dro(A) \geq \ord(C)$.
\end{lemma}

We say that a morphism $f:A\typear B$ is \defname{incremental} if
we have $\delta(A_1)<\ord(B)$. We say that a subcategory of a CCC is \defname{incremental} if all the morphism
of the subcategory are incremental.

\begin{definition}
Let $\mathbf{C}$ be a cartesian closed category.
An \defname{incremental closed subcategory}, sub-ICC for short, is a lluf subcategory $\mathbf{I}$ of $\mathbf{C}$ such that:
\begin{enumerate}[1.]
\item it contains all the projections: for all objects $C_1$ and $C_2$, $\pi_1:C_1\times C_2\typear C_1$ and $\pi_2: C_1\times C_2\typear C_2$ are in $\cathom{\mathbf{I}}$;

\item it is closed under pairing: if $f:C\typear A$ and  $g:C\typear B$ are in $\cathom{\mathbf{I}}$ then so is $\langle f,g\rangle$;

\item it contains all the incremental evaluation morphisms: for any objects $B$ and $C$ such that $\dro(B)\geq\ord(C)$,  $ev_{B,C} : (C^B\times B) \typear C$
is in $\cathom{\mathbf{I}}$;

\item it is closed under incremental currying: if $f:(A\times B) \typear C \in \cathom{\mathbf{I}}$ with $\dro(A)\geq\ord(C^B)$ then $\Lambda(f) : A \typear C^B \in \cathom{\mathbf{I}}$;

\item all morphisms are incremental modulo weakening:
 for any morphism $f:A\typear B$, either $f$ is incremental, or $A=A_1\times A_2$ and $f = \pi_1 ; g$ for some incremental morphism $g:A_1\typear B$.
\end{enumerate}

An \defname{incremental closed category}, ICC for short, is a category that is isomorphic to some sub-ICC of a CCC.
\end{definition}

Let $\mathbf{C}$ be a CCC. The \defname{canonical sub-ICC} of $\mathbf{C}$ is the subcategory $\mathbf{I}$ obtained by keeping only the morphisms that are incremental modulo weakening \ie for any objects $A$, $B$:
\begin{align*}
\mathbf{I}(A,B) &= \mathbf{C}(A,B) & \mbox{if } \dro(A)\geq\ord(B);\\
\mathbf{I}(A,B) &= \emptyset & \mbox{if $\dro(A)<\ord(B)$ and $A$ is not a product;} \\
\mathbf{I}(A_1\times A_2,B) &= \{ \pi_1;f \ |\ f \in \mathbf{I}(A_1,B) \} & \mbox{otherwise.}
\end{align*}

\begin{proposition}
 The \emph{canonical sub-ICC} is a well-defined sub-ICC.
\end{proposition}
\proof
Let $\mathbf{C}$ denote the CCC and $\mathbf{I}$ the canonical sub-ICC.
We first show that $\mathbf{I}$ is indeed a subcategory:
The identity morphisms $id_A$ are all incremental therefore they are all in $\cathom{\mathbf{I}}$, an the class of morphism is closed under composition. Indeed take two morphisms $f:A\typear B$ and $g:B\typear C$:
\begin{compactitem}
  \item if $f$ and $g$ are incremental then by Lemma \ref{lem:increm_transitive}, $f;g$ is incremental;
  \item if $f= \pi_1;f'$ and $f'$ and $g$ are incremental for some projection $\pi_1$ then $f;g=(\pi_1;f');g = \pi_1;(f';g)$ by associativity. Since $f'$ and $g$ are incremental, so is $f';g$ therefore $f;g$ is incremental modulo weakening;
  \item if $g=\pi_1;g'$ and $f$ and $g'$ are incremental for some projection $\pi_1$ then
  we have $B=B_1\times B_2$ and $\dro(A)\geq\ord(B) \geq\ord(B_1) \geq \dro(C)\geq\ord(C) $, therefore $f;g:A\typear C$ is incremental;
  \item if $f= \pi_1;f'$ and $g=\pi_1;g'$ where $f'$ and $g'$ are incremental then the last two points show that $f;g$ is incremental modulo weakening.
\end{compactitem}
Hence $\mathbf I$ is a subcategory. Clearly $\mathbf I$ contains the projections (a projection $\pi_1:C_1\times C_2\typear C_1$ that is not incremental can always be written $\pi_1 = \pi_1 ; id_{C_1}$ where $id_{C_1}$ is incremental), and it is closed under pairing. Also by definition it contains all the incremental evaluation morphism from $\mathbf C$, it is closed under incremental currying, and all morphisms in the category are incremental modulo weakening. Hence $\mathbf I$ is \emph{incremental closed}.
\qed
\smallskip

\noindent An object $A$ of a CCC is said to be \defname{homogeneous} if
\begin{compactitem}
\item $A$ is not a product, nor an exponential;
\item or $A=B\times C$ where $B$ and $C$ are homogeneous and $\ord{B}\geq\ord{C}$;
\item or $A=B\typear C$ where $B$ and $C$ are homogeneous and $\ord{B}\geq\ord{C}-1$.
\end{compactitem}

An \defname{homogeneous incremental category} is a sub-category of an ICC such that
its objects are the homogeneous objects of the ICC and its morphisms are the incremental morphism
(\ie not those that are only incremental modulo weakening).


\subsubsection*{Order-enrichment}

In order to model applied lambda calculi with recursion, one needs to impose further requirement on the category.  In \cite{abramsky99full} it was shown that a condition called \emph{rationality} is sufficient for a CCC to interpret \pcf. Here we adapt this definition to ICCs.

We reproduce here the definition of rationality from \cite{abramsky99full}.
A \emphind{pointed poset} is a partially ordered set with a least element. A category $\mathbf{C}$ is \defname{pointed-poset} enriched (ppo-enriched) if
\begin{compactitem}
\item Every hom-set has a pointed poset structure
$(\mathbf{C}(A,B),\sqsubseteq_{A,B},\bot_{A,B})$
\item Composition, pairing and currying are monotone.
\item Composition is \emphind{left-strict}: for all $f:A\typear B$, $\bot_{B,C} \circ f = \bot_{A,C}$.
\end{compactitem}

A category $\mathbf{C}$ is \defname{rational} if it is ppo-enriched and for all $f:A\times B \typear B$,
the chain defined by $f^{(0)} = \bot_{A,B}$, $f^{(k+1)} = f \circ \langle id_A, f^{(k)}\rangle$ has a least upper bound denoted by $f^\triangledown$ such that
for all $g:C\typear A$, $h:B\typear D$,
$g\circ f^\triangledown \circ h = \Union_{k\in \omega} g\circ f^{(k)} \circ h$.
\smallskip

We extend this definition to ICCs as follows:
\begin{definition}
An ICC is \defname{rational} if it is isomorphic to a sub-ICC $\mathbf I$ of a rational CCC such that $\mathbf I$ is complete with respect to $(\cdot)^\triangledown$ (\ie if $f:A\times B \typear B$ is a morphism of the subcategory then so is $f^\triangledown$).
\end{definition}


\subsection{Interpretation}

Lambek showed that the simply-typed lambda calculus is the internal language of any CCC \cite{lambek1986ccc}. Conversely, any CCC provides a model of the simply-typed lambda calculus that is sound with respect to $\beta\eta$-equality: If $M=_{\beta\eta}N$ then $M$ and $N$ are denoted by the same morphism in the category. We show here that ICCs provide a sound model of the safe lambda calculus.

\begin{proposition}[Model of the safe lambda calculus]
\label{prop:incrementalcat_model_safelambda}
An ICC provides a sound model (with respect to $=_{\beta\eta}$) of the
safe lambda calculus with product.
\end{proposition}
\proof
Let $\mathbf{I}$ be an ICC. By definition, it is isomorphic to some subcategory of a CCC $\mathbf{C}$. The interpretation $\sem{\cdot}$ of the safe lambda calculus with product in $\mathbf{I}$ is induced by the standard interpretation in the CCC:
Ground types are interpreted as objects of the category, this suffices to interpret any simple type $T$ as an object $\sem{T}$ using products and exponentials. A closed term of type $T$ is interpreted by a morphism $I \typear \sem{T}$, and an opened term of type $T$ is interpreted by a morphism from the denotation of the type of its free variables to $\sem{T}$.

Since we work modulo $\eta$ equivalence, we just need to show how to model
terms that are in $\eta$-long normal form. Thus we do not have to consider the rules \rulenamet{app_{as}} or \rulenamet{abs_{as}} because they are not required to type $\eta$-long normal terms.

The \rulenamet{var} axiom is interpreted by the identity morphisms.
The rules \rulenamet{\times}, \rulenamet{\pi_1} and \rulenamet{\pi_2}
are interpreted by pairing and projections.
The weakening rules \rulenamet{wk} and \rulenamet{wk^\times} are interpreted by composition with the projection morphism $\pi_1$.
For the rule \rulenamet{app}, the term formed is of ground type (since we work with eta-long normal form) so we take $\sem{s\,t_1\ldots t_n : o} = \langle \sem{s}, \sem{t_1}, \ldots, \sem{t_n}\rangle \fatcompos ev_{(A_1\times\ldots\times A_n),o}$.
Rule \rulenamet{abs}: let $f:\Gamma \times (A_1\times\ldots\times A_n)\typear T$ be  the denotation of the premise. The term formed is denoted by the curried morphism $\Lambda(f): \Gamma \typear T^{(A_1\times\ldots\times A_n)}$. The side condition ensures that this morphism exists since the category is incremental closed.

This interpretation coincides with the CCC interpretation:
for all safe term $M$, $\sem{M}_{\mathbf{C}} = \sem{M}_{\mathbf{I}}$.
Thus the soundness of the ICC model follows from that of the CCC model.
\qed
\bigskip

Similarly we have:
\begin{proposition}[Model of safe \pcf]
\label{prop:incrementalcat_model_safepcf}
A rational ICC provides a sound model (with respect to $=_{\beta\eta}$)
of safe \pcf.
\end{proposition}
The interpretation of safe \pcf\ in a ICC coincides with its interpretation in the corresponding CCC \cite{abramsky94full}:
each constant and first-order function of \pcf\ of type $T$ is interpreted by some morphism $c:I\typear \sem{T}$, and because the category is rational, the Y-combinator $Y_A$ for any object $A$ can be interpreted by the morphism $\Theta_A^\triangledown : I \typear A^{A^A}$ where
$$\Theta_A = \sem{F:(A\typear A)\typear A \entail \lambda f:A\typear A. f(F f) : (A\typear A)\typear A} \ . $$



\subsection{Quotiented category}


Let $\mathbf{C}$ be a rational CCC. A
\emphind{precongruence} $\lesssim$ on $\mathbf{C}$ is defined as a family of preorders $\lesssim_{A,B} \subseteq \mathbf{C}(A,B) \times \mathbf{C}(A,B)$ such that $\sqsubseteq_{A,B} \subseteq \lesssim_{A,B}$, composition, pairing, currying are $\lesssim$-monotonous, and
the preorders verify a continuity property (see \cite{abramsky94full}).
Given a precongruence, the quotiented category $\quotient{\mathbf C}{\lesssim}$ is defined as follows:
the objects are the same as in $\mathbf C$, and a morphism in $\quotient{\mathbf C}{\lesssim}(A,B)$ is an equivalence class $[f]$ of $\mathbf{C}(A,B)$ modulo the equivalence relation induced by $\lesssim_{A,B}$.
A partial ordering $\leq_{A,B}$ on $\quotient{\mathbf C}{\lesssim}(A,B)$ can then be defined as follows:
$$ [f] \leq_{A,B} [g] \iff f \lesssim_{A,B} f \ .$$
\begin{lemma}[\cite{abramsky94full}]
\label{lem:quotient_by_precongruence_preserves_rationality}
If $\lesssim$ is a precongruence on a rational CCC
$\mathbf{C}$ then $\quotient{\mathbf C}{\lesssim}$ is a rational CCC.
\end{lemma}


The notion of quotient category extends naturally to ICCs. A precongruence $\lesssim$ on an ICC $\mathbf{I}$ is defined similarly as CCC precongruences except that monotonicity is required for \emph{incremental} currying only. This then gives rise to the notion of quotiented category $\quotient{\mathbf{I}}{\lesssim}$.

\begin{lemma}
\label{lem:quotient_preseverve_subiccrationality}
  Let $\mathbf{I}$ be an ICC subcategory of a CCC $\mathbf{C}$, and let $\lesssim$ be a precongruence on $\mathbf{C}$. Then:
  \begin{enumerate}[i.]
\item $\quotient{\mathbf I}{\lesssim}$ is (isomorphic to) a sub-ICC of $\quotient{\mathbf C}{\lesssim}$;

\item If $\mathbf I$ is a \emph{rational} sub-ICC of $\mathbf C$ then $\quotient{\mathbf I}{\lesssim}$ is a rational ICC.
    \end{enumerate}
\end{lemma}
\proof
(i) Since $\lesssim$ is a CCC precongruence, it is also an ICC precongruence therefore the quotiented category $\quotient{\mathbf I}{\lesssim}$ is well-defined.
Since $\mathbf I$ is a subcategory of $\mathbf C$, each equivalent class of morphisms of $\mathbf I$ is a subset of some equivalent class of morphisms of $\mathbf C$. Therefore, up to an obvious isomorphism,
the category $\quotient{\mathbf I}{\lesssim}$ is a subcategory of $\quotient{\mathbf C}{\lesssim}$. Finally, the incremental closure of $\mathbf I$ immediately implies that of $\quotient{\mathbf I}{\lesssim}$.

(ii) Suppose $\mathbf I$ is a rational sub-ICC. By definition this means that $\mathbf C$ is rational and $\mathbf I$ is complete with respect to the operation $\cdot^\triangledown$. By Lemma \ref{lem:quotient_by_precongruence_preserves_rationality},
$\quotient{\mathcal{C}}{\lesssim}$ is also a rational CCC, therefore by (i), $\quotient{\mathbf I}{\lesssim}$ is a sub-ICC of a rational CCC.

Let $[f]:A\times B \typear B$ be an equivalence class morphism in $\quotient{\mathbf I}{\lesssim}$.
It is also a morphism of the category $\quotient{\mathbf C}{\lesssim}$,
therefore by CCC rationality the least upper bound of the chain $[f]^{(n)}$ is given by $[f^\triangledown]$ \cite{abramsky94full}.
Since $\mathbf I$ is $\cdot^\triangledown$-complete this implies that $[f^\triangledown]$ is also in $\quotient{\mathbf I}{\lesssim}$.
Thus $\quotient{\mathbf I}{\lesssim}$ is also $\cdot^\triangledown$-complete.

Hence $\quotient{\mathbf I}{\lesssim}$ is a rational sub-ICC of
$\quotient{\mathbf C}{\lesssim}$.
\qed


\subsection{The internal language of incremental closed categories}

By a well-known result by Lambek, the simply-typed lambda calculus is the language of cartesian closed categories \cite{lambek1986ccc}: for any cartesian closed category $\mathbf{C}$ one can construct a typed lambda calculus $L(\mathbf{C})$ called the \emphind{internal language} of the CCC, and any typed lambda calculus $\mathcal{L}$ can be interpreted as a CCC $\sem{\mathcal{L}}$. Furthermore these two transformations establish an equivalence of categories which means that their composites are isomorphic to the identity functors:
$$  \mathbf{C} \cong \sem{L(\mathbf{C}}, \qquad  \mathcal{L} \cong L(\sem{\mathcal{L}}) \ .$$

Does a similar correspondence hold between ICCs and the safe lambda calculus? We have already shown that the safe lambda calculus can be interpreted in any incremental category, but what is the internal language of an ICC?

Let $\mathbf{I}$ be an ICC. By definition it is isomorphic to a subcategory of some CCC $\mathbf{C}$ \ie $\mathbf{I} \cong \Pi(\mathbf{I})$ for some injective functor $\Pi : \mathbf{I} \rightarrow \mathbf{C}$. The \defname{internal language} $L(\mathbf{I})$ of $\mathbf{I}$ is naturally defined as the sub-language of $L(\mathbf{C})$ consisting of the terms whose denotations in $\mathbf{C} \cong \sem{L(\mathbf{C})}$ are also in $\Pi(\mathbf{I})$:
$$ L(\mathbf{I}) \defeq \{\ t \in L(\mathbf{C}) \ | \ \sem{t} \in \cathom{\Pi(\mathbf{I})} \} \ .$$
In particular this implies that $\sem{L(\mathbf{I})} = \Pi(\mathbf{I}) \cong I$.
\begin{proposition}
  The internal language of an ICC is the safe lambda calculus.
\end{proposition}
\proof
The functor $\sem{\cdot} : \mathcal{L} \rightarrow \mathbf{C}$ defined in
\cite{lambek1986ccc} is such that every term of $\mathcal{L}$ of type $B$ with free variables of type $A_1,\ldots, A_n$ is denoted by a morphism
in $\mathbf{C}(A_1\times\ldots\times A_n,B)$. 
Suppose that such a term $M$ belong to the language $L(\mathbf{I})$. By definition $M$ is denoted by an incremental morphism therefore $\dro(A_1\times\ldots\times A_n) \geq \ord{B}$. We then have for $1\leq i \leq n$:
 $$\ord{A_i} \geq \dro{A_i} \geq \dro(A_1\times\ldots\times A_n) \geq \ord{B} \ .$$ Hence free variables have order greater than $\ord M$.
\qed

Hence the safe lambda calculus is the internal language of any incremental closed category.

\torework[model of safe IA]{
- Show that the category of games and OP-i.j. strategies is an incremental category.
}



\section{P-incremental justification}

Our aim for the rest of this chapter is to construct a category of games that is incremental closed, thus giving rise to a game model of the safe lambda calculus. This section introduces the class of \emph{closed P-incremental justified strategies} that will correspond to the morphims of the category. The question of compositionality will be addressed in the next section where the construction of the category will be presented.
\smallskip

For the rest of this chapter we make the following assumptions on games. Let $\bot$ denote the game with a single initial. For any game $A \neq \bot$:
\begin{itemize}
\item (A1) Each question move in the game enables at least one answer move;
\item (A2) Answer moves do not enable any other move.
\end{itemize}
Clearly, simple, \pcf\ and \ialgol\ types all verify these two assumptions. An arena is said to be \defname{prime} if it has a single initial move; a type is prime if its arena denotation is prime.

\subsection{Order of a move}

Let $A = \langle M, \lambda, \vdash \rangle$ be a game.
We call $\enable$-chain, any sequence of enabling moves $m \enable m_2 \enable \ldots \enable m_h$ where $h \in\nat$ is the \emph{length} of the chain.
The \defname{order of a move} $m$ in $A$, written $\ord_A{m}$ (or just $\ord{m}$ where there is no ambiguity) is defined as
the length of the longest $\enable$-chain starting from $m$ minus 2.
The \defname{order of a game} is defined as the maximal order of its (initial) moves: $\ord{A} = \max_{m \in M} \ord_A{m}$.
The \defname{level} of a move $m$, written $\level_A m$, is the length of the longest $\enable$-chain ending with $m$.
It is easy to see that the following relation holds:
$$ \ord_A{m} + \level_A{m} \leq \ord{A} \ .$$


We recall that for any type $T$ built up from base types, product and function space, the order of $T$, written $\ord{T}$, is defined by induction  as follows: a base type has order 0, $\ord{(A\rightarrow B)} = \max(1+\ord{A},\ord{B})$, and  $\ord(A\times B) = \max(\ord A, \ord B)$ for any types $A$ and $B$. Clearly, this definition coincides with the definition given above: the order of a type is equal to the order of the arena denoting it \ie $\ord{T} = \ord{\sem{T}}$ for all type $T$.


Because of assumptions (A1) and (A2), for any move $m$ of $A \neq \bot$, $m$ is a question move if and only if $\ord{m} \geq 0$, and $m$ is an answer move if and only if $\ord{m} = -1$.


\subsubsection*{Move-order after composition}

Consider the arena $X\lingamear Y$ and let $m$ be a move of
$X\lingamear Y$. We write $\ord_{X\lingamear Y}{m}$ to denote the
order of $m$ in the arena ${X\lingamear Y}$. If $m$ belongs to $X$
(resp.~$Y$) then we write $\ord_X{m}$ (resp.~$\ord_Y{m}$) to denote
the order of the move $m$ in the arena $X$ (resp.~$Y$).

\begin{lemma}
\label{lem:compositionorder} Let $A$, $B$ and $C$ be three arenas.
We have:
$$\begin{array}{lll}
\forall m \in A:
    &  \ord_{A\lingamear B}{m} = \ord_{A\lingamear C}{m} \ ,\\
\forall m \in B:
    & \ord_{A\lingamear B}{m} \geq \ord_{B\lingamear C}{m}  & \mbox{for $m$ initial,}\\
    & \ord_{A\lingamear B}{m} = \ord_{B\lingamear C}{m} & \mbox{for $m$ non initial,} \\
\forall m \in C:
    & \ord_{A\lingamear C}{m} \geq \ord_{B\lingamear C}{m} \iff
\ord{A} \geq \ord{B}\ & \mbox{for $m$ initial,}\\
    & \ord_{A\lingamear C}{m} = \ord_{B\lingamear C}{m}   & \mbox{for $m$ non initial.}
\end{array}
$$
\end{lemma}
The proof is immediate.

\subsection{Well-bracketing}

We call \defname{pending question} of a sequence of moves $s \in L_A$ the last unanswered question in $s$.

\begin{definition}
A strategy $\sigma$ is said to be \defname{P-well-bracketed} if for any play $s \, a \in \sigma$ where $a$ is a  P-answer, $a$ points to the pending question in $s$.
\end{definition}



P-well-bracketing can be restated differently as the following proposition shows:
\begin{proposition}
\label{prop:char_wellbrack}
We make assumption (A1) and (A2).
Let $\sigma$ be a strategy on an arena $A\neq \bot$.
The following statements are equivalent:
\begin{enumerate}
\item[(i)] $\sigma$ is P-well-bracketed,
\item[(ii)] for $s \, a \in \sigma$ with $a$ a P-answer, $a$ points to the pending question in $\pview{s}$,
\item[(iii)] for $s \, a \in \sigma$ with $a$ a P-answer, $a$ points to the last O-question in $\pview{s}$,
\item[(iv)] for $s \, a \in \sigma$ with $a$ a P-answer, $a$ points to the last O-move in $\pview{s}$ with order $>\ord{a}$.
\end{enumerate}
\end{proposition}
\proof
$(i)\iff(ii)$: \cite[Lemma 2.1]{McC96b} states that if P is to move then the pending question in $s$ is the same as that of $\pview{s}$.

$(ii)\iff(iii)$: Assumption (A2) implies that the pending question in $\pview{s}$ is also the last O-question occurring in $\pview{s}$.

$(iii)\iff(iv)$: Because of assumption (A1) and (A2),
for any move $m$, we have $m$ is a question move
if and only if $\ord{m} \geq 0$ if and only if $\ord{m} > \ord{a} = -1$.
\qed
%end of proof
\bigskip



\begin{lemma}
\label{lem:justfied_by_unanswered}
Under assumption (A2), if $s$ be a justified sequence of moves satisfying alternation and visibility then any O-move (resp. P-move) in $s$ points to an \emph{unanswered} P question (resp. O-question).
\end{lemma}
\proof
Suppose that an O-move $c$ points to a P-move $d$ that has already been answered by the O-move $a$. The sequence $s$ as the following form:
$$ s= \ldots \Pstr{(d){d}  \ldots  (a-d,20){a}  \ldots  (c-d,20){c}}$$

By O-visibility, $d$ must belong to $\oview{s_{<c}}$. But since $a$ is an answer, by assumption (A2), it cannot justify any P-move, therefore
$\oview{s_{<q}}$ must contain an OP-arc ``hoping'' over $a$. We name the nodes of this arc $d^1$ and $c^1$:
$$ s = \ldots \Pstr[0.7cm]{(d){d}  \ldots  (d1){d^1} \ldots (a-d,20){a} \ldots
 (c1-d1,20){c^1} \ldots (c-d,25){c}}$$

By P-visibility, $d^1$ must belong to $\pview{s_{<c^1}}$. Consequently, $a$ does not belong to $\pview{s_{<c^1}}$ (otherwise the PO-arc $\Pstr[0.5cm]{(d){d} \quad (a-d,45){a}}$ would cause the P-view to jump over $d^1$).
Therefore there must be a PO-arc $\Pstr[0.5cm]{(d2){d^2} \quad (c2-d2,45){c^2}}$ in $\pview{s_{<c^1}}$ hoping over $a$:
$$s = \ldots \Pstr[0.7cm]{(d){d}  \ldots
(d1){d^1} \ldots (d2){c^2} \ldots
(a-d,20){a} \ldots
 (c2-d2,20){d^2} \ldots (c1-d1,20){c^1} \ldots (c-d,25){c}}$$

This process can be repeated infinitely often by using alternatively O-visibility and P-visibility. This gives a contradiction since the sequence of moves $s_{<c}$ has finite length.
Hence $d$ cannot point to a question that has already been answered. Since, by assumption (A2), a question is enabled by another question, $d$ is necessarily justified by an unanswered question.
\qed
%end of proof
\bigskip

\begin{lemma}
\label{lem:oq_in_pview_unanswered}
Under assumption (A2), if $s$ is a P-well-bracketed justified sequence of moves of odd length satisfying alternation and visibility then  all O-questions occurring in $\pview{s}$ are unanswered in $s$.
\end{lemma}
\proof
We proof the first part by induction on $s$. The base case ($s = q$
with $q$ initial O-move) is trivial. Suppose $\Pstr[0.4cm]{ s = s'
\cdot (q)q \cdot u \cdot (m-q,45){m} }$. We have $\pview{s} =
\pview{s'} \cdot q \cdot m$. Clearly $m$ is unanswered in $s$. Let
$r$ be an O-question in $\pview{s'}$ and suppose that $r$ is
answered in $s$ by some move $a$. By the induction hypothesis, $r$
is unanswered in $s'$ therefore $a$ necessarily appears in the
segment $u$:

\begin{center}
\ifLoadPGFengine
\pstr[0.7cm]{
\nd{s = }(l1){\cdots \ }
\nd(r){r^O}
\nd(r1){\cdots}
\nd{\ }(q){q^P}
\nd{\ }(l2){\cdots\ }
\nd(a-r,35){a^P}
\nd(r2){\cdots}
\nd{\ }(m-q,30){m^O}
\pstrPGFbrace{l1}{r1}{5pt}{$s'$}
\pstrPGFbrace{l2}{r2}{5pt}{$u$}
}\ .
\else
\pstr[0.7cm]{ s = \underbrace{\cdots\ \nd(r){r^O}
\cdots }_{s'} \ \nd(q){q^P} \ \underbrace{\cdots\ \nd(a-r,35){a^P}
\cdots }_{u} \ \nd(m-q,30){m^O} } \ .
\fi
\end{center}


But since $m$ is justified by $q$, by lemma \ref{lem:justfied_by_unanswered} $q$ must be unanswered in $s_{< m}$. In particular, the pending
question at $s_{\prefixof a}$ cannot be $r$ since the unanswered question $q$  is played after $r$. This gives a contradiction since by well-bracketing $a$ should answer the pending question. Hence $r$ is unanswered in $s$.
\qed


\subsection{P-incremental justification}
P-incremental justification is a generalization of well-bracketing to question moves:

\begin{definition}
A play $s m$ of even length is said to be \defname{P-incrementally
justified}, or \emph{P-i.j.} for short, if $m$ points to the last
unanswered O-question in $\pview{s}$ with order strictly greater
than $\ord{m}$.

 A strategy $\sigma$ is said to be \defname{P-incrementally justified}, if all plays in $\sigma$ ending with a P-question are
P-incrementally justified.
\end{definition}
Let $\sigma$ be a strategy. We write $\mathcal{P}(\sigma)$ to denote the subset of $\sigma$ consisting of plays whose even-length prefixes are all P-i.j.
Hence P-i.j.\ strategies are precisely those verifying the relation $\sigma = \mathcal{P}(\sigma)$.
\begin{proposition}
\label{prop:char_pincr}
Let $\sigma$ be a \emph{P-well-bracketed} strategy on an arena $A\neq \bot$.
Under assumptions (A1) and (A2), the following statements are equivalent:
\begin{enumerate}
\item[(i)] $\sigma$ is P-incrementally justified,
\item[(ii)] for $s \, q \in \sigma$ with $q$ a P-question, $q$ points to the last O-question in $\pview{s}$ with order $>\ord{q}$,
\item[(iii)] for $s \, q \in \sigma$ with $q$ a P-question, $q$ points to the last O-move in $\pview{s}$ with order $>\ord{q}$.
\end{enumerate}
\end{proposition}
\proof
$(i)\iff(ii)$: By lemma \ref{lem:oq_in_pview_unanswered}, O-question occurring in $\pview{s}$ are all unanswered.

$(ii)\iff(iii)$: Because of (A1) and (A2), $\ord{q} \geq 0$ thus an O-move with order $>\ord{q}$ is necessarily an O-question.
\qed
\bigskip

Putting proposition \ref{prop:char_pincr} and
\ref{prop:char_wellbrack} together we obtain:
\begin{proposition}
Under assumption (A1) and (A2),
a strategy $\sigma$ on $A\neq \bot$
is \emph{P-well-bracketed} and
 \emph{P-incrementally justified} if and only if
for $s \, m \in \sigma$, $m$ points to the last O-move in $\pview{s}$ with order $>\ord{m}$.
\end{proposition}

\subsection{Closed P-incremental justification}
\label{sec:closedpij}

\begin{definition}
\label{def:closedpij} Let $s m$ be an even-length play on some game
$A \rightarrow B$. $s m$ is said to be
\defname{closed P-incrementally justified} (closed P-i.j.\ for short)
just if
\begin{itemize}
\item $s m$ is P-incrementally justified;
\item and if $m$ is an initial move in $A$ then its justifier $n$ (initial in
$B$) verifies $\ord_A m \geq \ord_B n$.
\end{itemize}

\noindent A strategy $\sigma$ is \defname{closed P-i.j.} just if all
plays in $\sigma$ ending with a P-questions are closed P-i.j.
\end{definition}

\begin{example}
For any game $A$, the identity strategy $id_A$ is closed P-i.j.
\end{example}


\begin{lemma}
\label{lem:closedpij_singleBinitmove} Let $\sigma : A \lingamear B$
be a P-i.j.\ strategy.
\begin{enumerate}[(i)]
\item If for each initial move $m$ of $A$ occurring in some play of $\sigma$ we have $\ord_A m \geq \ord{B}$, then $\sigma$ is closed P-i.j.
\item Suppose that $A=A_1\times \ldots \times A_n$ where each  of the $A_i$ are prime arenas. If for each initial move $m_i$ of $A_i$, for $i \in \{1..n\}$, occurring in some play of $\sigma$ we have $\ord A_i \geq \ord{B}$, then $\sigma$ is closed P-i.j.
\end{enumerate}
\end{lemma}
\proof
(i) This is a direct consequence of the definition since $\ord B \geq \ord_B b$ for every move $b$ initial in $B$. (ii) Take an initial move $m$ of $A$. We have $\ord_A m = \ord_{A_i} m$ for some $i$. This is in turn equal to $\ord A_i$ since $A_i$ is prime. By hypothesis it is greater than $\ord{B}$ hence we can conclude using (i).
\qed
%end of proof
\smallskip

\begin{example}
The simply-typed term $x : (o^1\rightarrow o^2)\times o^3 \vdash \lambda y^o . \pi_2 x : o^4 \rightarrow o^5$ has a P-i.j.\ denotation. The second part of the previous Lemma cannot be used because its hypothesis is not verified, and indeed the denotation is not closed P-i.j.\ since it contains the play $q^5 q^3$ and we have $\ord_{(o^1\rightarrow o^2)\times o^3} q^3 = 0 < 1 = \ord_{o^4 \rightarrow o^5} q^5$.
\end{example}


Observe that the ``P-incremental justification'' property is preserved across the  {\it curry} isomorphism,
but this is not the case for closed P-incremental justification. It is possible to have two isomorphic strategies $\sigma$ and
$\mu$ such that one is closed P-i.j.\ but not the other. For instance any strategy $\sigma$ that is P-i.j.\ on the game $I
\lingamear A$ is also closed P-i.j. When seen as a strategy on the isomorphic game $A$, however,
$\sigma$ is not necessarily closed P-i.j.\footnote{In particular, every P-i.j.\
strategy $\sigma$ on the game $!A_1 \otimes \ldots \otimes !A_n
\lingamear B$, is isomorphic, up to arena-tagging of the moves, to
the closed P-i.j.\ strategy $\Lambda^n(\sigma)$ on the game $I
\lingamear (A_1,\ldots,A_n,B)$, where $\Lambda$ denotes the {\it curry} isomorphism.}; thus the distinction between the games $I
\lingamear A$ and $A$ matters. This is because the definition of closed P-i.j.\ strategy specifically refers to the moves of the
arena in the left-hand side of the function space arrow $\lingamear$.
A consequence of this is that the category of closed P-i.j.\ strategies that we will introduce later on, is neither monoidal closed nor cartesian closed.



\section{The game model}
In this section we build a categorical game model of closed P-i.j.\ strategies.

\subsection{Interaction sequences}
In this preliminary section we recall some basic definitions and results on interaction sequences.

Let $A$,$B$ and $C$ be three games. We say that $u$  is an
\defname{interaction sequence} of $A$,$B$ and $C$ whenever $u\filter
A,B$ is a valid position of the game $A\lingamear B$ (\ie $u\filter
A,B \in P_{A\lingamear B}$) and  $u\filter B,C$ is a valid position
of the game $B\lingamear C$. We write $Int(A,B,C)$ to denote the set
of all such interaction sequences.

Let $\sigma:A\lingamear B$ and $\mu:B\lingamear C$ be two
strategies. We write $\sigma \parallel \mu$ to denote the set of
interaction sequences that unfold according to the strategy $\sigma$
in the $A,B$-projection of the game and to $\mu$ in the
$B,C$-projection:
$$ \sigma \parallel \mu = \{ u \in Int(A,B,C) \ | \ u\filter A,B \in \sigma \wedge u \filter B,C \in \mu \} \ .$$
The composite of $\sigma$ and $\mu$ is then defined as $\sigma ; \mu
= \{ u \filter A,C \ | \ u \in \sigma \parallel \tau \}$.

The diagram below shows the structure of an interaction sequence
from $\sigma \parallel \mu$. There are four states represented by
the rectangular boxes. The content of the state shows who is to play
in each of the game $A\lingamear B$, $B\lingamear C$ and
$A\lingamear C$. For instance in state $OPP$, it is O's turn to play
in $A\lingamear B$ and P's turn to play in $B\lingamear C$ and
$A\lingamear C$. Arrows represent the moves. When specifying
interaction sequence, the following bullet symbols are used to
represent moves: $\pmove$ for P-moves, $\omove$ for O-moves,
$\pomove$ for a move playing the role of P in $A\lingamear B$ and O
in $B\lingamear C$ and $\opmove$ for the symmetric of $\pomove$. We
sometimes add a subscript to the symbols $\pmove$ and $\omove$ to
denote the component in which the moves is played ($A$ or $C$).


\tikzstyle{state}=[rectangle,draw=blue!50,fill=blue!20,thick,minimum
height = 4ex, text width=4cm] \tikzstyle{move}=[->,shorten
<=1pt,>=latex',line width=1pt] \tikzstyle{intmove}=[dashed]
\tikzstyle{extomove}=[color=\extomovecolor]
\tikzstyle{genomove}=[]%[dashed]
\tikzstyle{genpmove}=[color=\genpmovecolor]
\def\sep{1.5cm}
\begin{figure}[htbp]
\begin{center}
\begin{tikzpicture}[node distance=1.7cm]

% the four states
\path
 node(oooT)  [state] {}
 node(opp)   [state, below of=oooT] {}
 node(pop)   [state, below of=opp]  {}
 node(oooB)  [state, below of=pop] {}
 node(title) [anchor=south, at=(oooT.north), minimum height = 4ex, text width=4cm] { };

\path
% text in the title centered in 3 columns
  ([xshift=-\sep]title) node {$A\lingamear B$}
        (title) node {$B\lingamear C$}
        ([xshift=\sep]title) node {$A\lingamear C$}

% text in the states centered in 3 columns
  ([xshift=-\sep]oooT) node {O}
        (oooT) node {O}
        ([xshift=\sep]oooT) node {O}
  ([xshift=-\sep]opp) node {O}
        (opp) node {P}
        ([xshift=\sep]opp) node {P}
  ([xshift=-\sep]pop) node {P}
        (pop) node {O}
        ([xshift=\sep]pop) node {P}
  ([xshift=-\sep]oooB) node {O}
        (oooB) node {O}
        ([xshift=\sep]oooB) node {O}

% text in between two arrows giving the arena of the move
  (oooT) to node {\bf C} (opp)
  (opp) to node {\bf B} (pop)
  (pop) to node {\bf A} (oooB)

% arrows representing the moves
  (opp.20)    edge[move, genpmove]
        node[right] {$\mu$}
        node[left]{$\pmove$} (oooT.-20)
  (oooT.-160) edge[move, extomove, genomove]
        node[left] {$env_\mu$}
        node[right]{$\omove$} (opp.160)
  (pop.20)    edge[move, genomove,genpmove,intmove]
        node[right] {$\sigma$}
        node[left]{$\pomove$} (opp.-20)
  (opp.-160)  edge[move, genomove, genpmove,intmove]
        node[left] {$\mu$}
        node[right]{$\opmove$}  (pop.160)
  (oooB.20)   edge[move, extomove,genomove]
        node[right] {$env_\sigma$}
        node[left]{$\omove$} (pop.-20)
  (pop.-160)  edge[move, genpmove]
        node[left] {$\sigma$}
        node[right]{$\pmove$} (oooB.160);

%\draw[move, genpmove] (3.5cm,-1cm) -- +(1,0) node[right] {Generalised P-move \& External P-move };
%\draw[move, genomove,genpmove] (3.5cm,-2cm) -- +(1,0) node[right] {Generalised O-move \& Generalised P-move};
%\draw[move, genomove,extomove] (3.5cm,-3cm) -- +(1,0) node[right] {Generalised O-move \& External O-move};
\draw[move] (3.5cm,-1cm) -- +(1cm,0cm) node[right] {External move};
\draw[move,intmove] (3.5cm,-2cm) -- +(1cm,0cm) node[right] {Internal
move}; \draw (3.5cm,-3cm) node[anchor=west]
{\textcolor{\extomovecolor}{External O-moves: $\omove$}}; \draw
(3.5cm,-4cm) node[anchor=west]
{\textcolor{\genpmovecolor}Generalised P-move: $\opmove, \pomove,
\pmove$};
\end{tikzpicture}
\end{center}
\caption{Structure of an interaction sequence.} \label{fig:interseq}
\end{figure}

Note that in state OPP, the alternation condition (for each of the
three games involved) prevents the players from playing in A.
Indeed, the O-moves in component $A$ of $A\lingamear B$ are also
$O$-moves in component $A$ of $A\lingamear C$ however the state name
indicates that the next move in $A\lingamear B$ must be an O-move
and the next move in $A\lingamear C$ must be a P-move.

Similarly, in the top state OOO, the players cannot make move in B
since the O-moves in component B of the game $B\lingamear C$
correspond to P-moves in the component B of $A\lingamear B$. However
the state name indicates that the next move in $A\lingamear B$ and
the next move in $B\lingamear C$ must be played by O.


Let $u \in Int(A,B,C)$ and $m$ be a move of $u$. The
\defname{component} of $m$ is $A,B$ if after playing $m$ the game is
under the control of the strategy $\sigma$ and $B,C$ otherwise (if
$\mu$ has control). In other words, the moves $\omove, \pmove \in A$
and $\opmove \in B$ shown on the diagram of Figure
\ref{fig:interseq} have component $A,B$ and $\omove, \pmove \in C$
and $\pomove \in B$ have component $B,C$.


Also we call \defname{generalized O-move in component $A,B$} moves
that play the role of O in the game $A\lingamear B$, that is to say
moves represented by $\opmove$ and $\omove_A$. Similarly $\pomove$
and $\pmove_A$ moves are the \defname{generalized P-moves in
component $A,B$}, $\omove_C$ and $\pomove$ moves are the
\defname{generalized O-moves in component $B,C$} and  $\pmove_C$ and
$\opmove$ moves are the \defname{generalized P-moves in component
$B,C$}.

The P-view (also called \emph{core} in
\cite{McCusker-GamesandFullAbstrac}) of an interaction sequence $u
\in Int(A,B,C)$, written $\overline{u}$ or $\pview{u}$ is defined
as:
\begin{align*}
\pview{u\cdot \extomove{n}} &= \extomove{n} &
\mbox{ if \extomove{$m$} is an \extomove{external O-move} initial in C,}\\
\pview{\Pstr{u\cdot (m)m\cdot v \cdot (n-m,45){\extomove{n}} }} &= \extomove{n} &\mbox{ if \extomove{$m$} is an \extomove{external O-move} non initial in C,}\\
\pview{u \cdot \genpmove{m}} &= \pview{u}\cdot \genpmove{m}  & \mbox{ if \genpmove{$m$} is a \genpmove{generalised P-move}.}\\
\end{align*}

We can show the following property by an easy induction :
\begin{lemma}
\label{lem:pviewAC_eq_ACpview}
 Let $u$ be an interaction sequence in $Int(A,B,C)$ then
$$\pview{u} \filter A,C = \pview{u \filter A,C} \ .$$
\end{lemma}
\proof
  By induction on $u$. It is trivial for the empty sequence.
Let $b$ be a move in $B$. We have $\pview{u\cdot b} \filter A,C =
\pview{u} \filter A,C$. By the I.H.\ this is equal to $\pview{u
\filter A,C} = \pview{u\cdot b\filter A,C}$. Let $m$ be a P-move in
$A$ or $C$ then $\pview{u\cdot m} \filter A,C = (\pview{u} \filter
A,C) \cdot m$ and by the I.H.\ this is equal to $\pview{u \filter
A,C}\cdot m = \pview{(u \filter A,C)\cdot m} = \pview{u \cdot m
\filter A,C}$. Let $c$ be an initial move in $C$. We have $\pview{u
\cdot c \filter A,C}  = \pview{(u \filter A,C) \cdot c} = c =  c
\filter A,C = \pview{u\cdot c} \filter A,C$. Let $u = \Pstr{u_1\cdot
(m){m}\cdot u_2\cdot (n-m){n}}$ with $n$ an O-move in $A\rightarrow
C$. Then necessarily $m\in A,C$ and $ \pview{u\filter A,C} =
\pview{\Pstr[5mm]{u_1\filter A,C \cdot (m){m} \cdot u_2\filter A,C
\cdot (n-m,30){n}}} =
 \pview{u_1 \filter A,C} \cdot \Pstr{(m){m}\cdot (n-m){n}}$. By the I.H.\ this is equal to
$(\pview{u_1}\filter A,C) \cdot \Pstr{(m){m}\cdot (n-m){n}} =
(\pview{u_1}\cdot  \Pstr{(m){m}\cdot (n-m){n}} ) \filter A,C  =
\pview{u_1 \cdot \Pstr[4mm]{(m){m} \cdot u_2\cdot (n-m){n}}} \filter
A,C$
\qed
%end of proof
\bigskip

\subsection{Preliminary results}
In this section, we prove several preliminary lemmas which will help us to study compositionality of P-i.j.\ strategies.
\smallskip

\emph{Notations:} In plays representations, the symbol $\omove$ stands
for an O-move and $\pmove$ for a P-move. If the game considered
is of the form $L\lingamear R$ then the we write
$\omove_L$ and  $\pmove_L$ (resp.\ $\omove_R$ and $\pmove_R$) to represent a move that belongs to
the component $L$ (resp.\ $R$).
For interaction sequences in $Int(A,B,C)$ we use the set of symbols $\{ \omove_A,
\pmove_A, \omove_C, \pmove_C, \opmove, \pomove \}$ as
defined in Figure \ref{fig:interseq}. We also identify each of these symbols with the set of moves of the corresponding kind. For instance ``$m\in \omove_A$'' means that $m$ is an O-move played in $A$. We use the variable $X$ to denote either the component $A,B$ or $B,C$, and the variable $Y$ to denote the opposite component. We write $s \subseqof t$ to say that
$s$ is a subsequence (with pointers) of $t$, $s \prefixof t$ to say
that $s$ is a prefix (with pointers) of $t$ and  $s \suffixof t$ to
say that $s$ is a suffix of $t$.


\begin{lemma}
\label{lem:interjump}
Let $X$ be a component (either  $A,B$ or  $B,C$).
Let $u$ be an interaction sequence of the form
$ u =
\Pstr[0.5cm][2pt]{ \ldots (b){\stk \beta \pmove}  \ldots
 {n}  \ldots  (a-b,30){\stk \alpha\omove}
\ldots m}$ where:
\begin{itemize}[-]
\item $\alpha,\beta$ are external moves in component $X$ (necessarily both played in $A$ or in $C$),
\item  $m$ is either played in $B$ or an external P-move in $X$,
\item  $\alpha$ is visible at $m$ in $X$ \ie $\alpha\in \pview{u \filter X}$ (consequently $\beta$ is also visible).
\end{itemize}
Then $n \not\in \pview{u \filter A, C}$.
\end{lemma}
\proof
Since $\alpha$ is an O-move, $\alpha$ and $\beta$ are necessarily
played in the same arena ($A$ or $C$). Take $v=u$ if $m$ is a
generalized O-move in $X$ and $v=u_{<z}$ otherwise (if $m$ is a
generalized P-move in $X$). The third assumption implies
$\alpha,\beta\in \pview{v}$. The last move in $v$ is necessarily a
generalized O-move in component $X$ (see diagram of Figure
\ref{fig:interseq}) therefore by \cite[Lemma 3.3.1]{Harmer2005} we
have $\pview{v \filter X} = \pview{\overline{v} \filter X} \subseqof
\overline{v} \subseqof \overline{u}$. Thus $\alpha,\beta \in
\overline{u}$ and since $\alpha,\beta$ are played in $A,C$ we have
$\alpha,\beta  \in \overline{u} \filter A,C = \pview{u
\filter A,C}$ (Lemma \ref{lem:pviewAC_eq_ACpview}). Finally
since $n$ lies underneath the $\beta$-$\alpha$ PO-arc it cannot
appear in the P-view  $\pview{u \filter A,C}$. \qed
\bigskip


\begin{lemma}
\label{lem:in_pviewAC_imp_in_pviewX}
Let $u$ be an interaction sequence in $Int(A,B,C)$ and
$n$ be a move of $u$ such that $n\in\pview{u \filter A,C}$:
\begin{enumerate}[i.]
\item
if all the moves in $u_{\suffixof n}$
are played in $C$  then $n \in \pview{u \filter B,C}$;
\item
if all the moves in $u_{\suffixof n}$ are played in $A$ then $n \in \pview{u \filter A,B}$.
\end{enumerate}
\end{lemma}
\proof
(i) We show the contrapositive. Suppose that $n \not\in\pview{u \filter B,C}$ then either:
\begin{itemize}[-]
\item $\pview{u \filter B,C}$ contains an initial move $c_0 \in C$
occurring after $n$ in $u$.


By \cite[Lemma 3.3.1]{Harmer2005}
we have $\pview{u \filter B,C} = \pview{\overline{u} \filter B,C} \subseqof \pview{u}$, thus $c_0$ also occurs in $\pview{u}$.
Since $c_0$ belongs to $C$ we have
$c_0 \in \pview{u} \filter A,C=
\pview{u \filter A,C}$ (Lemma \ref{lem:pviewAC_eq_ACpview}).
Thus the P-view $\pview{u \filter A,C}$
starts with the initial move $c_0$ and
since $n$ occurs before $c_0$, $n$ does not occur in the P-view.

\item or $n$ lies underneath a PO-arc $\beta$-$\alpha$ visible
at $ u \filter B,C$.
By assumption, since $\alpha$ occurs after $n$ in $u$, it must belong to $C$. We can therefore apply Lemma \ref{lem:interjump}
with $X\assignar B,C$ which gives
$n \not\in\pview{u \filter A,C}$.
\end{itemize}

\noindent (ii) Suppose that $n \not\in\pview{u \filter A,B}$ then either:
\begin{itemize}[-]
\item $\pview{u \filter A,B}$ contains an initial move $b_0 \in B$
occurring after $n$ in $u$. But this is impossible since by assumption all the moves occurring after $n$ in $u$ belong to $A$.

\item or $n$ lies underneath a PO-arc $\beta$-$\alpha$ in $A,B$.
By assumption, since $\alpha$ occurs after $n$ it must belong to $A$. We can then conclude using
Lemma \ref{lem:interjump} with $X\assignar A,B$. \qed
\end{itemize}
%end of proof
\bigskip

Note that we cannot completely relax the assumption
which says that moves in $u_{\suffixof n}$ are all in the same component.
For instance take $u = \Pstr[0.5cm]{(co){\omove_C}\thinspace
(b0-co){\opmove} \thinspace
(n){\stk{\pmove_A}{n}} \thinspace
(b1-co){\opmove}}$ then we have $n\in\pview{u\filter A,C}$ but $n\notin\pview{u\filter A,B}$.


%%%%%%%%%%%
% This commented Lemma could be useful be we did not make use of it eventually.
%
% \begin{lemma}
%\label{lem:oviewsegmentinB}
%For any legal sequence $s = \ldots x \cdot r \cdot y$ of a game $A\lingamear B$ if $x, y \in A$ and $x$ is O-visible from $y$ then any move in $r$ occurring in $\oview{s}$ belongs to $A$.
%\end{lemma}
%\proof
%We proceed by induction on the length of the segment $r$.
%Base case $r=\epsilon$ is trivial. Suppose $r = r' \cdot m$.
%If $y$ is an O-move then by the Switching Condition
%$m$ is necessarily in $A$. Clearly $x$ is O-visible from $m$ thus  by the I.H.\ any move from $r$ occurring in the O-view is in $A$.
%
%If $y$ is a P-move then it cannot point to an initial move in $B$. Indeed, suppose that it points to an initial O-move $b_0 \in B$ then
%we have $\oview{s} = b_0 \cdot y$ which contradicts the fact that $x\in \oview{s}$.
%Thus $y$ points to a move in $A$ and again we can conclude using the induction hypothesis.
%\qed
%end of proof
%\bigskip


\begin{lemma}[P-visibility decomposition (from $C$)]
\label{lem:middlepomove}
Let $u = \ldots n' \cdot r \cdot m \in Int(A,B,C)$ where
$n'$ is a $\omove_A$-move verifying $n' \in \pview{u\filter A,C}$ and $m$ is in $\pmove_C \union \opmove \union \pomove$. Then there is a $\pomove$-move $\gamma$ in $r \cdot m$ such that $\gamma \in \pview{u\filter B,C}$ , $n' \in \pview{u_{\leq \gamma} \filter A,B}$ and $\gamma$ is justified by a move occurring before $n'$.
\end{lemma}
\proof
By induction on $|r|$.
If $r=\epsilon$ then necessarily $u = \ldots \stk{\omove_A}{n'} \thinspace\stk \pomove m$ where $m$ points before $n'$ ($n'$ being played in $A$ cannot justify $m$ played in $B$) so we just need to take $\gamma = m$.
If $|r|=1$ then either
$u = \ldots \stk{\omove_A}{n'} \pomove\thinspace\stk {\pmove_C} m$
or $u = \ldots \stk{\omove_A}{n'} \pomove\thinspace\stk \opmove m$.
In both cases we can take $\gamma$ to be the $\pomove$-move between $n'$ and $m$.
Suppose $|r|>1$. Let $m^-$ denote the move preceding $m$ in $u$.
We proceed by case analysis:
\begin{asparaenum}[-]
\item Suppose $m \in \pmove_C$ and $m^- \in \omove_C$.
Let $q$ be the external P-move that justifies $m^-$.
Since $n' \in \pview{u\filter A,C}$, $q$ must occur after $n'$ in $u$:
\begin{center}
\begin{tikzpicture}
\matrix (m) [matrix of math nodes]
{
A & \stackrel\sigma{\longrightarrow} & B & \stackrel\mu{\longrightarrow} & C \\
&\vdots&&\vdots\\
n' \omove\\
&\vdots&&\vdots  \\
&& & &  \node(q){\pmove q};  \\
&\vdots&&\vdots  \\
&& & &  \node(mp){\omove m^-};  \\
&& & &  \pmove m\  \\
};
\draw[tableptr] (mp.west) .. controls +(120:0.5cm) and +(210:0.5cm) .. (q.west);
\end{tikzpicture}
\end{center}

Thus we can use the induction hypothesis (with $u\assignar u_{\prefixof q}$): there is a $\pomove$-move $\gamma$
in $u_{]n',q]}$ pointing before $n'$ such that $\gamma \in \pview{u_{\prefixof q} \filter B,C}$, $n' \in \pview{u_{\prefixof \gamma} \filter A,B}$.
Moreover $\pview{u_{\prefixof q} \filter B,C} \prefixof \pview{u_{\prefixof m} \filter B,C}$ (since $q$ is visible from $m$ in $B,C$) thus we have $\gamma \in \pview{u_{\prefixof m} \filter B,C}$ as required.

\item Suppose $m \in \pmove_C$ and $m^- \in \pomove$.
Again we can conclude using
the induction hypothesis with $u \assignar u_{\prefixof m^-}$.

\item Suppose $m \in \pomove$.

Suppose that all the moves in $r$ are in $A$.
Then $r$ is of the form $(\pmove_A \omove_A)^*$ (where $(\cdot)^*$ denotes the Kleenee star operator).
We just need to take $\gamma = m$.
Indeed, moves in $u_{\suffixof m}$ are all in $A$
and by assumption $n'\in\pview{u\filter A,C}$  therefore
Lemma \ref{lem:in_pviewAC_imp_in_pviewX}(ii) gives
$n'\in\pview{u\filter A,B}$.
Also, since $m$ is a $\pomove$-move,
its justifier is a $\opmove$-move but $r$ contains only $\omove$ and $\pmove$ moves hence $m$'s justifier must occur before $n'$.

Suppose that $r$ contains at least one move in $B$. Let $b$ be the last such move, then $u$ is of the form $\ldots n' \cdot \ldots \cdot \stk\opmove  b \cdot (\pmove_A \omove_A)^* \cdot\thinspace\stk\pomove m $. We then have
$u\filter B,C = \ldots n' \cdot \ldots \cdot
\thinspace\stk\opmove b \thinspace\cdot \stk\pomove m $ thus $b \in \pview{u\filter B,C}$. We can then conclude by applying the induction hypothesis with $u \assignar u_{\prefixof b}$.

\item Suppose $m \in \pomove$.
If $m^- \in \opmove$ then the I.H.\ with $u \assignar u_{\prefixof m^-}$ permits us to conclude.
If $m^- \in \omove_C$ then we conlude by applying  the I.H.\ on $u \assignar u_{\prefixof q}$ where $q$ is the external P-move in $C$ justifying
$m^-$. \qed
\end{asparaenum}
%end of proof
\bigskip

We now show the lemma symmetric to the previous one:
\begin{lemma}[P-visibility decomposition (from $A$)]
\label{lem:middleopmove}
Let $u = \ldots n' \cdot r \cdot m \in Int(A,B,C)$ where
$n'$ is an O-move \emph{non initial} in $C$ verifying $n' \in \pview{u\filter A,C}$ and $m$ is in $\pmove_A \union \opmove \union \pomove$. Then there is a $\opmove$-move $\gamma$ in $r \cdot m$ such that $\gamma \in \pview{u\filter A,B}$ , $n' \in \pview{u_{\leq \gamma} \filter B,C}$ and $\gamma$ is justified by a move occurring before $n'$.
\end{lemma}
\proof
The proof is almost symmetrical to the previous one (Lemma \ref{lem:middlepomove}). We proceed by induction on $|r|$.
If $r=\epsilon$ then necessarily $u = \ldots \stk {\omove_C} {n'} \thinspace\stk \opmove m$ where $m$ points before $n'$ (it cannot point to $n'$
since $n'$ is not initial in $C$). Thus we just need to take $\gamma = m$.

If $|r|=1$ then either
$u = \ldots \stk {\omove_C} {n'} \thinspace\opmove\thinspace\thinspace\stk{\pmove_A} m$
or $u = \ldots \stk {\omove_C} {n'} \thinspace\opmove\thinspace\thinspace\stk \pomove m$.
In both cases we can take $\gamma$ to be the $\opmove$-move between $n'$ and $m$.
Suppose $|r|>1$. Let $m^-$ denote the move preceding $m$ in $u$.
We do a case analysis:
\begin{enumerate}[i.]
\item Suppose $m \in \pmove_A$ and $m^- \in \omove_A$.
Let $q$ be the external P-move that justifies $m^-$.
Since $n' \in \pview{u\filter A,C}$, $q$ must occur after $n'$ in $u$:
\begin{center}
\begin{tikzpicture}
\matrix (m) [matrix of math nodes]
{
A & \stackrel\sigma{\longrightarrow} & B & \stackrel\mu{\longrightarrow} & C \\
&\vdots&&\vdots\\
&&&& \omove\ n'\\
&\vdots&&\vdots  \\
\node(q){q \pmove};  \\
&\vdots&&\vdots  \\
\node(mp){m^- \omove};  \\
m \pmove  \\
};
\path (mp) edge[tableptr] (q);
\end{tikzpicture}
\end{center}

Thus we can use the induction hypothesis (with $u\assignar u_{\prefixof q}$): there is a $\opmove$-move $\gamma$
in $u_{]n',q]}$ pointing before $n'$ such that $\gamma \in \pview{u_{\prefixof q} \filter A,B}$, $n' \in \pview{u_{\prefixof \gamma} \filter B,C}$.
Moreover $\pview{u_{\prefixof q} \filter A,B} \prefixof \pview{u_{\prefixof m} \filter A,B}$ (since $q$ is visible from $m$ in $A,B$) thus we have $\gamma \in \pview{u_{\prefixof m} \filter A,B}$ as required.

\item Suppose $m \in \pmove_A$ and $m^- \in \pomove$ then again we can conclude using the I.H.\ with $u \assignar u_{\prefixof m^-}$.

\item Suppose $m \in \opmove$.
\begin{itemize}[-]
\item Suppose that $r$ does not contain any move in $B$  then $r$ is of the form $(\pmove_C \omove_C)^*$.

We just need to take $\gamma = m$.
Indeed:
\begin{enumerate}
\item By lemmma \ref{lem:in_pviewAC_imp_in_pviewX}(i)
we have $n'\in \pview{u\filter B,C}$.

\item $m$ is justified by a move occurring before $n'$.
Indeed, if $m$ is justified by a $\pomove$-move then since $n' \cdot r$ contains only $\omove$ and $\pmove$ moves, $m$'s justifier must occur before $n'$.
If $m$'s justifier is an initial $\omove_C$-move $c_i$, then by P-visibility we have $c_i \in \pview{u\filter B,C}$
but since the P-view computation ``stops'' when reaching an initial moves, an because by (a) $n'$ also belongs to the P-view, $n;$
necessarily occurs after $c_i$.
\end{enumerate}


\item Suppose that $r$ contains some move in $B$. Let $b$ be the last such move. Then $u$ is of the form $u = \ldots n' \cdot \ldots \cdot \stk\opmove  b \cdot (\pmove_A \omove_A)^* \cdot\ \stk\pomove m $.
So we have
$u\filter B,C = \ldots n' \cdot \ldots \cdot \stk\opmove  b \cdot \stk\pomove m $ hence $b \in \pview{u\filter B,C}$. We can now
conclude by applying the I.H.\ with $u \assignar u_{\prefixof b}$.
\end{itemize}

\item Suppose $m \in \pomove$.
If $m^- \in \pomove$ then the I.H.\ with $u \assignar u_{\prefixof m^-}$ permits us to conclude.
If $m^- \in \omove_A$ then we conclude by applying the I.H.\ on $u \assignar u_{\prefixof q}$ where $q$ is the external P-move in $A$ justifying $m^-$.
\qed
\end{enumerate}
%end of proof
\bigskip

We now use the two preceding Lemmas to show
the following useful result:
\begin{lemma}[Increasing order lemma]
\label{lem:increasing_order}
Let $u = \ldots n' \cdot r \cdot m \in Int(A,B,C)$ where
\begin{enumerate}
\item
$n'$ is an external O-move in compoment $X$
($n'\in\omove_A$ and $X=A,B$, or $n'\in\omove_C$ and $X=B,C$)  non initial in $C$,
\item $n' \in \pview{u\filter A,C}$,
\item $m$ is either played in $B$ (\ie in $\opmove$ or $\pomove$) or is an external P-move in $Y$
(in $\pmove_C$ if $n'\in\omove_A$, or in $\pmove_A$ if $n'\in\omove_C$),
\item $m$'s justifier occurs before $n'$,
\item $u\filter Y$ is P-i.j.,
\item $u_{\prefixof b}\filter X$ is P-i.j.\ for every $B$-move $b$ occurring in $u$ such that $b$ is a generalized P-move in $X$ and is not initial in $B$.
\end{enumerate}
Then:
$$ \ord_{Y} m \geq \ord_{A\lingamear C} n' \ .$$
\end{lemma}
\proof
If $n' \in\omove_C$ (resp.~if $n'\in\omove_A$)
then by Lemma \ref{lem:middleopmove}
(resp.~Lemma \ref{lem:middlepomove})
there is an occurrence in $r \cdot m$ of a non-initial B-move $\gamma$ of type $\opmove$
(resp.~$\pomove$) such that $\gamma \in \pview{u\filter Y}$ , $n' \in \pview{u_{\leq \gamma} \filter X}$ and $\gamma$ is justified by a move occurring before $n'$.

There are six possible cases depending on
the type of the moves $n'$ and $m$:
$(n',m) \in \omove_A \times (\pmove_C\union\opmove\union\pomove)
\union \omove_C \times (\pmove_A\union\opmove\union\pomove) $.
The following diagram illustrates the cases $(n',m)
\in \omove_A\times\pmove_C$ (left)
and  $(n',m)
 \in \omove_C\times\pmove_A$  (right):
\begin{center}
\begin{tikzpicture}
\matrix [matrix of math nodes]
{
A & \longrightarrow & B &
 \longrightarrow & C \\
&\vdots&&\vdots\\
&&&& \node(n){\omove}; \\
&\vdots&\node(gj){\opmove};&\vdots\\
n' \omove \\
&\vdots&&\vdots  \\
&&\node(g){\gamma \pomove}; \\
&\vdots&&\vdots  \\
&&&&\node(m){m \pmove}; \\
};
\path (m) edge[tableptr] (n)
      (g) edge[tableptr] (gj);
\end{tikzpicture}
\hspace{2cm}
\begin{tikzpicture}
\matrix [matrix of math nodes]
{
A & \longrightarrow & B & \longrightarrow & C \\
&\vdots&&\vdots\\
& \node(n){\omove}; \\
&\vdots& &\node(gj){\vdots};\\
&&&&n' \omove \\
&\vdots&&\vdots  \\
&&\node(g){\gamma \opmove}; \\
&\vdots&&\vdots  \\
\node(m){m \pmove}; \\
};
\path (m) edge[tableptr] (n)
      (g) edge[tableptr] (gj);
\end{tikzpicture}
\end{center}



We have:
\begin{equation}
\ord_Y \gamma \geq \ord_X \gamma \label{eqn:gammaorderXY}
\end{equation}
Indeed, if $n' \in\omove_C$ then $X=B,C$ and $Y=A,B$ and by Lemma
\ref{lem:compositionorder} we have $\ord_{A\lingamear B} \gamma \geq
\ord_{B\lingamear C} \gamma$. If $n\in\omove_A$ then $\gamma$ is a
$\pomove$-move therefore it is not initial in $B$ and Lemma
\ref{lem:compositionorder} gives $\ord_{A\lingamear B} \gamma =
\ord_{B\lingamear C} \gamma$.

Hence:
\begin{align*}
\ord_{A\lingamear C} n'
& = \ord_{X} n' & \mbox{(n' non initial in $C$ \& Lemma \ref{lem:compositionorder})} \\
& \leq \ord_{X} \gamma & \mbox{($u_{\prefixof \gamma}\filter X$ is P-i.j.\  by the $6^{th}$ hyp.\ \& $\gamma$'s justifier occurs before $n'$)} \\
& \leq \ord_{Y} \gamma & \mbox{(By Eq.\ \ref{eqn:gammaorderXY})} \\
& \leq \ord_{Y} m & \mbox{($u\filter Y$ is P-i.j. \&
by 4$^{th}$ hyp.\ $m$'s justifier occurs before $\gamma$)}. \qed
\end{align*}
%end of proof
\bigskip


\begin{lemma}
\label{lem:visibleatprefixofu}
Let $u\in Int(A,B,C)$ such that
$u = \ldots \gamma \ldots \delta \ldots m$
where $m$ is a generalized P-move in $X$,
$\gamma \in \pview{u\filter A,C}$  and $\delta \in \pview{u\filter X}$. Then $\gamma \in \pview{u_{\prefixof \delta} \filter A,C}$.
\end{lemma}
\proof
First we remark than $\delta$ must occur in $\pview{u}$.
Indeed, $\delta \in \pview{u\filter X} = \pview{u_{< m} \filter X} \cdot m$ therefore $\delta \in \pview{u_{< m} \filter X}$ and since the move preceding $m$ in $u$ is necessarily a generalized O-move in $X$, we can use Lemma 3.3.1 from \cite{Harmer2005}:
\begin{align*}
\delta \in \pview{u_{< m} \filter X}
&= \pview{\pview{u_{<m}}\filter X} & \mbox{(Lemma 3.3.1 from \cite{Harmer2005})}\\
&\subseqof \pview{u_{<m}} \\
&\subseqof \pview{u} \ .
\end{align*}

Clearly, $\pview{u_{\prefixof \delta} \filter A,C}$ is a prefix of $\pview{u \filter A,C}$, indeed:
\begin{align*}
\pview{u_{\prefixof \delta} \filter A,C}
& = \pview{u_{\prefixof \delta}}\filter A,C
  & \mbox{(Lemma \ref{lem:pviewAC_eq_ACpview})}  \\
& \prefixof \pview{u}\filter A,C
  & \mbox{($\delta \in \pview{u}$)} \\
& = \pview{u\filter A,C}
  & \mbox{(Lemma \ref{lem:pviewAC_eq_ACpview})} \ .
\end{align*}

Finally since $\gamma \in \pview{u\filter A,C}$ and $\gamma$ occurs before $\delta$ in $u$, we necessarily have $\gamma \in \pview{u_{\prefixof \delta}\filter A,C}$.
\qed
%end of proof
\bigskip

\begin{lemma}
\label{lem:compos_auxiliary_lemma}
Let $X$ be a component and $u \in Int(A,B,C)$ such that
the projection of $u$ on the component $X$ has the form:
$$ u \filter X =
\Pstr[0.5cm][2pt]{ \ldots (n){n}  \ldots
 {\stk {n'}{\omove}}  \ldots  (m-n,30){\stk m {\pmove}}
}$$
and
\begin{enumerate}
  \item $m$ and $n'$ are external move in $X$ (\ie in $A$ if $X =A,B$ and in $C$ if $X=B,C$);
  \item $u\filter X$ is P-i.j.;
  \item $u_{\prefixof b}\filter A,B$ is P-i.j.\ for every $\pomove$-move $b$ occurring in $u$;
  \item $u_{\prefixof b}\filter B,C$ is P-i.j.\ for every $\opmove$-move $b$ not initial in $B$ occurring in $u$.
\end{enumerate}
Then either $\ord_{A\lingamear C} n' \leq \ord_{A\lingamear C} m$ or
$n' \not \in \pview{u\filter A,C}$.
\end{lemma}
\proof
\begin{compactitem}
\item
Suppose that $n'$ occurs in the P-view $\pview{u\filter X}$. Then we have
\begin{equation}
\ord_{A\lingamear C} n'  = \ord_{B\lingamear C} n' \ . \label{eqn:ordnp}
\end{equation}
Indeed, if $X$ is the component $B,C$ then necessarily $n'$ is not initial in $C$ (otherwise it would be the first move in $\pview{u \filter B,C}$, which is not the case since by visibility $n$ must occur before $n'$ in the P-view) and
if $X=A,B$ then $n'$ is in $A$. Thus in both cases, Lemma \ref{lem:compositionorder} gives us the claimed equality.

Thus,
\begin{align*}
\ord_{A\lingamear C} n'
& = \ord_{X} n' & \mbox{(Eq.\
\ref{eqn:ordnp})} \\
& \leq \ord_{X} m & \mbox{($u\filter X$ is P-i.j.)} \\
& = \ord_{A\lingamear C} m & \mbox{(Lemma \ref{lem:compositionorder} \& $m$ is not initial in $C$)} \ .
\end{align*}

\item
Suppose that $n'$ does not occur in the P-view $\pview{u \filter X}$, then $n'$ lies underneath a PO arc occurring in $\pview{u \filter X}$. Let us denote this arc by $\beta$-$\alpha$ where $\beta$ and $\alpha$ denote the arc's nodes. We have:
$$ u \filter X = \ldots
\Pstr[0.5cm]{
 (n){n} \ldots (b){\stk\beta \pmove} \ldots \stk{n'} {\omove}
\ldots (a-b){\stk\alpha \omove}  \ldots (m-n){\stk m {\pmove} }
} $$
with $\ord_X \alpha \leq \ord_X m$ (by P-i.j.\ of $u \filter X$).

\begin{asparaenum}[A.]
\item Suppose $\alpha$ is an external move then so is $\beta$. Indeed, if $X=B,C$ and $\alpha \in \omove_C$ then $\alpha$ can only point to another move in $C$ and
if $X=A,B$ and $\alpha \in \omove_A$ then since $\alpha$ is an O-move in $A,B$, it is not initial in $A$ and therefore its justifier must also be in $A$.

Then instancing Lemma \ref{lem:interjump} with
$n \assignar n'$ gives us $n' \not\in\pview{u \filter A,C}$.

\item Suppose $\alpha$ is a $B$-move then necessarily so is $\beta$. Indeed, if $X=A,B$ then $\alpha \in B$
can only point to a move in $B$, and if $X=B,C$ then
since $\alpha$ is an O-move in the game $B,C$ it is not initial in $B$ and therefore its justfier must also be in $B$.

Now suppose that $n' \in \pview{u\filter A,C}$,
then by Lemma \ref{lem:visibleatprefixofu}
(with $\delta,\gamma \assignar \alpha,n'$)
we have $n' \in \pview{u_{\prefixof \alpha}\filter A,C}$. By the 3$^{rd}$ and 4$^{th}$ hypothesis, $u_{\prefixof \alpha}\filter X$ is P-i.j.\ and we can use Lemma \ref{lem:increasing_order} on $u_{\prefixof \alpha}$:
\begin{align*}
\ord_{A\lingamear C} n'
& \leq \ord_{Y} \alpha & \mbox{(Lemma \ref{lem:increasing_order} with $u\assignar u_{\prefixof \alpha}$)} \\
& = \ord_{X} \alpha & \mbox{(Lemma \ref{lem:compositionorder} \& $\alpha$ non initial in $B$)} \\
& \leq \ord_{X} m & \mbox{($u \filter X$ is P-i.j.)} \\
& = \ord_{A\lingamear C} m & \mbox{(Lemma \ref{lem:compositionorder} \& $m$ is not initial in $C$)} \ . \qed
\end{align*}
\end{asparaenum}
\end{compactitem}
%end of proof
\bigskip


\subsection{Linear composition}

\begin{proposition}[Linear composition]
\label{prop:closedpijcompose} Let $\sigma : A \lingamear B$ and $\mu
: B \lingamear C$ be two well-bracketed (P-visible) strategies then
\begin{enumerate}[(I)]
\item $\sigma$ closed P-i.j.\ $\wedge$ $\mu$ P-i.j.
$\implies$ $\sigma ; \mu$  P-i.j.;
\item $\sigma, \mu$ closed P-i.j.
$\implies$ $\sigma ; \mu$ closed P-i.j.
\end{enumerate}
\end{proposition}

\proof
Since well-bracketing is preserved by strategy composition \cite[Proposition 2.5]{abramsky94full}, $\sigma ; \mu$ is well-bracketed so we can use the definition of P-i.j.\ from Proposition \ref{prop:char_wellbrack}.

\noindent (I) Let us prove that $\sigma ; \mu$ is P-i.j..
Let $u$ be a play of the interaction $\sigma\ \|\ \mu$
ending with an external P-move $m$
justified by $n$ in $\pview{u \filter A , C}$.
Let $n'$ be an external O-move occurring betweeen $n$ and $m$:
$$ u \filter A,C =
\Pstr[0.5cm][2pt]{ \ldots (n){\stk {n} \omove}  \ldots
 {\stk {n'} \omove}  \ldots  (m-n,30){\stk m \pmove}
}
$$
To show that $u \filter A,C$ is P-incrementally justified, we just
need to prove that either $n'\not\in \pview{u \filter A,C}$ or
$\ord_{A\lingamear C} n' \leq \ord_{A\lingamear C} m$. Note that if
$n'\in \pview{u \filter A,C}$ then necessarily $n'$ is not initial
in $C$ because $n$ occurs before $n'$ in $\pview{u \filter A,C}$.

Let $E$ denote one of the two external arenas ($A$ or $C$), $X$ be
the corresponding component (\ie $X=A,B$ if $E=A$ and $X=B,C$
if $E=C$) and $Y$ denote the other component.
    \begin{enumerate}[1)]
    \item Suppose $m$ and $n$ are two external moves in $E$.

        \begin{enumerate}[{1}.a)]
        \item Suppose $n' \in E$.

        This case corresponds to the situation handled by
        Lemma \ref{lem:compos_auxiliary_lemma}: we have
        either $\ord_{A\lingamear C} n' \leq
        \ord_{A\lingamear C} m$ or $n' \not\in \pview{u
        \filter A,C}$.

        \item Suppose $n' \not\in E$.

        If $n' \in \pview{u\filter A,C}$, then by
        Lemma \ref{lem:increasing_order} with $X\assignar Y$
        we have $ \ord_{A\lingamear C} n'  \leq \ord_X m$
        and since $m$ is not initial in $C$, Lemma
        \ref{lem:compositionorder} gives $\ord_X m =
        \ord_{A\lingamear C} m$, thus $\ord_{A\lingamear C}
        n' \leq \ord_{A\lingamear C} m$.
        \end{enumerate}

        \item \label{case:mA} Suppose $m \in A$ and $n \in C$.

        Then $m$ is an initial move in $A$   pointing to a $\opmove$-move
        $b_0$ initial in $B$ which in turn points to the $\omove_C$-move $n$ initial in $C$.

        This situation differs from the previous case because the justifier of
        $m$ in the game $A, C$ differs from its justifier in $A,B$
        (see Sec.\ \ref{sec:strategy_composition} for the definition of
        projection on the overall component $A,C$),
        thus it is not guaranteed that $m$'s justifier in $A,C$ occurs before $n'$
        so we cannot use Lemma \ref{lem:increasing_order}.

        Let us assume that $n'\in \pview{u\filter A,C}$ and
        prove that we necessarily have $\ord_{A\lingamear C} n'
        \leq \ord_{A\lingamear C} m$.
        \begin{itemize}[-]
        \item Suppose $n'$ occurs before $b_0$. (Thus we cannot use Lemma \ref{lem:increasing_order}).
        Up to now we have only used the fact that $\sigma$ and $\mu$ are P-i.j. The assumption that $\sigma$ is  \emph{closed} P-i.j.\ now becomes crucial.

        Since $n' \in \pview{u\filter A,C}$ and
        $b_0 \in \pview{u\filter B,C}$, applying Lemma \ref{lem:visibleatprefixofu}
        with $X\assignar B,C$ and $\delta,\gamma \assignar b_0,n'$ gives
        $n' \in \pview{u_{\prefixof b_0}\filter A,C}$. This allows us to apply Lemma \ref{lem:increasing_order} on $u_{\prefixof b_0}$:
            \begin{align*}
            \ord_{A\lingamear C} m
            = \ord_A m
            & \geq \ord_B b_0 & \mbox{($u \filter A,B$ is closed P-i.j., $m$ is initial in $A$)} \\
            & = \ord_{B\lingamear C} b_0  \\
            & \geq \ord_{A\lingamear C} n' & \mbox{(Lemma \ref{lem:increasing_order} on $u_{\prefixof b_0}$ with $X\assignar A,B$)} \ .
            \end{align*}

        \item Suppose $n'$ occurs after $b_0$ (and necessarily before $m$).

            \begin{enumerate}[a.]
            \item Suppose $n'\in C$. $m$'s justifier occurs before $n'$ in $u$ thus by Lemma \ref{lem:increasing_order} we have $\ord_{A\lingamear C} n' \leq \ord_{A\lingamear B} m
                = \ord_{A\lingamear C} m$.

            \item Suppose $n'\in A$.
                Since $n' \in \pview{u \filter A,C}$, by Lemma \ref{lem:compos_auxiliary_lemma} with $X \assignar A,B$ and $(n,n',m)\leftarrow (b_0, n',m)$ we have $\ord_{A\lingamear C} n' \leq \ord_{A\lingamear C} m$.\smallskip

            (Note that here we could not use Lemma \ref{lem:increasing_order} on $u$ because
            $m$ and $n'$ are both played in $A$. Also, if $A$ has a single initial move then $n'$ is necessarily hereditarily
            enabled by the initial move $m$, thus we can immediately conclude that $\ord_{A\lingamear C} n'
            \leq \ord_{A\lingamear C} m$, but this argument does not work in the general case.)
            \end{enumerate}
        \end{itemize}

    \end{enumerate}

\noindent (II) We now show that $\sigma;\mu$ is closed P-i.j.\
provided that both $\sigma$ and $\mu$ are. Take a play $s m \in
\sigma ; \mu$ such that $m$ is initial in $A$ and let $n$ be the
initial move of $C$ justifying $m$. Let $u \in \sigma \ \|\ \mu$ be
the uncovering of $s m$ ($s m = u \filter A,C$) and $b_0$ be the
initial $B$-move justifying $m$ in $u$.
 We have:
\begin{align*}
\ord_A m & \geq \ord_B b_0 & \mbox{($u \filter A,B \in \sigma$ is closed P-i.j.)} \\
 & \geq \ord_C n & \mbox{($u_{\prefixof b_0} \filter B,C \in \mu $ is closed P-i.j.)}. \qed
\end{align*}
%end of proof
\smallskip

{\it Remark:} The second part of the proposition only gives a
\emph{sufficient} condition for $\sigma ; \mu$ to be closed P-i.j.
It is possible that $\sigma ; \mu$ is closed P-i.j.\
although $\mu$ is not.


\subsection{Composition}

\subsubsection*{Tensor product}

 Given two strategies $\sigma :\ A
\lingamear B$  and $\tau :\ C\lingamear D$, their tensor product is denoted $\sigma \otimes \tau :\ A\otimes B \lingamear C\otimes D$ where $A\otimes B$ denotes the tensor product of the games $A$ and $B$ (See Sec.\ \ref{sec:monoidal}).
\begin{proposition}
If $\sigma :\ A \lingamear B$ and $\tau :\ C\lingamear D$ are P-i.j.\
(resp closed P-i.j.) then so is $\sigma \otimes \tau$.
\end{proposition}
\proof
By establishing the state diagram of the game $A\otimes C \lingamear
B\otimes D$ one can show easily that only player O can switch
between the subgames $A\lingamear B$ and $C\lingamear D$.
Consequently, in the P-view of a play of the game $A\otimes C
\lingamear B\otimes D$, all the moves are played in the same subgame
(\ie all in $A\lingamear B$ or all in $C\lingamear D$).
Hence if the last move of a play $m$ is played in $A\lingamear B$
then $\pview{s\filter A,B} = \pview{s} \filter A,B = \pview{s}$ (and
conversely if $m$ is played in $C\lingamear D$). The result follows
immediately.
\qed
%end of proof
\smallskip

\subsubsection*{Pairing and projection} Given two strategies $\sigma :\ C \lingamear A$ and $\tau :\ C\lingamear B$, let $\langle \sigma , \tau \rangle :\ C \lingamear A\& B$ denote the
pairing strategy as defined in  Sec.\ \ref{sec:pairing}
 where $A\& B$ denotes the product of the games $A$ and $B$.

\begin{proposition}[Pairing]
\label{prop:pij_pairing_projection} \hfill
\begin{itemize}
\item If $\sigma :\ C \lingamear A$ and $\tau :\
C\lingamear B$ are P-i.j.\ (resp.\ closed P-i.j.) then so is $\langle \sigma , \tau \rangle$;

\item For any objects $A$ and $B$, the projections $\pi_1:A\times B \lingamear A$ and $\pi_2:A\times B \lingamear B$ are closed P-i.j.
\end{itemize}
\end{proposition}
The proof is immediate.

\subsubsection*{Promotion}

Let $s$ be a play. We call
\defname{thread} a maximal subsequence of $s$ constituted of moves
that are hereditarily justified by the same occurrence of an initial
move. Let $m$ be a move occurring in $s$. We call thread of $m$ the
only thread in $s$ containing $m$.


Recall that the promotion $\sigma^\dag :\ !A\lingamear !B$ of a strategy  $\sigma :\ !A \lingamear B$, for two well-opened games $A$ and $B$, is given by:
$$ \sigma^\dag = \{ s \in L_{!A\lingamear !B}\ |\ \mbox{for all inital $m$ in $B$, } s\filter m \in \sigma \}$$

Since $B$ is well-opened, plays of $\sigma$ are constituted of a
single thread initiated by some initial $B$-move. Plays of
$\sigma^\dag$ however, are interleaves of potentially infinitely many single-threaded
plays of $\sigma$. One can show easily, using the visibility condition, that the thread of a $P$-move
is always the same as the thread of the preceding $O$-move. Consequently, the P-view of a play is equal to the P-view of the current thread:
if the current thread of a play $s$ is opened by an initial move $b \in B$ then
$\pview{s} = \pview{s \filter b} = \pview{s} \filter b$.


The state of the game is given by an infinite sequence of symbols in $\{O, P\}$, each element of the
sequence indicating who is to play in the corresponding thread.
The diagram on Figure \ref{fig:promotion_state_diagram} illustrates
how the state changes as a play of $\sigma^\dag$ unfolds.
The initial state of the game is $O^\omega$ - an infinite
sequence of O's -- which indicates that O is to play in all the
threads. When O plays an initial move in $B$, it ``opens'' a new
thread so the state of the game becomes $O^k P O^\omega$ where $k$
is the index of the thread being opened. By alternation, $P$ now has to play. His move must be played in a thread
already opened by $O$ and in which $P$ is to play; only one thread is in such state: the $k$th one. Hence after P's move
we are back to state $O^\omega$.

\tikzstyle{state}=[rectangle,draw=blue!50,fill=blue!20,thick,minimum
height = 4ex, text width=1.2cm, text centered]
\tikzstyle{state_nobg}=[thick,minimum
height = 4ex, text width=1.2cm, text centered]
\tikzstyle{omove}=[->,shorten <=1pt,>=latex',line width=0.5pt,bend left=10]
\tikzstyle{pmove}=[->,shorten <=1pt,>=latex',line width=0.5pt,bend left=10, draw=blue!50]
\begin{figure}[htbp]
\begin{center}
\begin{tikzpicture}[node distance=2cm]
% the states
\path
 node(init)  [state, text width=4cm] {$O^\omega$}
 (init)+(-2.8cm,-3cm)
 node(p)     [state, anchor=east,] {$PO^\omega$}
 node(p1)    [state, right of=p]  {$OPO^\omega$}
 node(p2)    [state_nobg, right of=p1] {\ldots}
 node(p3)    [state, right of=p2] {$O^kPO^\omega$}
 node(p4)    [state_nobg, right of=p3] {\ldots} ;
\path
% arrows representing the moves
  ([xshift=-1.4cm]init.south)  edge[omove] node[right]{O} ([xshift=0.2cm]p.north)
  (p.north)    edge[pmove] node[left]{P} ([xshift=-1.5cm]init.south)
  ([xshift=-0cm]init.south)   edge[omove] node[right]{O} ([xshift=0.2cm]p1.north)
  (p1.north)   edge[pmove] node[left]{P} ([xshift=-0.2cm]init.south)
  ([xshift=1cm]init.south)   edge[omove] node[right]{O} ([xshift=0cm]p3.north)
  ([xshift=-0.2cm]p3.north)   edge[pmove] node[left]{P} ([xshift=0.8cm]init.south);
\end{tikzpicture}
\end{center}
\caption{State diagram for plays of $\sigma^\dag$.}
\label{fig:promotion_state_diagram}
\end{figure}



\begin{proposition}[Promotion]
\label{prop:fatcompos_pij} If $A$ and $B$ are two well-opened games
and $\sigma :\ !A \lingamear B$ is a well-bracketed P-i.j.\ strategy
then $\sigma^\dag$ is also well-bracketed and P-i.j. Furthermore if
$\sigma$ is closed P-i.j.\ then so is $\sigma^\dagger$.
\end{proposition}
\proof
$\sigma^\dag$ is well-bracketed by \cite[Proposition
2.10.]{abramsky94full}. For P-incremental justification, the result is a direct consequence of the
fact that the P-view of a play in $\sigma^\dag$ is equal to the P-view of the current thread.
For closed P-incremental justification, the result is immediate.
\qed
%end of proof

\subsubsection*{Composition}

We recall that the composite of $\sigma :\ !A \lingamear B$,
and $\mu :\ !B\lingamear C$ in the co-Kleisli category of games $\mathcal{C}$, written $\sigma
\fatcompos \mu$, is defined as:
$$ \sigma \fatcompos \mu = \sigma^\dag ; \mu \ .$$
From propositions \ref{prop:closedpijcompose} and
\ref{prop:fatcompos_pij} we obtain:
\begin{proposition}
\label{prop:closedpij_fatcompose}
Let $A$ and $B$ be two well-opened games. Let $\sigma :\ !A
\lingamear B$ and $\mu :\ !B\lingamear C$ be two well-bracketed
strategies then:
\begin{enumerate}
\item If $\sigma$ is closed P-i.j.\ and $\mu$ is P-i.j.\ then $\sigma \fatcompos \mu :\ !A \lingamear
C$ is also P-i.j.;
\item If $\sigma$ and $\mu$ are closed P-i.j.\ then so is $\sigma \fatcompos \mu :\ !A \lingamear C$.
\end{enumerate}
\end{proposition}

\subsection{Categories of closed P-i.j.\ strategies}
\label{sec:pijcategory}

We define the category $\mathcal{I}$ of closed P-incrementally justified strategies as follows:
\begin{asparaitem}
\item Objects: games (as defined in Sec.\ \ref{sec:games}),
\item Morphisms $\sigma: A\gamear B$: closed P-i.j.\ strategies for $A\lingamear B$,
\item Composition: the linear strategy composition.
\end{asparaitem}
The results of the previous section show that $\mathcal{I}$ is indeed a monoidal category.

This category is not monoidal closed. Indeed, remember that a P-i.j.\ strategy from $A$ to $B$ is said to be \emph{closed} P-i.j.\ provided that some condition on the move of the game $A\lingamear B$ holds. The problem is that this condition is sensitive to the individual structure of the game $A$ and $B$, and therefore it does not necessarily hold for another game that is isomorphic to $A\lingamear B$. In particular, any P-i.j.\ strategy $\sigma$ on $A\lingamear B$ is isomorphic, up to \emph{currying}, to a \emph{closed} P-i.j.\ strategy on $I \lingamear (A\lingamear B)$. However $\sigma$ itself is not necessarily closed P-i.j. Take for instance the two simply-typed terms $\stentail \lambda x:o\, y:o . y$ and $y :o \stentail \lambda x:o . y$. These two terms have isomorphic denotations in $\mathcal{G}$. However the denotation of the first term is closed P-i.j.\ while the second is only P-i.j.

\subsubsection*{Intentional category}

We define the \defname{intentional category} $\mathcal J$ as the co-Kleisli category of $\mathcal I$.

\begin{proposition}
$\mathcal J$ is a sub-ICC of $\mathcal C$.
\end{proposition}
\proof
The objects of $\mathcal J$ are exactly those of $\mathcal C$.
The morphisms of $\mathcal J$ are a subclass of morphisms of $\mathcal C$. For every object $A$, the identity strategy $id_A$ is closed P-i.j. For every pair of morphisms in $\mathcal J$ the composite is also in $\mathcal J$ by Prop.\ \ref{prop:closedpij_fatcompose}. Thus $\mathcal J$ is a lluf subcategory of $\mathcal C$.
By Prop.\ \ref{prop:pij_pairing_projection},
projections are closed P-i.j., and closed P-i.j.\ strategies are closed under pairing. Because of Lemma \ref{lem:closedpij_singleBinitmove}(i), the incremental evaluation maps are closed P-i.j., and the closed P-i.j.\ strategies are closed under incremental currying.
Hence $\mathcal J$ is a sub-ICC of $\mathcal C$.
\qed
\bigskip

This category will be used to give the intentional game model of safe \pcf\ and safe \ialgol. We write $\mathcal{J}_{ib}$, $\mathcal{J}_{b}$ and $\mathcal{J}_i$ to denote its lluf subcategories of innocent, well-bracketed and innocent and well-bracketed strategies respectively.

\subsubsection*{Extensional category}
Let $\lesssim$ denote the usual intrinsinc preorder of the category $\mathcal C$, and $\lesssim_{\mathcal J}$ denotes the intrinsic preorder on $\mathcal J$. By extension, the relation $\lesssim_{\mathcal J}$ can be defined on morphisms of $\mathcal C$ (it is defined similarly to $\lesssim$ except that the test strategy $\alpha$ ranges over the morphisms of the subcategory $\mathcal{J}$ only).

In \cite{abramsky94full}, it is proved that $\lesssim$ is a CCC precongruence for $\mathcal{C}$. The same proof shows that $\lesssim_{\mathcal J}$ is also a CCC precongruence for $\mathcal{C}$. Consequently by Lemma \ref{lem:quotient_preseverve_subiccrationality},
the \defname{extensional category} $\quotient{\mathcal{J}}{\lesssim_{\mathcal J}}$ is a rational ICC.

\subsubsection*{Interpretation}
By Prop.\ \ref{prop:incrementalcat_model_safelambda},
we have that the ICCs $\mathcal{J}$ and $\quotient{\mathcal{J}}{\lesssim_{\mathcal J}}$ both provide a model of the safe lambda calculus, and by Prop.\ \ref{prop:incrementalcat_model_safepcf}, the rational ICCs $\mathcal{J}_{ib}$ and $\quotient{\mathcal{J}_{ib}}{\lesssim_{{\mathcal J}_{ib}}}$ of innocent well-bracketed closed P-i.j.\ strategies both provide a model of safe \pcf.


\section{Interpretation in the standard game model}

In Chapter \ref{chap:syntactic_gamesem} we have shown using a syntactic argument based on the theory of traversals, that in the standard game model, safe lambda terms are denoted by P-i.j.\ strategies. We now reprove this results using a semantic argument based on the result of the previous section.

This result is not surprising since we already know by Proposition \ref{prop:incrementalcat_model_safelambda} that the ICC category $\mathcal{J}$ of closed P-i.j.\ strategies provides a model of the safe lambda calculus, safe \pcf, and safe \ialgol.

\subsection{Safe lambda calculus with product}

\begin{proposition}
\label{prop:safe_closepij_sem}
  In the standard game model of the simply-typed lambda calculus with product, safe terms are denoted by closed P-i.j.\ strategies.
\end{proposition}
\proof
  By induction on the formation rules that almost safe terms are denoted by P-i.j.\ strategies and safe terms are denoted by \emph{closed} P-i.j.\ strategies.
  \begin{compactitem}
    \item \rulenamet{var} $\sem{x:A \sentail x:A }$ is the identity strategy $id_A$ which is closed P-i.j.

    \item \rulenamet{wk} Take $\Gamma \subset \Delta $ and suppose $\sem{\Gamma \sentail
    s : A}$ is closed P-i.j. Up to a retagging of
    the moves, the two strategies $\sem{\Delta \sentail s : A}$
    and $\sem{\Gamma \sentail s : A}$ are isomorphic. Hence
    $\sem{\Delta \sentail s : A}$ is P-i.j. It is also closed
    P-i.j.\ since none of the new initial moves introduced by
    $\Delta$ occurs in any play of the strategy.

    \item \rulenamet{\times}, \rulenamet{\pi_1} and \rulenamet{\pi_2}: The result follows from the I.H.\ and Proposition \ref{prop:pij_pairing_projection}.

    \item \rulenamet{wk^\times} This case is similar to \rulenamet{wk}.

    \item \rulenamet{app_{as}} Suppose that $\Gamma \asappentail t_0 t_1 \ldots t_n : B$
with $\Gamma \sentail t_0 : (A_1,\ldots,A_n,B)$ and $\Gamma \sentail t_i : A_i$ for $i \in\{ 1..n\}$. By the I.H., for $i \in \{0..n\}$ the strategy
 $\sem{t_i}$ is closed P-i.j. We then have $\sem{t_0 t_1 \ldots t_n} = \langle \sem{ t_0}, \sem{t_1}, \ldots, \sem{t_n} \rangle \fatsemi ev^n$
    where $ev^n$ is the $n$-parameter evaluation strategy. By
    Proposition \ref{prop:pij_pairing_projection} the strategy $\langle \sem{t_0}, \sem{  t_1} , \ldots, \sem{t_n} \rangle$ is closed P-i.j. Since the evaluation map
    $ev^n$ is P-i.j.\ (but not necessarily closed P-i.j.),
    by Proposition \ref{prop:closedpijcompose}.I.\
    $\sem{ \Gamma \sentail t_0 t_1 \ldots t_n : B}$ is P-i.j.

    \item \rulenamet{app} Terms formed with this rule can also be formed with the rule \rulenamet{app_{as}}, therefore by the previous case
    the denotation of the term formed is P-i.j. By the side-condition of the
    rule, all the prime nodes in $\ord{\Gamma}$ have order greater than the order of the term, therefore by
    by Lemma \ref{lem:closedpij_singleBinitmove}(ii), $\sem{ \Gamma \sentail t_0 t_1 \ldots t_n : B}$ is \emph{closed} P-i.j.


    \item \rulenamet{abs} and \rulenamet{abs_{as}}: By the I.H., the premise of the rule has a P-i.j.\ denotation.
    The denotation of the term in the conclusion of the rule is isomorphic, up to currying, to the denotation of the premise. Therefore it is also P.i.j.
    And by the side-condition and Lemma \ref{lem:closedpij_singleBinitmove}(ii) this implies that it is \emph{closed} P-i.j.
        \qed
  \end{compactitem}
%end of proof

\subsection{Safe PCF}

\begin{proposition}
\label{prop:safepcf_closedpij}
  In the standard game model of \pcf, safe terms are denoted by closed
P-incrementally justified strategies.
\end{proposition}
\proof
We first prove the result for $\pcf_1$ - the fragment of \pcf\
containing terms of the form $\Omega_A = Y (\lambda x : A.x)$ but
where no other use of Y is allowed (see
\cite{abramsky:game-semantics-tutorial}). The proof is by structural
induction over the structure of the term:
\begin{asparaitem}
\item The strategy $\sem{\Omega_A} = \bot$ is
clearly closed P-i.j.;
\item The functional rules are treated the same way as in the
corresponding proof for the safe lambda calculus;
\item For the arithmetic rules, we observe that the strategies
$succ$, $pred$ and $cond$ are all closed P-i.j. The fact that
pairing and strategy composition preserve closed P-incremental
justification permits us to conclude.
\end{asparaitem}

We now lift the result to full PCF using the technique of
\emph{syntactic approximant} (see
\cite{abramsky:game-semantics-tutorial}). By \cite[lemma
16]{abramsky:game-semantics-tutorial} we have
$$ \sem{M} = \Union_{n\in\omega} \sem{M_n}$$
where $M_n$ is the $\pcf_1$ term obtained from $M$ by replacing each
subterm of the form $Y N$ with $Y^n N_n$, and $Y^n F$ denotes the
$n$th approximant of $Y F$. Since the $M_n$s are $\pcf_1$ terms, by
the previous result each $\sem{M_n}$ is closed P-i.j.\ and since
closed P-incremental justification is clearly a continuous property,
$\sem{M}$ is also closed P-i.j.
\qed
%end of proof


\subsection{Safe Idealized Algol}

We now extend the game-semantic interpretation to safe \ialgol. The constants of \ialgol\ are all denoted by closed P-incrementally justified strategies:
\begin{lemma} \hfill
\label{lem:iaconst_pij}
\begin{enumerate}[(i)]
\item The strategy denotations of the \ialgol\ constants \iaskip, \iaassign, \iaderef, \iamkvar, $\iaseq_{\iaexp}$,
and $\iaseq_{\iacom}$ are all closed P-i.j.;
\item The memory-cell strategy $cell : I \lingamear\ !\iavar$ is closed P-i.j.
\end{enumerate}
\end{lemma}
\proof
(i) A quick inspection at the view function of these denotations (as defined in Sec.\ \ref{sec:ia_gamemodel}) reveals that they are indeed all closed P-i.j.

(ii) Since the game \iavar\ does not contain any P-question, any strategy on the game $I \lingamear\ !\iavar$ is P-i.j.\ (and therefore also closed P-i.j.). \qed
\bigskip

Our game-semantic analysis of safe \pcf\ immediately extends to strongly safe \ialgol:
\begin{proposition}
  Strongly safe \ialgol\ terms are denoted by closed P-i.j. strategies.
\end{proposition}
\proof
The proof is an adaptation of the proof for Safe PCF. We first show that the result holds for the fragment of \emph{strongly safe \ialgol} in which the only allowed uses of $Y$ are in terms of the form $\Omega$. This is done by induction over the structure of the term: For the functional and arithmetic rules, the proof is the same as for Safe \pcf.
For the imperative rules, the result follow from the fact that \ialgol\ constants are denoted by closed P-i.j.\ strategies (Lemma \ref{lem:iaconst_pij}(i)) and because tensor product and composition both preserve closed P-incremental justification.
For the block-allocation construct, the result follows from the fact that
$cell$ is closed P-i.j.\ (Lemma \ref{lem:iaconst_pij}(ii)) and that pairing and strategy composition both preserve closed P-incremental justification.

The result is then lifted to the whole of strongly safe \ialgol\ using the technique of syntactic approximants as in the PCF case.
\qed
\bigskip

We now want to extend this result to safe \ialgol. This turns out to be slightly more difficult than for the strongly-safe fragment.
Indeed, in safe \ialgol\, the safety restriction only constrains variables from the $\Gamma$-context \ie those that are bound by a $\lambda$-abstraction. The fact that $\Xi$-variables are not constrained is reflected in the semantics. For instance the denotation of the safe \emph{split}-term $\emptyset | x:\iavar \sentail \lambda f:\iaexp\typear \iaexp . \iaderef\ x$ is not closed P-i.j.

We show, however, that safe split-terms are denoted by strategies in which all the plays are closed P-i.j.\ except those containing moves from the $\Xi$-context. Consequently, by ``abstracting'' $\Xi$-variables using the constructs \iamkvar\ or the block-declaration \ianew, we eliminate the plays that are not closed P-i.j. Hence since safe \ialgol\ terms are the \emph{semi-closed} split-terms (\ie with an empty $\Xi$-component), this implies that their denotation is closed P-i.j.

\begin{definition}[P-i.j.\ modulo $\mathfrak{M}$]
\label{def:pij_modulo} Let $\sigma$ be a strategy on some game $A$
and $\mathfrak{M}$ be a set of moves. We say that $\sigma$ is \defname{P-i.j.\
modulo $\mathfrak{M}$} iff every even-length play in $\sigma$ ending with a question that is not in $\mathfrak{M}$ is is P-i.j. Similarly we say that $\sigma$ is \emph{closed} P-i.j.\ modulo $\mathfrak{M}$ iff all such plays are \emph{closed} P-i.j.
\end{definition}
Hence a strategy is P-i.j. if and only if it is P-i.j.\ modulo
$\emptyset$.
\smallskip

The common operations on strategies preserve the property of being P-incremental justification modulo a set of moves:
\begin{lemma}[Composition]
\label{lem:leftcompos_preserv_pijmodulo}
 Let $\sigma : A \rightarrow
B$ and $\mu : B \rightarrow C$.
  Let $\mathfrak{M}$ be any set of moves initial in $A$.
  If $\sigma$ is closed  P-i.j. modulo $\mathfrak{M}$ and $\mu$ is
  P-i.j. (resp. closed P-i.j.) then $\sigma \fatsemi \mu$ is P-i.j. (resp. closed P-i.j.) modulo $\mathfrak{M}$.
\end{lemma}
\proof
We observe that in the proof of compositionality for closed P-i.j.\ strategies, to show that a play $u\filter A,C$ of $\sigma;\mu$ is P-i.j.\ we did not use the fact that \emph{every} play of $\sigma$ is P-i.j., but only that $u\filter A,B$ (resp.\ $u\filter B,C$) is P-i.j.\ and all the prefixes of $u\filter A,B$ and $u\filter B,C$ \emph{ending with a non-initial $B$-move} are P-i.j. Thus the same proof can be used to show that a play $u\filter A,C$ ending with a move not in $\mathfrak{M}$ is P-i.j. \qed
\smallskip

\begin{lemma}[Tensor product]
\label{prop:pijmodulo_tensor}
Let $\sigma :\ A \lingamear B$  and $\tau :\ C\lingamear D$.
Let $\mathfrak{M}_A$ and $\mathfrak{M}_C$ be two sets of moves initial in $A$ and $C$ respectively.
\begin{enumerate}
\item If $\sigma$ and $\tau$ are P-i.j.\ modulo $\mathfrak{M}_A$ and modulo $\mathfrak{M}_C$ respectively
then $\sigma \otimes \tau$ is P-i.j.\ modulo $\mathfrak{M}_A \union \mathfrak{M}_C$;
\item If $\sigma$ and $\tau$ are \emph{closed} P-i.j.\ modulo $\mathfrak{M}_A$ and modulo $\mathfrak{M}_C$ respectively
    then $\sigma \otimes \tau$ is \emph{closed} P-i.j.\ modulo $\mathfrak{M}_A \union \mathfrak{M}_C$.
\end{enumerate}
\end{lemma}
\begin{lemma}[Pairing]
\label{prop:pijmodulo_pairing}
Let $\sigma :\ C \lingamear A$, $\tau :\
C\lingamear B$, and $\mathfrak{M}_C$ be a sets of moves initial in $C$.
\begin{enumerate}
\item If $\sigma$ and $\tau$ are P-i.j.\ modulo $\mathfrak{M}_C$ then so is $\langle \sigma , \tau \rangle$;
\item If $\sigma$ and $\tau$ are closed P-i.j.\ modulo $\mathfrak{M}_C$ then so is $\langle \sigma , \tau \rangle$.
\end{enumerate}
\end{lemma}
The proof of the two previous lemmas is an easy adaptation of the proofs of their counterpart for P-i.j.\ strategies.


\begin{lemma}
\label{lem:cellcomposition_preserve_pijmodulo} Let $\tau : I
\gamear C_2$, $\sigma : C_1 \otimes C_2 \gamear B$  and
$\mathfrak{M}$ be any set of moves initial in $C_1 \otimes
C_2$.
  If $\tau$ is P-i.j. and
  $\sigma$ is P-i.j. (resp. closed P-i.j.) modulo $\mathfrak{M}$
  then $(id_{C_1} \otimes \tau) \fatsemi \sigma$ is P-i.j. (resp. closed P-i.j.) modulo $\mathfrak{M} \inter C_1$.
\end{lemma}
\proof
Let $D = C_1\otimes C_2$.
Let $u \in Int(C_1, D, B)$ be a non-empty interaction play of $\mu = (id_{C_1} \otimes \tau)^\dagger  \| \sigma$, and $m$ denote the last play of $u$. We need to show that if $m$ does not belong to $\mathfrak{M}$ then $u \filter C_1, B$ is P-incrementally justified.

Suppose $m \in C_1 \setminus \mathfrak{M}$. Let $d$ be the initial $D$-move hereditarily justifying $m$, then by definition of $\mu$ we have
$u\filter C_1, D, d \in id_{C_1}$ which implies
that $u\filter C_1, B = u\filter D, B$.
But $u$ is an interaction sequence therefore $u\filter D, B \in \sigma$, and since $\sigma$ is P-i.j.\ modulo $\mathfrak{M}$ this implies that $u\filter C_1, B$ is P-incrementally justified.

Suppose $m\in B$ then necessarily its justifier also occurs in $B$.
By definition of $u$, the play $u\filter D, B$ belongs to $\sigma$ which
is P-i.j.\ modulo $\mathfrak{M}$. Since $m$ belongs to $B$ it cannot be in $\mathfrak{M}$ therefore $u$ is P-i.j. Furthermore, since $\tau$ is P-i.j., so is $(id_{C_1} \otimes \tau)^\dagger$ therefore the play $u\filter C_1, D$ and all its prefixes are P-i.j.
Hence we can  apply Lemma \ref{lem:compos_auxiliary_lemma}
with $X\leftarrow D, B$ and $Y\leftarrow C_1, D$ which shows that $u\filter C_1, B$ is P-i.j. \qed
% end of proof

\begin{lemma}
\label{lem:mkvarcomposition_preserve_pijmodulo}
Let $mkvar : B\typear C$ be the denotation of the \iamkvar\ construct where $B = (\iaexp^1 \typear\iacom)\times\iaexp$ and $C=\iavar$.
If $\sigma:A\typear B$ is a closed P-i.j.\ strategy modulo $\mathcal{M}_A \union \sem{\iaexp^1}$ for some set $\mathfrak{M}_A$ of initial $A$-moves then $\sigma;mkvar$ is closed P-i.j.\ modulo $\mathfrak{M}_A$.
\end{lemma}
\proof
Let $u$ be an interaction sequence such that $u\filter A,C$ ends with a P-question that is not in $\mathfrak{M}_A$.
Then $u\filter A,B$ and $u\filter B,C$ are both P-i.j. Let $m$ denote the last move in $u$ and $n$ be its justifier in $u\filter A,C$. Suppose that an O-move $n'$ occurs in the P-view between $n$ and $m$. We show that its order is necessarily smaller than that of $m$. We necessarily have $m \in\pmove_A$ because there is no P-question in $C$.
\begin{asparaenum}[(a)]
\item
Suppose that $m\in\pmove_A$, $n\in\omove_A$ and $n'\in\omove_A$.
In general, $n'$ does not necessarily appear in the P-view $\pview{u\filter A,B}$ (See proof of compositionality.)
In the present case, however, this case never happens. Indeed, as noted in the proof of Lemma \ref{lem:compos_auxiliary_lemma}, this would imply that $n'$ lies
underneath a $\opmove$-$\pomove$-arc. But this is not possible since the only $\opmove$-move in $B$ is an initial move.
Thus $n'$ occurs in $\pview{u\filter A,B}$ and since $u\filter A,B$ is P-i.j.\ this imply that $n'$ has order smaller than $m$.

\item Suppose that $m\in\pmove_A$, $n\in\omove_A$ and $n'\in\omove_C$.
Take $Y = A,B$ and $X=B,C$. We have that $u\filter Y$ is P-i.j.\ and since $mkvar$ is a P-i.j.\ strategy, for all $B$-move $b$ occurring in $u$, $u_{\prefixof b} \filter X$ is P-i.j.
Thus we can apply Lemma \ref{lem:increasing_order} which shows that $\ord_{A\typear C} n' \leq \ord_{A\typear C} m$.

\item Suppose $m\in\pmove_A$, $n\in\omove_C$.
Then in $A,B$, the move $m$ is justified by a $\opmove$-move $b_0$ itself justified by $n$ in $B,C$.
By definition of the strategy $mkvar$, $n$ and $b_0$ are in fact consecutive moves in $u$, thus $n'$ necessarily occurs after $b_0$.
If $n' \in \omove_C$ then we conclude with Lemma \ref{lem:increasing_order} as in (b) that $\ord_{A\typear C} n' \leq \ord_{A\typear C} m$.
Otherwise $n' \in \omove_A$, and we conclude as in as in (a).
\end{asparaenum}

Hence $u\filter A,C$ is P-i.j. It is \emph{closed} P-i.j.\ because both $u\filter A,B$ and $u\filter B,C$ are.
\qed

\begin{example}
  The unsafe term
  $$f:(\iaexp\typear\iaexp)\typear\iacom \entail \lambda x . f (\lambda y . \underline{x}) \equiv M : \iaexp^1\typear\iacom $$
  is denoted by a strategy $\sem{M}$ that is closed P-i.j.\ modulo $\sem{\iaexp^1}$. But the term
  $\iamkvar\, M\, 0 : \iavar$ is denoted by the strategy $\langle\sem{M}, 0\rangle ; mkvar$ which is closed P-i.j.
\end{example}

\bigskip

Given a safe split-term $\Gamma | \Xi \safeentail M : A$, we write $\sem{\Gamma | \Xi \safeentail M : A}$ to refer to $\sem{\Gamma, \Xi \vdash M : A}$, the game denotation of the corresponding \ialgol\ split-term. For any game $A$ we write $In(A)$ for the set of initial moves in $A$.

\begin{proposition}
\label{prop:safeia_closedpijmodulo} Let $\Gamma | \Xi
\safeentail M : A $ be a safe \ialgol\ split-terms. Its denotation $\sem{\Gamma | \Xi \safeentail M : A}$ is closed P-i.j. modulo
$In(\sem{\Xi})$.
\end{proposition}
\begin{remark}
$In(\sem{\Xi})$ contains only order-$0$ questions because the context $\Xi$ contains variables of type \iavar\ and \iaexp\ only.
\end{remark}
\proof
We only need to prove the result for terms where the only allowed uses of the $Y$ combinator is in subterms of the form $\Omega$, the result then follows immediately using the syntactic approximants technique and continuity of the ``closed P-i.j.'' property.

We proceed by induction on the safe \ialgol\ term. The cases \rulenamet{var},  \rulenamet{wk}, \rulenamet{const}, \rulenamet{succ}, \rulenamet{pred}, \rulenamet{cond} are the same as for the safe \pcf.
\begin{asparaitem}[-]
  \item \rulenamet{var^\ianew}, \rulenamet{wk^\ianew} are similar to
  \rulenamet{var}  and \rulenamet{wk}.

  \item \rulenamet{seq}, \rulenamet{assign}, \rulenamet{deref}
  These constants all have closed P-i.j.\ denotations so the result
  follows from the I.H., Lemma \ref{lem:leftcompos_preserv_pijmodulo},  Proposition \ref{prop:pijmodulo_pairing} and \ref{prop:pijmodulo_tensor}.

  \item \rulenamet{app} The premise of the rule is an almost safe split-term \ie a consecutive applications of safe terms. By the I.H.\ all these terms have a denotation that is closed P-i.j.\ modulo $In(\sem{\Xi})$. Since the evaluation strategy $ev$ is P-i.j., by Lemma \ref{lem:leftcompos_preserv_pijmodulo} this implies that the denotation of the split-term being formed is P-i.j.\ modulo $In(\sem{\Xi})$. Finally, the side-condition of the rule ensures that it is \emph{closed} P-i.j.\ modulo $In(\sem{\Xi})$.

  \item \rulenamet{abs} and \rulenamet{abs_{as}} It follows from the I.H.\ and because the side condition of the abstraction rules constrains only free variables from the $\Gamma$-context.

  \item \rulenamet{new} Let $\sigma = \sem{\Gamma | \Xi, x : \iavar \safeentail M : B}$.  We have $\sem{\Gamma | \Xi \safeentail
\ianewin{x}{M} : B} = (id_{\Gamma,\Xi} \otimes cell)
\fatcompos \sigma$ where $cell$ denotes the memory cell strategy on the game $I \rightarrow !\iavar$. By the I.H.\ $\sigma$ is closed P-i.j.\ modulo $In(\sem{\Xi \otimes !\iavar})$. Instancing Lemma
\ref{lem:cellcomposition_preserve_pijmodulo} with $\tau
\leftarrow cell$, $C_1 \leftarrow \Gamma \otimes  \Xi$
and $C_2\leftarrow !\iavar$ gives us the desired result.

\item \rulenamet{mkvar} Let $\sigma = \sem{\Gamma | \Xi \safeentail
\iamkvar\ (\lambda x.M_1) M_2}$. We have
$\sigma = \langle \Delta(\sigma_1), \sigma_2 \rangle ; mkvar$
where $\sigma_1 = \sem{\Gamma | \Xi ,x:\iaexp \safeentail M_1:\iacom}$ and $\sigma_2 = \sem{\Gamma | \Xi \safeentail M_2 : \iaexp}$. By the I.H.\ $\sigma_1$ is closed P-i.j.\ modulo $In(\sem{\Xi,x:\iaexp})$
and $\sigma_2$ is closed P-i.j.\ modulo $In(\sem{\Xi})$ therefore the strategy $\langle \Delta(\sigma_1), \sigma_2 \rangle : \sem{\Gamma\times\Xi \typear (\iaexp^1\typear\iacom)\times\iaexp}$ is closed P-i.j.\ modulo $In(\sem{\Xi} \union \sem{\iaexp^1})$.
Hence by Lemma \ref{lem:mkvarcomposition_preserve_pijmodulo}, $\sigma$ is closed P-i.j.\ modulo $In(\sem{\Xi})$.
\qed
\end{asparaitem}
\bigskip

By definition, safe \ialgol\ terms are the semi-closed safe split-terms, hence:
\begin{proposition}
\label{prop:safeia_closedpij} In the standard game model of \ialgol, safe terms are denoted by closed P-i.j.\ strategies.
\end{proposition}


\section{Full abstraction}

When observational equivalence is defined with
respect to unrestricted (\ie possibly unsafe) PCF contexts, we already know from the fully-abstract game model of PCF that observational equivalence of safe \pcf\ terms is captured by equality in the game-model.
\smallskip

\emph{Question: What is a fully abstract model of safe PCF with respect to {\rm safe} contexts?}
\bigskip

We have shown in Sec.\ \ref{sec:pijcategory} that the extensional category $\quotient{\mathcal{J}_{ib}}{\lesssim_{ib}}$ is a rational ICC and is therefore a model of safe \pcf. We show here that this model is fully abstract.


The small-step operational semantics of \pcf\ and safe \pcf\
differ because the former reduces $\beta$-redex one at a time whereas the latter reduces ``consecutive'' $\beta$-redexes in one step. But clearly this does not impact on the big-step operational semantics: a safe term evaluates to a value in safe \pcf\ if and only if it evaluates to the same value in \pcf. We will write $\eval$ to denote this operational semantics relation. We define the \defname{observational preorder} for safe \pcf\ as follows: for any two closed terms $M$ and $N$ of the same type, we write $M \obspre_s N$ iff for all context $C[\_]$ such that $C[M]$ and $C[N]$ are two well-formed safe closed \pcf\ terms of type $\pcfexp$, $C[M]\eval$ implies $C[N]\eval$.

Clearly, the inequational soundness of the \pcf\ game model implies that of the safe \pcf\ game model. This is because a safe term is denoted by the same strategy in $\mathcal{J}_{ib}$ and $\mathcal{C}_{ib}$ and because the big-step evaluation semantics of the two languages coincide.

We have seen in Chapter \ref{chap:syntactic_gamesem} that the definability result for \pcf\ implies that of of safe \pcf: every compact closed P-i.j.\ strategy is the denotation of some safe \pcf\ term (Prop.\ \ref{prop:safetydefinability}). Full abstraction then falls out easily from  definability and soundness as in the \pcf\ case \cite{abramsky94full}:
\begin{theorem}[Full abstraction of safe \pcf]
For any closed safe \pcf\ terms $M$ and $N$ of the same type,
$$ \sem{M}_{\mathcal{J}} \lesssim_{ib} \sem{N}_{\mathcal{J}}\ \iff\ M \obspre_s  N \ .$$
\end{theorem}

% Piece of the proof:
%We have a compact test strategy $\alpha:A\rightarrow N$ and by definability, there must be some context $x:A \vdash C[x] : N$ such that $\sem{x:A \vdash C[x] : N} = \alpha$. The definability result for Safe PCF gives us that $\lambda x . C[x] : A \rightarrow N$ is safe which in
%turns implies that $x:A \vdash C[x] : N$ is safe since $\ord{N} = 0$.

\subsection*{Idealized Algol}
The proof of full abstraction of Idealized Algol is based on the Innocent Factorization theorem:
\begin{theorem}[Innocent Factorization \cite{AM97a}]
  For any strategy $\sigma$ on an a \ialgol\ game $A$, there exists an innocent strategy $\tau : !var \lingamear A$ such that $\sigma = cell ; \tau$.
\end{theorem}

A version of this theorem also holds for safe \ialgol:
\begin{lemma}
For any closed P-i.j.\ strategy $\sigma$ on an a \ialgol\ game $A$, there is an innocent strategy $\tau^* : !var \lingamear A$ which is closed P-i.j.\ modulo $In(\sem{!var})$ and such that $\sigma = cell ; \tau^*$.
\end{lemma}
\proof
By the Factorization Theorem we have that $\sigma = cell ; \tau$ for some innocent strategy $\tau : !var \lingamear A$.
Observe that $\tau$ is not necessarily P-i.j.\ modulo $In(\sem{!var})$, although $\sigma$ is P-i.j. (See the following remark.)
However all the plays of $\tau$ interacting with $cell$ are P-i.j.\ modulo $In(\sem{!var})$. Indeed, take an interaction play $u\in Int(I, !var, A)$
ending with an $A$-move.  It is easy to see that P-view of the play $u\filter I, A$ is obtained from the P-view of
the play $u\filter !var, A$ by removing the moves played in $\sem{!var}$.
Thus because the question moves of the game $\sem{!var}$ are of order $0$, since $u\filter I, A$ is P-i.j., so must be $u\filter !var, A$.

We can therefore obtain a strategy $\tau^*$ that is P-i.j.\ modulo $In(\sem{!var})$ and verifies $\sigma = cell ; \tau^*$ by truncating all the plays in $\tau$ that are not P-i.j.
\qed

\begin{remark}
In the previous proof, we mentioned that it is possible for $cell ; \tau$ to be P-i.j\ although $\tau$ is not even
P-i.j.\ modulo $In(\sem{!var})$. Here is an example illustrating this. Take the \ialgol\ term:
\begin{align*}
 x:\iavar & \entail \lambda f\, y. \iaseq (\iaassign\, x\, 0) (\pcfcond\, (\iaderef x) 0
(f (\lambda z.\underline{y}))) \equiv M \\
&: \iavar^0 \typear ((\iaexp^1\typear\iaexp^2)\typear\iaexp^3)
 \typear \iaexp^4 \typear \iaexp^5
\end{align*}
It is unsafe because of the unsafe occurrence $y$, and its denotation is not P-i.j.\ modulo $In(\sem{!var})$ because it contains the play:
$$ \Pstr[0.5cm]{ (q5){q_5} (w-q5){\iawrite_0} (d-w)\iadone (r-q5)\iaread (v1-r)1 (q3-q5){q_3} (q2-q3,40){q_2} (q4-q5,40){\underline{q_4}}  } \ .$$
However the term $\ianewin{x}{M}$ is observationally equivalent to $0$ and therefore its denotation is P-i.j.
\end{remark}

As in the \ialgol\ case, the factorization result can be used to show that all the compact
closed P-i.j.\ strategies on \ialgol\ types are definable in safe \ialgol. Inequational Soundness of the game model follows from that
of \ialgol. We then obtain:
\begin{theorem}[Full abstraction of safe \ialgol]
For any closed safe \ialgol\ terms $M$ and $N$ of the same type,
$$ \sem{M}_{\mathcal{J}} \lesssim_{b} \sem{N}_{\mathcal{J}}\ \iff\ M \obspre_s  N \ .$$
\end{theorem}

\section{O-incremental justification}

We define \emph{O-incremental justification} as the dual of P-incremental justification:
\begin{definition}
  A play $s m$ of \emph{odd} length is said to be \defname{O-incrementally justified}, or \emph{O-i.j.} for short, if $m$ points to the last unanswered P-question in $\pview{s}$ with order strictly greater than $\ord{m}$.

 A strategy $\sigma$ is said to be \defname{O-incrementally justified}, if all plays in $\sigma$ ending with an O-question are
O-incrementally justified.
\end{definition}

This corresponds to the constraint that has to be imposed on the Opponent to reflect the fact that the environment is itself incarnated by a safe term. This duality
is similar to the one between O-visibility and P-visibility (see \cite[Sec.~3.6]{Harmer2005}).


\begin{lemma}
\label{lem:order3_oij}
  Let $A$ be an order-$3$ game, then every play on $A$ is O-i.j.
\end{lemma}
\proof
Let $A$ be an order $3$ game.
Take a play $s$ in $\sigma$ ending with a question move $q$.
We prove by induction on $s$ that if $q$  is a non-initial O-move then there is a single P-move in $\oview{s}$ with order $>\ord{q}$.
We do a case analysis on the level of $q$. We recall that $\ord{q} + \level{q}\leq \ord{A}$.
Since $q$ is a non-initial O-move, we necessarily have $\level{q} = 2$.
Let $q'$ denote the P-move preceding $q$ in $s$.
Suppose that $\level{q'} =1$ then $q'$ is justified by an occurrence of an initial move $q_0$. Hence we have $\oview{s} = q_0 \cdot q' \cdot q$. Thus by O-visibility, $q$ necessarily points to $q'$ therefore $\ord{q'} > \ord{q}$, thus since $q'$ is the only P-move occurring in the O-view, it is also the only P-move with order greater than $\ord{q}$.
Otherwise we have $\level{q'} = 3$. Thus $\ord{q'} \leq \ord{A} -\level{q'} = 0$ and $q'$ is justified by some O-move $q''$ of level $2$.  We have $\oview{s} = \oview{s_{\prefixof q''}} \cdot q' \cdot q$. Thus we can conclude using the I.H.\ on $s_{\prefixof q''}$ on the fact that $\ord{q'} = 0 < \ord{q}$.

Hence $s$ is necessarily O-i.j.\qed



\begin{lemma}
\label{lem:oij_interact_with_pij}
Let $\sigma :A$ and $\mu : A \typear o$ be two strategies.

In the composition $\sigma;\mu$, the P-i.j.\ plays of $\sigma$ interact only with O-i.j.\ plays of $\mu$,
and the O-i.j.\ plays of $\sigma$ interact only with P-i.j.\ plays of $\mu$.
\end{lemma}
\proof
Let $\sigma : A$ and $\mu : A \typear o$ be two strategies, and $q$ be the initial move of the game $\sem{A \typear o}$.
For every $s\in L_A$ we have $q s \in L_{A \typear o}$. P-moves and O-moves in $\sem{A}$ become O-moves and P-moves in $\sem{A
\typear o}$ respectively. Hence P-views of plays in $A$ correspond to O-views in $A \typear o$: $q \pview{s}^A = \oview{q s}_{A \typear o}$.
Now take an interaction sequence $u = q v \in \sigma \| \mu$.
We have $u \filter (A \typear o) = (q v)\filter (A \typear o)
= q (v\filter A)$. Hence if $u\filter A = v \filter A$ is
P-i.j.\ then by the previous remark,
$u \filter (A \typear o)$ is O-i.j.

The proof of the second part is symmetrical.
\qed
\smallskip

If we regard $\sigma : A$ as the denotation of some closed term
$\vdash M:A$ and $\mu$ as the denotation of some context $x:A \vdash C[x]:o$ then what the previous lemma
says is that plays that are not O-i.j.\ are not relevant to the observational equivalence problem for safe terms.
This suggests that we can eliminate them from the game denotation. The following Lemma guarantees that doing so
does not break compositionality:
\begin{lemma}
\label{lem:oij_decomp}
Let $\sigma : A\rightarrow B$ and $\tau : A\rightarrow B$ be closed P-i.j.\ strategies and suppose
that $u\in \sigma \| \tau$ such that for all external O-moves $o$ of $u$, we have that $u_{\prefixof o} \filter A,C$ satisfies
O-incremental justification. Then, for any generalized O-move $m$ of $u$ in component $X$, we have that
$u_{\prefixof m} \filter X$ satisfies O-incremental justification
\end{lemma}
\notetoself{Proof forthcoming! }

If we write $\mathcal{O}(\sigma)$ to denote the largest subset of plays of $\sigma$ whose odd-length prefixes are all O-i.j. Then the Lemma can be restated equivalently as:
\begin{eqnarray}
     \forall \sigma, \tau\ \mbox{closed P-i.j.}: \mathcal{O}(\sigma) ; \mathcal{O}(\tau) \supseteq \mathcal{O}(\sigma ; \tau)
     \label{eqn:oijdecomp_1}
\end{eqnarray}
which is equivalent to
\begin{eqnarray}
    \forall \sigma, \tau\ \mbox{closed P-i.j.}: \mathcal{O}( \mathcal{O}(\sigma) ; \mathcal{O}(\tau) ) = \mathcal{O}(\sigma ; \tau)
    \label{eqn:oijdecomp_2}
\end{eqnarray}
(Clearly Eq.~\ref{eqn:oijdecomp_1} implies the right-to-left inclusion in Eq.~\ref{eqn:oijdecomp_2}. The converse inclusion holds because $\mathcal{O}(\sigma) ; \mathcal{O}(\tau) \subseteq \sigma;\tau$.)

In other words, Lemma \ref{lem:oij_decomp} states that O-i.j plays cannot be obtained from the interaction of plays that are not O-i.j. In some sense it is the dual of compositionality of closed P-i.j.\ strategies. This duality can be revealed by reformulating compositionality as follows:
\begin{eqnarray}
     \forall \sigma, \tau\ \mbox{closed P-i.j.}: \, \mathcal{P}(\sigma) ; \mathcal{P}(\tau) \subseteq \mathcal{P}(\sigma ; \tau)
     \label{eqn:pijcomp_1}
\end{eqnarray}
where $\mathcal{P}(\sigma)$ denotes the largest even-length-prefix-closed subset of $\sigma$ consisting of closed P-i.j.\ plays.

\subsubsection*{The category of incremental strategies}
We say that a strategy is \defname{incremental} if it is closed P-incrementally justified and O-incrementally justified. Hence a strategy $\sigma$ is incremental if and only if
$\sigma = \mathcal{P}(\sigma)$ and $\sigma = \mathcal{O}(\sigma)$.


\begin{proposition}
We have a category $\mathcal{C}_{inc}$ with games as objects, incremental strategies as morphisms, and composition of $\sigma:A\rightarrow B$ and $\mu : B\rightarrow C$ defined as $\mathcal{O}(\sigma;\mu)$.
\end{proposition}
\proof
The proof is identical to the proof of Proposition 3.6.3 in \cite{Harmer2005}, using Lemma \ref{lem:oij_decomp}. \qed


We write $\mathcal{C}_{inc.ib}$, $\mathcal{C}_{inc.b}$ and
$\mathcal{C}_{inc.i}$ to denote the lluf subcategories of innocent, well-bracketed and innocent and well-bracketed strategies respectively.


\section{Algorithmic game semantics}

The game model of safe \ialgol\ is greatly simplified since justification pointers are unnecessary.
By the Characterization Theorem (Sec.\ \ref{sec:algogamesem}), $\obseq$-observational equivalence of \ialgol\ terms is characterized by equality of the set of complete plays. Thus for safe terms, $\obseq$-equivalence is characterized by equality of the set of underlying sequence of moves (\ie without pointers).
This simplification suggests applications in algorithmic game semantics.

We show here that up to order $3$, \ialgol\ is a conservative extension of safe \ialgol. This means that the observational equivalence relations $\obseq_s$ and $\obseq$ coincide. Therefore, all the upper-bounds on the complexity of observational equivalence that are known for order $3$ \ialgol\ also hold for safe \ialgol. We then show that the Characterization Theorem also holds for observational equivalence of safe \ialgol\ with respect to safe context: two terms are $\obseq_s$-equivalent if
the sets of complete plays of their denotation are the same. This allow us to show that up to order $3$, the complexity lower-bounds that hold for \ialgol\ also hold for its safe fragment.


\subsection*{Observational equivalence}
\begin{proposition}
\label{prop:unsafe_conservative_uptoord3}
Up to order $3$, it is conservative, with respect to observational equivalence, to add unsafe context to safe ones
(\ie if for two terms $M$ and $N$ and for any safe context $C[-]$, $C[M] \eval
\implies C[N] \eval$ then the same property holds for unsafe contexts).
Adding unsafe context is not conservative at order $4$ for Idealized Algol.
\end{proposition}
\proof
Let $A$ be an order $3$ game, $\sigma:A$ be the denotation of a term, and $\alpha:A\typear o$ be the denotation of a context.
By Lemma \ref{lem:order3_oij}, $\sigma$ is necessarily O-i.j. Thus by Lemma \ref{lem:oij_interact_with_pij}, the plays of $\sigma$ can only
interact with P-i.j.\ plays from $\alpha$. Thus the presence of non P-i.j.\ plays in $\alpha$ does not alter the observational equivalence relation and
hence it is conservative to add unsafe contexts to safe ones.

We now show that adding unsafe context is not conservative at order $4$. The idea is to
start from some term $E$ and construct a term $D$ that behaves like $E$ except that it has a ``hidden'' behaviour which can only by triggered when the Opponent plays in some particular way that is not incrementally justified.
Take the following order-$4$ \ialgol\ terms:
\begin{align*}
  E &\equiv \lambda \varphi  . \varphi (\lambda u_1. u_1\, \iaskip) (\lambda u_2. u_2\, \iaskip) : ((2,2,0),0) \\
  D &\equiv \lambda \varphi  . \ianewin{LAST:=0} \\
  & \qquad\ \varphi\ (\lambda u_1. \ianewin{PREV:=!LAST} LAST:=1; u_1 ([!LAST=1]);LAST:=PREV) \\
  & \qquad\ \ \  (\lambda u_2. \ianewin{PREV:=!LAST} LAST:=2; u_2 ([!LAST=2]);LAST:=PREV) \\
  & \quad : ((2,2,0),0)
\end{align*}
where we use the type abbreviations $0$ for $\iacom$ and $k+1=k\typear \iacom$ for $k\geq0$, and for every term $T:\iaexp$, the assertion operator $[T]$ is syntactic sugar for $\pcfcond\ T\ \Omega\ \iaskip$ \ie the term that does nothing if $T$ evaluates to a positive number and goes into an infinite loop otherwise.

The two terms $M$ and $N$ are not observationally equivalent in \pcf\ because the unsafe context
$$C[\_] = \_\ (\lambda w_1\, w_2 . w_1 (\lambda x.w_2 (\lambda y .\underline{x})))$$
can separate them: we have $C[D] \not\eval$ and $C[E]\eval$.
In safe \pcf, however, these two terms are observationally equivalent:
Let $C[\_]$ be a safe context. We claim that when evaluating $C[D]$, the variable $LAST$ always contains the index of the last called $\varphi$'s parameter
and therefore the assertion tests in $D$ always succeed.
This can be shown by induction on the length of the interaction play between $\sem{C[\_]}$ and $\sem{D}$. We give here an informal argument.
Let us assume that the context makes a single call to $D$. (The argument can be easily adapted to the general case.)
During the evaluation, whenever a parameter of $\varphi$ is called, $D$ first sets the variable $LAST$ to the parameter index $i$ and then calls the Opponent's parameter $u_i$. At that point, O can either make another call to one of $\varphi$'s parameter, or it can call the parameter of some previous call to some $u_j$ for $j\in\{1,2\}$.
Suppose it does the latter, because it is playing incrementally (since the context is safe) such $u_j$ must necessarily be the $u_i$ that was last called by P.
The next step executed by P is then the assertion test which necessarily succeeds because $LAST$ was just set to $i$. When the call to $u_i$ returns, P restores $LAST$ to the value it originally contained when $\varphi$'s parameter was called, thus ensuring that it holds the index of the $\varphi$'s parameter that was last called by the context.

Similarly, whenever a call to one of $\varphi$'s parameter returns, the Opponent can call the parameter of the \emph{last} (because O plays incrementally) called $u_j$.
Since $LAST$ contains the last called $\varphi$'s parameter's index, this again ensures that the assertion test succeeds.
\qed

\subsection*{Characterization Theorem}


\torework[characterization by complete plays]{
- The category of (OP)-incremental strategies is fully abstract for safe \ialgol.

- Characterization of the set of complete plays for safe \ialgol.
(Easy adaptation of the corresponding result for \ialgol. In the present case however, the proof relies
on the fact that plays of the strategy are O-i.j. (in order for $\alpha$ to be P-i.j.)

$$comp(\sem{M}_{\mathcal{C}_{inc}}) = comp(\sem{N}_{\mathcal{C}_{inc}}) \iff M \obspre N $$
}



\subsection*{Classification}

\paragraph{Upper bounds}
By Proposition \ref{prop:unsafe_conservative_uptoord3}, all the known upper-bound for \ialgol\ are also valid for safe \ialgol\ up to order $3$.
Therefore safe $\ialgol_2$ + while is decidable in PSPACE \cite{ghicamccusker00}, $\ialgol_3$ + while is decidable in EXPTIME for terms in $\beta$-nf \cite{DBLP:conf/fossacs/MurawskiW05}, and $\ialgol_3 + Y_0$ is decidable with a complexity that is at most doubly exponentially larger than that of the DPDA equivalence problem \cite{DBLP:conf/icalp/MurawskiOW05}.


\paragraph{Lower bounds}

\begin{theorem}[\cite{Ong02}]
Observational equivalence of $IA_2 + Y_1$ is undecidable.
\end{theorem}
The proof of this theorem proceeds by reduction of the \textsc{Queue-Halting} problem to the observational equivalence of two $\ialgol_2 + Y_1$ programs: given a
\textsc{Queue} program $P$, a $IA_2 + Y_1$ term $\entail M_P :\iacom$ is defined such that $M_P$ simulates $P$ \ie $P$ terminates if and only if $M_P$ is equivalent to $\iaskip$. It turns out that the encoding term $M_P$ \cite{Ong02} is safe therefore:
\begin{corollary}
Observational equivalence of safe $IA_2 + Y_1$ is undecidable.
\end{corollary}


For $\ialgol_3$ + while, it is shown in \cite{DBLP:conf/icalp/MurawskiOW05} that
the Containment Problem for DPDA can be reduced to observational approximation in
$\ialgol_1 + Y_0$. Therefore observational approximation is undecidable for $\ialgol_1 + Y_0$ terms,
and observational equivalence is at least as hard as DPDA Equivalence.

\begin{corollary}[of Proposition 1 from \cite{DBLP:conf/icalp/MurawskiOW05}]
For safe $\ialgol_2 + Y_0$, observational approximation is undecidable and observational equivalence is
at least as hard as DPDA Equivalence.
\end{corollary}
\proof
The original encoding used in \cite{DBLP:conf/icalp/MurawskiOW05} is not safe because the variable $x: \iaexp$ is not bound by the $\mu$-abstraction $\mu z$.
An equivalent safe encoding can be obtained by replacing the free variable $x: \iaexp$ by a variable of type $\iaexp\typear\iaexp$,
thus giving an encoding in safe $\ialgol_2 + Y_0$.

Let $\mathcal{B}$ be a DPDA over an alphabet $\Sigma$. We write $N(\mathcal{B})$ to denote the language accepted by $\mathcal{B}$.
We identify values of type $\iaexp$ with $\Sigma \union \{ 0 \}$ and we consider the game $G=(\iaexp^2\typear\iaexp^1) \typear \iacom$ whose set of moves
is given by  $M_G = \{ q^1, q^2 \} \union \Sigma\union \{ \iarun, \iadone \}$.
Following \cite{DBLP:conf/icalp/MurawskiOW05}, for any language $L\subseteq \Sigma^*$, we define $\widehat L \subseteq M_G^*$ as
$\widehat L =\{ \iarun\ q^1 q^2 0\, x_1 \cdots q^1 q^2 0\, x_n\ \iadone \ | x_1 \ldots x_n \in L \}$.
We have $\widehat L_1 = \widehat L_2$ iff $L_1 = L_2$.

\emph{Claim:} There exists a safe term $z: \iaexp^2\typear\iaexp^1 \vdash Q_\mathcal{B} : \iacom$ such that
the set of underlying sequence of moves of the complete plays of $\sem{z: \iaexp^2\typear\iaexp^1 \vdash Q_\mathcal{B} : \iacom}$
is equal to $\widehat N(\mathcal{B})$. This term $Q_\mathcal{B}$ is obtained from the term $M_\mathcal{B}$ used in the original encoding, by
replacing the free variable $x: \iaexp$ in $M_\mathcal{B}$ by a variable $z$ of type $\iaexp\typear\iaexp$ and by replacing the subterm ``$CH:= x$'' by
``$CH:= z\, 0$''. We can then conclude as in \cite{DBLP:conf/icalp/MurawskiOW05}.
\qed
\bigskip

For $\ialgol_3$ + while, Murawski \emph{et al.} showed in \cite[Corollary 2]{DBLP:conf/fossacs/MurawskiW05} that observational equivalence is EXPTIME-hard by a reduction from the equivalence problem of nondeterministic automata on binary trees. The encoding used in the paper is unsafe but it can be easily changed into an equivalent safe term of the same order using the same trick as in the previous proof. (The variable $y:\iaexp$ is replaced by $y:\iaexp\typear\iaexp$ and ``$Z:=y$'' is replaced by ``$Z:=y\, 0$''). Hence:
\begin{proposition}
Observational equivalence in safe $\ialgol_3$ + while is EXPTIME-hard.
\end{proposition}


At order $4$, since adding unsafe context is not conservative (Prop.\ \ref{prop:unsafe_conservative_uptoord3})
we need to distinct two problems: deciding $\obseq$-equivalence or
$\obseq_s$-equivalence (\ie with respect to safe context only).

Murawski showed in \cite{murawski03program} that $\obseq$-observational equivalence is undecidable at order $4$.
He considers $\Gamma$-machines, a Turing complete class of devices, and show that for any such machine, there is an $\ialgol_4$-term $M$ such that the machine accept the empty string if and only if the set of complete plays of $\sem{M}$ is not empty. This show that
$\obseq$-observational equivalence is undecidable.
It turns out that the encoding term exhibited in \cite{murawski03program} is safe, therefore:
\begin{corollary}
  $\obseq$-observational equivalence for
  safe $\ialgol_4$ is undecidable.
\end{corollary}

The fact that contexts are not restricted to be safe is crucial in this simulation. The $ADD$ operation of $\Gamma$-machines is for instance simulated using plays that are not O-i.j. (In the paper, the plays ending with the move $r_4$ are not O-i.j.) Thus the same argument can be used to show undecidability of $\obseq_s$-observational equivalence.

All the previous results are recapitulated in Table \ref{tab:ia_obseq_complexity}.

\begin{table}[htbp]
\begin{tabular}{|c|c||c|c|c|c|c|}
    \cline{3-7}
  \multicolumn{2}{c|}{}  & \multicolumn{5}{c|}{Finitary fragments} \\ \hline
  \multirow{2}{*}{$L$} & \multirow{2}{*}{$C[\_]$} &   order 2          &  order 2       & order 3     & order 3 & \multirow{2}{*}{order 4}  \\
                       &                          &    + while         &   + $Y_1$      & + while     & +$Y_0$  &          \\ \hline \hline

  \multirow{4}{*}{IA}  & \multirow{2}{*}{IA}      & \multirow{8}{1.7cm}{PSPACE$^{(1)}$ \\ {\small $\preccurlyeq$ DFA}} & \multirow{8}{*}{U$^{(2)}$} & \multirow{8}{3.2cm}{EXPTIME-hard$^{(3)}$ \\ EXPTIME-complete for $\beta$-nf\\ {\small $\preccurlyeq$ VPA} }  & \multirow{8}{2cm}{D$^{(4)}$ \\ {\small $\preccurlyeq_{exp}$ DPDA\\ $\succcurlyeq$ DPDA} } & \multirow{2}{*}{U$^{(5)}$}\\
                       &                          &                    &                & & & \\
\cline{2-2}\cline{7-7} & \multirow{2}{*}{Safe IA} &                    &                & & & \multirow{2}{*}{?$^{(6)}$} \\
                       &                          &                    &                & & & \\
\cline{1-2}\cline{7-7}
  \multirow{4}{*}{Safe IA} & \multirow{2}{*}{IA}      &                &                & & & \multirow{2}{*}{U} \\
                           &                          &                &                & & & \\
\cline{2-2}\cline{7-7}     & \multirow{2}{*}{Safe IA} &                &                & & & \multirow{2}{*}{?} \\
                           &                          &                &                & & & \\ \hline
%
%  \multirow{4}{*}{St. Safe IA} & \multirow{2}{*}{IA}           & \multirow{4}{*}{D} & \multirow{4}{*}{?} & \multirow{4}{*}{D} & \multirow{4}{*}{D} & \multirow{2}{*}{?} \\
%                               &                               &                    &                    &                    &                    & \\
%\cline{2-2} \cline{7-7}        &  \multirow{2}{*}{St. Safe IA} &                    &                    &                    &                    & \multirow{2}{*}{?} \\
%                               &                               &                    &                    &                    &                    & \\ \hline
\end{tabular}
\smallskip

U = Undecidable \hfill
$\preccurlyeq P$ = ``reducible to problem $P$''

D = Decidable with unknown complexity \hfill
$\succcurlyeq P$ = ``at least as hard as problem $P$''
\smallskip

\begin{inparaenum}
\item[(1)] \cite{ghicamccusker00}
\item[(2)] \cite{Ong02}
\item[(3)] \cite{DBLP:conf/fossacs/MurawskiW05}
\item[(4)] \cite{DBLP:conf/icalp/MurawskiOW05}
\item[(5)] \cite{murawski03program}.
\item[(6)] The Characterization Theorem may not even hold in that case.
\end{inparaenum}

\label{tab:ia_obseq_complexity}
\caption[Complexity of observational equivalence in \ialgol.]{Complexity of observational equivalence for finitary fragments of \ialgol.}
\end{table}



\subsection*{Expressivity of safe \ialgol}

In \cite{Murawski2003}, Murawski introduced a notion of representability of languages by \ialgol\ terms: a language is represented by (some erasure homomorphism of) the set of complete plays of the term. He shows that the class of languages representable by second-order terms is precisely the regular languages; for third-order terms it is the class of context-free languages; and for terms of order $4$ and above, it is the full class of recursively enumerable languages. These results are recapitulated in Table \ref{tab:murawksi_rep}.
\begin{table}
\centering
\begin{tabular}{c|c|c}
Fragment &  Representable languages & Machine equivalent\\ \hline\hline
$\ialgol_0$ & singleton sets + empty set & \\
$\ialgol_1$ & finite languages with the prefix property & \\
$\ialgol_2$ & regular languages & Finite State Automata\\
$\ialgol_3$ & context free languages & DPDA \\
$\ialgol_4$ & recursively enumerable & Turing Machines\\
\end{tabular}
\label{tab:murawksi_rep}
\caption{Murawski representability.}
\end{table}

\emph{What are the representable languages in the safe fragments of \ialgol?} It turns out that up to order $3$, the safety constraint does not alter expressivity:
\begin{proposition}
For $0\leq k\leq 3$, the languages Murawski-representable in
safe $\ialgol_k$ and $\ialgol_k$ are the same.
\end{proposition}
\proof
Unsafety only appears at order $3$ therefore the same languages are representable in $\ialgol_i$ and safe $\ialgol_i$ for $i<3$.
The order-$3$ term used in \cite{Murawski2003} to represent context-free languages is unsafe, but it can made be easily turned into a safe term by replacing the variable $c:\iaexp$ by a variable of type
$(\iacom\typear\iacom)\typear\iaexp$ and changing
the code ``$INPUT:=c$'' into ``$INPUT:=c\, (\lambda z.z)$''.
\qed
\smallskip

It is not known which languages are expressible
in higher-order fragments of safe \ialgol.
Recall that regular languages are the languages definable by 0-DPDAs, and context-free languages are those definable by DPDAs. It is then tempting to conjecture the following generalization: Murawski-representable in safe $\ialgol_n$ for $n\geq2$ are the $(n-2)$-DPDA definable word languages. But it is not clear how we can interpret the higher-order $push$ DPDA instructions as moves of the game semantic denotation. If such result were to be proved then the question of decidability of higher-order DPDA would become relevant to the observational equivalence problem: the undecidability of the former would imply that of the latter.

\section{Conclusion and Further work}

\subsection*{Algorithmic game semantics}
We have seen that up to order $3$, the problem of observational equivalence has the same complexity in the safe finitary fragments as in the unrestricted finitary fragments.  An obvious direction would be to investigate this problem at order $4$. Murawski \cite{Murawski2003} has shown that observational equivalence is undecidable for $\ialgol_4$. Is it the case for safe $\ialgol_4$?

\subsection*{Expressibility}
In \cite{Murawski2003}, Murawski gave a nice notion of expressibility by game semantics. He showed that at order $4$ already, the finitary fragment of \ialgol\ is expressive enough to give the full class of recursively enumerable languages. Does the safety condition restrict this class? Can we characterize the class of higher-order DPDA definable word languages?


