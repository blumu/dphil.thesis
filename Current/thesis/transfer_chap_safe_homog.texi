\section{Homogeneous Safe \texorpdfstring{$\lambda$}{lambda}-Calculus}
\label{sec:safe_homog}

\subsection{A typing system}

We now give a system of rules for generating term of the homogeneous safe lambda calculus defined in Sec.\ \ref{def:safelambda} in which type homogeneity is enforced by construction.

\begin{definition}
  \label{dfn:homogsafelmd}
We use typing judgements of the form:
\begin{equation}
\nonumber \overline{x_1}:\overline{A_1} \, | \, \cdots \, | \,
\overline{x_n} :  \overline{A_n} \hentail M : B
\end{equation}
The which is shorthand for $x_{11} : A_{11}, \cdots, x_{1r}: A_{1r}, A_{21},\ldots \hentail M : B$ such that the context variables are listed in decreasing type order and with the condition that $\ord{x_{ik}} < \ord{x_{jl}}$ for any $k, l$ and $i<j$.
In other words, the context is partitioned into list of variables of the same orders, and the partitions are arranged in strict decreasing order.

The \emph{valid typing judgements} are defined by induction over the following rules, where $\Delta$ is a given homogeneously-typed alphabet \ie a countable set of symbols such that each symbol has an homogeneous type, and $\Sigma$ is a set of homogeneously-typed constants:

$$ \rulename{wk}
    {   \rulef{ \Gamma\hentail M:B \qquad {\Gamma \subset \Delta} }
             { \Delta\hentail M : B}
   }
\qquad
    \rulename{perm}
    {
      \rulef { \Gamma\hentail M:B \qquad \sigma(\Gamma) \hbox{ homogeneous} }
            { \sigma(\Gamma)\hentail M : B }
    }
$$

$$ \rulename{\Sigma\mbox{\textbf{-const}}}  \rulef{}{\hentail b : A}\ b:A \in \Sigma
\qquad
 \rulename{var} \rulef{}{x_{ij} : A_{ij}\, \hentail x_{ij} : A_{ij}}
$$

$$\rulename{abs}
\rulef{
 {\overline{x_1} : \overline{A_1}\, | \, \cdots\, | \, \overline{x_{n+1}} : \overline{A_{n+1}}\hentail M : B}            \qquad \ord{\overline{A_{n+1}}} \geq \ord{B} -1
 }
 { \overline{x_1} : \overline{A_1}\, | \, \cdots\, | \, \overline{x_{n}} : \overline{A_{n}}
    \hentail \lambda \overline{x_{n+1}} : \overline{A_{n+1}} .M : (\overline{A_{n+1}} \, | \, B)
 }
$$

$$ \rulename{app} \rulef{{\Gamma\hentail M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o) \qquad
\Gamma\hentail N_1 : B_{11} \quad \cdots \quad \Gamma\hentail N_{l} :
B_{1l} \qquad l = |\overline{B_1}| }}
    { \Gamma\hentail M N_1
\cdots N_{l} : (\overline{B_2} \, | \, \cdots \, | \,
\overline{B_m} \, | \, o)} $$

$$ \rulename{app^+} \rulef
    {\Gamma\hentail M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o) \qquad
    \Gamma\hentail N_1 : B_{11} \quad \cdots \quad \Gamma\hentail N_{l} :
    B_{1l} \qquad l < |\overline{B_1}| }
    { \Gamma\hentail M N_1
    \cdots N_{l} : (\overline{B} \, | \, \overline{B_2} \, | \ \cdots \, | \,
    \overline{B_m} \, | \, o)} $$

where $\overline{B_1} = B_{11}, \ldots, B_{1l},\overline{B}$ with
the condition that every variable in $\Gamma$ has an order strictly greater
than $\ord{\overline{B_1}}$.
\end{definition}

\begin{lemma}[Basic properties]
\label{lem:homogsafe_basic_prop} Suppose $\Gamma \hentail M : B$ is a
valid judgment then
\begin{enumerate}[(i)]
\item $B$ is homogeneous;
\item every free variable of $M$ has order at least $\ord{B}$;
\item $fv(M) \vdash M : B$,
\end{enumerate}
where $fv(M) \subseteq \Gamma$ denotes the context constituted of the variables
in $\Gamma$ occurring free in $M$.
\end{lemma}
\begin{proof}
(i) and (ii) are proved by an easy structural induction. (iii) is
due to the fact that the weakening rule is the only rule which can
introduce a variable not occurring freely in $M$ in the context of a
typing judgement.
\end{proof}

\begin{proposition}
Let $\Gamma \stentail M : T$ be a simply-type term. Then
$\Gamma \hentail M : T$ is a valid judgment if and only if there is a derivation tree for
$\Gamma \sentail M : T$ in the safe lambda calculus (Def. \ref{def:safelambda}) such that all the types appearing in the derivation tree are homogeneously typed.
\end{proposition}
\notetoself{rewrite the proof that follows...}

\subsection{An alternative system of rules}


In this section, we will refine the formation rules
given in the previous section. We say that $\Gamma \vdash M : A$ satisfies $P_i$ for $i \in \zset$ if the
variables in $\Gamma$ all have orders at least $\ord{A}+i$. We introduce the notation $\Gamma \vdash^{i} M : A$ for $i \in
\zset$ to mean that $\Gamma \vdash M : A$ is a valid judgment satisfying $P_i$.


We remark that if $\Gamma \vdash M : A$ then the variables in $\Gamma$ with order
strictly smaller than $M$ cannot occur freely in $M$ and therefore it is possible to restrict
the context to a smaller number of variables:

\begin{lemma}[Context reduction]
\label{lem:restriction}

If $\Gamma \vdash^i M : A$ then $\Gamma' \vdash^{0} M : A$
where $$\Gamma' = \{ z \in \Gamma \ |
\ \ord{z} \geq \ord{M} \} = \Gamma \setminus \{ z \in \Gamma \ | \ \ord{M} + i \leq \ord{z} < \ord{M} \}$$
\end{lemma}
\begin{proof}
If $i\geq 0$ then the result is trivial. Suppose $i<0$. We proceed
by structural induction and case analysis. We only give the details
for the application cases $\rulename{app}$ and $\rulename{app^+}$:
\begin{itemize}
\item Case of the rule $\rulename{app}$:

    \[ (\mathbf{app}) \
    \rulef
        {\Gamma\hentail M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o) \qquad
            \Gamma\hentail N_1 : B_{11} \quad \cdots \quad \Gamma\hentail N_{l} :
            B_{1l} \qquad l = |\overline{B_1}| }
        { \Gamma\hentail M N_1
            \cdots N_{l} : (\overline{B_2} \, | \, \cdots \, | \,
            \overline{B_m} \, | \, o)}
    \]

    If the conclusion satisfies $P_i$ then, for all $z \in \Gamma$:
    \begin{eqnarray*}
    \ord{z} \geq 1 + \ord{\overline{B_2}} + i
    &=& 1 + \ord{\overline{B_1}} + \ord{\overline{B_2}} - \ord{\overline{B_1}} + i \\
    &=& \ord{M} + (\ord{\overline{B_2}} - \ord{\overline{B_1}} + i)
    \end{eqnarray*}
    Therefore the first premise satisfies $P_j$ where $j={\ord{\overline{B_2}} - \ord{\overline{B_1}} + i}$.
    Hence by the induction hypothesis,
    $$\Gamma' \vdash^{0} M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)$$
    where $\Gamma' = \Gamma \setminus \{ z \in \Gamma \ | \ \ord{M} + j \leq \ord{z} < \ord{M} \}$.


    Similarly, for all $z \in \Sigma$:
    \begin{eqnarray*}
    \ord{z} \geq 1 + \ord{\overline{B_2}} + i
    &=& \ord{\overline{B_1}} + (1+\ord{\overline{B_2}} - \ord{\overline{B_1}} + i) \\
    &=& \ord{\overline{B_1}} + j+1
    \end{eqnarray*}
    Hence by the induction hypothesis:
    $$\Gamma'' \vdash^0 N_k : B_{1k} \mbox{ for } k \in 1..l$$
    where $\Gamma'' = \Gamma \setminus \{ z \in \Gamma \ | \ \ord{M} + j+1 \leq \ord{z} < \ord{M} \}$.

    Furthermore, $\Gamma'' = \Gamma' \union \{ z \in \Gamma \ | \ \ord{M} + j = \ord{z}\}$ therefore
    the weakening rule gives:
    $$\Gamma'' \vdash^{-1} M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)$$

    Finally the $\rulename{app}$ rule gives:
    $$\rulef{\Gamma'' \vdash^{-1} M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)
    \quad \Gamma'' \vdash^0 N_1 : B_{11} \quad \ldots \quad \Gamma'' \vdash^0 N_1 : B_{1l}
    }
        { \Gamma'' \vdash M N_1 \ldots N_l : (\overline{B_2} \, | \, \cdots \, | \,
            \overline{B_m} \, | \, o)}
    $$
    such that for all $z\in \Gamma''$:
    \begin{eqnarray*}
    \ord{z} \geq \ord{\overline{B_1}}
    &\geq& 1 + \ord{\overline{B_2}} = \ord{M N_1 \ldots N_l}
    \end{eqnarray*}

    Therefore:
    $$\Gamma'' \vdash^0 M N_1 \ldots N_l : (\overline{B_2} \, | \, \cdots \, | \,
            \overline{B_m} \, | \, o)$$

\item $\rulename{app^+}$  The side-condition of the rule $\rulename{app^+}$ ensures that the first premise
 satisfies $P_0$. The conclusion of the rule has the same order as the first premise
 therefore the conclusion also satisfies $P_0$.
\end{itemize}
\end{proof}


\begin{lemma}
\label{lem:prooftree01only} If $\Gamma \vdash^{0} M : T$ or $\Gamma
\vdash^{-1} M : T$ then there is a valid proof tree showing $\Gamma
\vdash M : T$ such that all the judgments appearing in the proof
tree satisfy either $P_0$ or $P_{-1}$.
\end{lemma}


\begin{proof}
Since $P_{-1}$ implies $P_0$, w.l.o.g.\ we can assume that the
judgment $\Gamma \vdash M : T$ satisfies $P_{-1}$. We show that
there is a proof tree for $\Gamma \vdash M : T$ where all the nodes
of the tree satisfy $P_0$ or $P_{-1}$. We proceed by structural
induction and case analysis on the last rule used to show $\Gamma
\vdash M : T$:
\begin{itemize}
\item Axiom $\rulename{const}$: the context is empty therefore the sequent satisfies $P_{-1}$.

\item Axiom $\rulename{var}$: the context contains only the variable itself therefore the sequent satisfies $P_0$.

\item Rule $\rulename{wk}$: The premise is $\Delta \vdash M : T$ with $\Delta \subset \Gamma$. Since
$\Gamma \vdash M : T$ satisfies $P_{-1}$ and $\Delta \subset \Gamma$ the premise must also satisfy $P_{-1}$. We can conclude using the
induction hypothesis.

\item Rule $\rulename{perm}$: By the induction hypothesis.


\item Rule $\rulename{abs}$: the second premise of the rule guarantees that the first
premise satisfies $P_{-1}$.

\item Rule $\rulename{app^+}$: The first premise has the same order as the
conclusion of the rule therefore the first premise satisfies
$P_0$. The side-condition of the rule $\rulename{app^+}$ ensures that all the other premises satisfy $P_0$.

\item Rule $\rulename{app}$:

$$ \rulename{app} \
    \rulef{
        { \Gamma \vdash M : (\overline{A} \, | B)
        \qquad
        \Gamma \vdash N_1 : A_1 \quad \cdots \quad \Gamma \vdash N_{l} : A_l \qquad l = |\overline{A}|
        }
    }
    {
        \Gamma \vdash^0 M N_1 \cdots N_{l} : B
    }
$$

Applying lemma \ref{lem:restriction} to the first premise we obtain:
\begin{equation}
 \Sigma \vdash^0 M : (\overline{A} \, | B) \label{eq:seq1}
\end{equation}
where $\Sigma = \{ z \in \Gamma \ | \ \ord{z} \geq \ord{(\overline{A} \, | B)} \} = \{ z \in \Gamma \ | \ \ord{z} \geq 1 + \ord{\overline{A}} \}.$

Applying lemma \ref{lem:restriction} to each of the remaining
premises gives  :
$$ \Sigma' \vdash^0 N_i : A_i \quad \mbox{ for all } i \in 1..p$$
where $\Sigma' = \{ z \in \Gamma \ | \ \ord{z} \geq \ord{A_i} =
\ord{\overline{A}} \} \supseteq \Sigma.$

If the inclusion $\Sigma \subseteq \Sigma'$ is strict then we apply the weakening rule to sequent (\ref{eq:seq1}):
$$ \rulef{\Sigma \vdash^0 M : (\overline{A} \, | B)}{\Sigma' \vdash^{-1} M : (\overline{A} \, | B)} \rulename{wk} $$

Finally, we obtain the following proof tree:
$$  \rulef{
        \rulef{
            { \Sigma' \vdash^{-1} M : (\overline{A} \, | B)
            \qquad
            \Sigma' \vdash^0 N_1 : A_1 \quad \cdots \quad \Sigma' \vdash^0 N_{l} : A_l \qquad l = |\overline{A}|
            }
        }
        {
            \Sigma' \vdash^0 M N_1 \cdots N_{l} : B
        } \rulename{app}
    }
    {
         \Gamma \vdash^0 M N_1 \cdots N_{l} : B
    } \rulename{wk}
$$

where the last weakening rules is applied only if the inclusion $\Sigma' \subseteq \Gamma$ is strict.

We can now conclude by applying the induction hypothesis on the
sequents $\Sigma' \vdash^{-1} M$, $\Sigma' \vdash^0 N_1$, \ldots,
$\Sigma' \vdash^0 N_l$ .
\end{itemize}
\end{proof}

\subsubsection{An alternative definition of the Homogeneous safe \texorpdfstring{$\lambda$}{lambda}-calculus}

Using the observations that we have just made, we will now derive
new rules for the safe $\lambda$-calculus with homogeneous type. We
want a system of rules generating sequents that satisfy $P_0$. Also,
it must be able to generate intermediate sequents that do not
necessarily satisfy $P_0$ provided that they can be used to produce
\emph{in fine} terms satisfying $P_0$.

Because of the lemma \ref{lem:prooftree01only}, we know that the
only necessary intermediate sequents are those that either satisfy
$P_0$ or $P_{-1}$. Hence, we can assume by default that premises of
the rules all satisfy $P_{-1}$ at least.

First we define an additional rule expressing the fact that $P_0$
implies $P_{-1}$:
$$ \rulename{seq} \  \rulef{\Gamma \vdash^{0} M : A}{\Gamma \vdash^{-1} M : A} $$

The weakening rule can be rewritten as follows:
$$ \rulename{wk^{0}} \   \rulef{\Gamma \vdash^{0} M : A}{\Gamma , x : B \vdash^{0} M : A} \quad \ord{B} \geq \ord{A} $$
$$ \rulename{wk^{-1}} \   \rulef{\Gamma \vdash^{-1} M : A}{\Gamma , x : B \vdash^{-1} M : A} \quad \ord{B} \geq \ord{A} -1$$

Because of the context reduction lemma, any sequent satisfying $P_{-1}$ can be obtained
by applying the weakening rule $\rulename{wk^{-1}}$ or the rule $\rulename{seq}$ to another sequent
satisfying $P_0$. Therefore, with the exception of these two rules, we only need to use rules whose conclusion sequents satisfy $P_0$:
\begin{itemize}
\item For the rules $\rulename{perm}$, $\rulename{const}$ and $\rulename{var}$, only the tagging of the sequents
changes:
$$ \rulename{var} \   \rulef{}{x : A\vdash^{0} x : A}
\qquad
\rulename{\Sigma\mbox{\textbf{-const}}}  \  \rulef{}{\vdash^0 b : A} \ b:A \in \Sigma
$$

$$
  \rulename{perm} \  \rulef{
      { \Gamma \vdash^0 M:B \qquad \sigma(\Gamma)  } \hbox{ homogeneous}
    }
      { \sigma(\Gamma) \vdash^0 M : B }
$$

\item $\rulename{abs}$ The abstraction rule has a side condition
expressing the fact that the premise satisfies $P_0$ or $P_{-1}$. Since this is always true for sequents
generated by our new system of rules, we can drop the side condition:
$$ \rulename{abs} \   \rulef{\Gamma | \overline{x} : \overline{A} \vdash^{-1} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A},B)}$$


\item $\rulename{app}$ The application rule has the following form:
$$ \rulename{app} \
    \rulef{
        { \Gamma \vdash^{-1} M : (\overline{A} \, | B)
        \qquad
        \Gamma \vdash^{-1} N_1 : A_1 \quad \cdots \quad \Gamma \vdash^{-1} N_{l} : A_l \qquad l = |\overline{A}|
        }
    }
    {
        \Gamma \vdash^0 M N_1 \cdots N_{l} : B
    }
$$

Since the first premise satisfies $P_{-1}$, by property \ref{lem:homogsafe_basic_prop}(ii) we have:
$$\forall z \in \Gamma : \ord{z} \geq 1 + \ord{\overline{A}} -1 = \ord{\overline{A}} = \ord{\overline{N}}$$
Hence, all the sequents of the premises but the first must satisfy $P_0$. The rule (app) is therefore given by:
$$ \rulename{app} \
    \rulef{
        { \Gamma \vdash^{-1} M : (\overline{A} \, | B)
        \qquad
        \Gamma \vdash^0 N_1 : A_1 \quad \cdots \quad \Gamma \vdash^0 N_{l} : A_l \qquad l = |\overline{A}|
        }
    }{
        \Gamma \vdash^0 M N_1 \cdots N_{l} : B
      }
$$

\item For the application rule $\rulename{app^+}$, the type of the sequent in the first premise has the same order
as the type of the conclusion premise, and since the conclusion
satisfies $P_0$, the first premise must also satisfy $P_0$. The
side-condition implies that all the other sequents in the premise
satisfy $P_0$. Moreover since the first premise satisfies $P_0$, the
side-condition must hold. Hence the rule becomes:
$$ \rulename{app^+} \
    \rulef{
        \Gamma \vdash^0 M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o) \qquad
        \Gamma \vdash^0 N_1 : B_{11} \quad \cdots \quad \Gamma \vdash^0 N_{l} : B_{1l} \qquad l < |\overline{B_1}|
    }
    {
        \Gamma \vdash^0 M N_1 \cdots N_{l} : (\overline{B} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)
    }
$$
where $\overline{B_1} = B_{11}, \ldots, B_{1l},\overline{B}$.
Clearly, this rule can be equivalently stated as:
$$ \rulef{\Gamma \vdash^0 M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A
                                   }
                                   {\Gamma  \vdash^{0} M N : B}$$
\end{itemize}

The full set of rules is given in table \ref{tab:homosafelmd_rules_refined}.

\begin{table}[htbp]
$$  \rulename{perm} \
    \rulef{
      { \Gamma \vdash^0 M:B \qquad \sigma(\Gamma)  } \hbox{ homogeneous}
    }
    { \sigma(\Gamma) \vdash^0 M : B
    }
\qquad
\rulename{seq} \  \rulef{\Gamma \vdash^{0} M : A}{\Gamma \vdash^{-1} M : A}
$$

$$
\rulename{\Sigma\mbox{\textbf{-const}}} \  \rulef{}{\vdash^0 b : A}\ b:A \in \Sigma
\qquad
 \rulename{var} \   \rulef{}{x : A\vdash^{0} x : A} $$

$$ \rulename{wk^{0}} \   \rulef{\Gamma \vdash^{0} M : A}{\Gamma , x : B \vdash^{0} M : A} \quad \ord{B} \geq \ord{A} $$

$$ \rulename{wk^{-1}} \   \rulef{\Gamma \vdash^{-1} M : A}{\Gamma , x : B \vdash^{-1} M : A} \quad \ord{B} \geq \ord{A} -1$$


$$ \rulename{app} \
    \rulef
        {   \Gamma \vdash^{-1} M : (\overline{A} \, | B)
            \qquad
            \Gamma \vdash^0 N_1 : A_1 \quad \cdots \quad \Gamma \vdash^0 N_{l} : A_l \qquad l = |\overline{A}|
        }
        {
            \Gamma \vdash^0 M N_1 \cdots N_{l} : B
        }
$$

$$ \rulename{app^+} \   \rulef{\Gamma \vdash^0 M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A
                                   }
                                   {\Gamma  \vdash^{0} M N : B}$$

$$ \rulename{abs} \   \rulef{\Gamma| \overline{x} : \overline{A} \vdash^{-1} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A}|B)}$$


where $\Gamma| \overline{x} : \overline{A}$ means that the lowest type-partition of the context is
$\overline{x} : \overline{A}$.
\caption{Alternative rules for the homogeneous safe lambda calculus}
\label{tab:homosafelmd_rules_refined}
\end{table}
%%%



\section{Safe \texorpdfstring{$\lambda$}{lambda}-calculus without the homogeneity constraint}
\label{sec:safe_nonhomog}

\subsection{Comparison with the homogeneous safe lambda calculus}
\begin{itemize}
\item all the types appearing in the rule are not required to be homogeneous (for instance
it is possible to have $\ord{A_l} < \ord{B}$ in rule $\rulename{app}$) ;
\item environments are not stratified, in particular in the context $\Gamma , \overline{x}:\overline{A}$, variables in $\overline{x}$ do not necessarily have the same order;
\item in the abstraction rule, the side-condition imposes that at least all variables of the lowest order
in the context are abstracted. Variables of greater order can also be
abstracted together with the lowest order variables and, in contrast to
the homogeneous safe lambda calculus, there is no constraint on the
order in which these variables are abstracted;
\end{itemize}

\begin{example} \hfill
\begin{enumerate}[(i)]
\item Let $f,g:o\rightarrow o$, $x,y:o$, $\Gamma =
g:o\rightarrow o$ and $\Gamma' = g:o\rightarrow o, y:o$. The term
$(\lambda f x . x) g y $ is safe. One possible derivation is:
$$ \rulef{
        \rulef{
            \rulef{
                \rulef{\vdots}{\Gamma \vdash \lambda f x. x : ((o,o),o,o)}      \qquad \axiomf{\Gamma \vdash g : (o,o)} }
            {\Gamma \vdash (\lambda f x. x) g} \rulename{app}
        }
        { \Gamma' \vdash (\lambda f x. x) g } \rulename{wk}
        \qquad \axiomf{\Gamma' \vdash y : o}
    }
    { \Gamma' \vdash (\lambda f x. x) g y } \rulename{app}
$$
Here is another derivation of the same judgment:
$$ \rulef{  \rulef{ \rulef{\vdots}{\Gamma \vdash \lambda f x. x} }{\Gamma' \vdash \lambda f x. x} \rulename{wk}    \qquad \rulef{}{\Gamma' \vdash g} \qquad \rulef{}{\Gamma' \vdash y}}
    {\Gamma' \vdash (\lambda f x. x) g y } \rulename{app}$$

\item
For $x:o$, $f:(o,o)$ and $\varphi:((o,o),o)$ the term $$\sentail \lambda x f \varphi .
\varphi : (o , (o, o) , ((o,o),o) , (o,o),o)$$ is
a valid safe term that is not homogeneously typed. This example shows that the safe $\lambda$-calculus
strictly contains the homogeneously-safe $\lambda$-calculus.

\item For $x:o$, $g:(o,(o,o),o)$, the terms $\lambda g x . g x$ and
$\lambda g x . g x (\lambda x . x)$ are both safe and not homogeneously typed.

\item
The following term is taken from \cite{serenistypesct05} (It is used as a counter-example to show that not all simply-typed terms are \emph{size-change terminating} \cite{jones01}):
$$ E \equiv  (\lambda a . a (\lambda b . a (\lambda c d .d))) (\lambda e . e (\lambda f .f))$$
where
$a : \sigma \typear \mu \typear \mu$,
$b : \tau \typear \tau$,
$c : \tau \typear \tau$,
$d : \mu$,
$e : \sigma = (\tau \typear \tau) \typear \mu \typear \mu$,
and $f : \tau$
for some type variables $\tau$, $\mu$ and $\sigma$.


The judgement $\sentail E : \mu \typear \mu$ is
a valid judgment of the safe $\lambda$-calculus
for any types $\mu, \tau$.

It is a valid judgement of the \emph{homogeneous} safe $\lambda$-calculus if and only if $\ord{\tau} \geq
\ord{\mu}-1$. (This condition implies the homogeneity of the types $\tau$ and $\mu$ and that the variables $a,b,c,d,e,f$ are
homogeneously typed.)
\end{enumerate}
\end{example}

\begin{lemma}[Context reduction]
If $\Gamma \sentail M : B$ is a valid judgment then so is $fv(M) \sentail M : B$
where $fv(M)$ denotes the context constituted of the free variables occurring in $M$.
\end{lemma}
\begin{proof}
Suppose that some variable $x$ in $\Gamma$ does not occur free
in $M$, then necessarily $x$ has been introduced in the context
using the weakening rule. Hence $\Gamma\setminus \{ x \} \vdash M$
must also be typable.
\end{proof}


\subsection{Particular case of homogeneously-safe lambda terms}

In this section, we derive a new set of rules by enforcing the type-homogeneity restriction into the (non-homogenous) safe lambda calculus.

We recall the definition of type-homogeneity from section \ref{sec:safe_homog}: a type $(A_1, \ldots A_n, o)$ is said to be homogeneous whenever $\ord{A_1} \geq \ord{A_2} \geq \ldots \geq \ord{A_n}$ and each of the $A_i$ is homogeneous.


We say that $\Gamma \vdash M : A$ verifies $P_i$ for $i \in \zset$
if all the variables in $\Gamma$ have order at least $\ord{A}+i$.
Lemma \ref{lem:nonhomosafe_basic_prop} can then be restated as
follows:
\begin{lemma}[Context reduction]
\label{lem:context_reduction} If $\Gamma \vdash M : A$ then the sequent $fv(M) \vdash M : A$ is valid and satisfies $P_0$.
\end{lemma}


We now show that a term-in-context is derivable in the homogeneous safe lambda calculus if and only if it is derivable with the rules of table \ref{tab:homosafelmd_rules_refined}.

  We recall
that in the system of rules of table
\ref{tab:homosafelmd_rules_refined}, if the sequent $\Gamma
\vdash^{i} M : A$ is valid for some $i \in \zset$ then all the
variables in $\Gamma$ have orders at least $\ord{A}+i$.

\begin{proposition}[Homogeneity restriction]
\label{prop:nonhomogsafe_homog_restriction}
Let $k \in \{ 0, -1 \}$. The sequent $\Gamma \vdash M : A$ is valid, homogeneously-safe and satisfies $P_k$
if and only if the sequent $\Gamma \vdash^k M : A$ is valid in the system of rules of table \ref{tab:homosafelmd_rules_refined}.
\end{proposition}

\begin{proof}
\emph{If}: An easy induction by case analysis on the last rule used to derive $\Gamma \vdash^0 M : A$.

\emph{Only if}:
Consider an homogeneously-safe term $\Gamma \vdash S : T$ satisfying $P_0$.
We proceed by induction and case analysis on the last rule used to derive $\Gamma \vdash S : T$.
We only give the details for the application and abstraction
case:
\begin{itemize}
\item \textbf{Abstraction.} We recall the abstraction rule:
$$ \rulename{abs} \quad  \rulef{\Gamma \union \overline{x} : \overline{A} \vdash M : B}
                                   {\Gamma  \vdash \lambda \overline{x} : \overline{A} . M : (\overline{A},B)} \qquad
                                   \forall y \in \Gamma : \ord{y} \geq \ord{\overline{A},B}$$

Type homogeneity requires that for all $i$: $\ord{x_i} = \ord{A_i} \geq
\ord{B} -1$. Therefore the premise of the rule verifies $P_{-1}$. Using the induction hypothesis we have:
\begin{equation}
\Gamma \union \overline{x} : \overline{A} \vdash^{-1} M : B. \label{eq:prop:nonhomogsafe_homog_restriction:abs1}
\end{equation}

We now partition the context $\Gamma$ according to the order of
the variables. The partitions are written in decreasing order of
type order. The notation $\Gamma | \overline{x}:\overline{A}$ means
that $\overline{x}:\overline{A}$ is the lowest partition of the
context.
We also use the notation $(\overline{A}|B)$ to denote the
homogeneous type $(A_1, A_2, \ldots A_n, B)$ where $\ord{A_1} =
\ord{A_2} =  \ldots \ord{A_n} \geq \ord{B} -1$.


Suppose that we abstract a single variable $x$, then in order to
respect the side condition, we need to abstract all variables of
order less or equal to $\ord{x}$. In particular we need to abstract
the partition of the order of $x$. Moreover to respect type
homogeneity, we need to abstract variables of the lowest order
first.

Hence $\overline{x}$ must contain at least the lowest variable
partition (all the variables of the lowest order). If $\overline{x}$
contains variables of different order, then the instance of the
abstraction rule can be replaced by consecutive instances of the
abstraction rule, one for each of the different variable order in
$\overline{x}$. Therefore, without loss of generality, we can assume
that $\overline{x}$ only contains the lowest partition, that is to
say, $\overline{x}$ \emph{is} the lowest partition.

The sequent \ref{eq:prop:nonhomogsafe_homog_restriction:abs1} therefore becomes:
$$\Gamma | \overline{x} : \overline{A} \vdash^{-1} M : B.$$

We conclude by applying the abstraction rule of table
\ref{tab:homosafelmd_rules_refined}:
$$ \rulename{abs} \quad  \rulef{\Gamma| \overline{x} : \overline{A} \vdash^{-1} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A}|B)}$$



\item \textbf{Application.} We recall the application rule:
$$ \rulename{app} \  \rulef{\Gamma \vdash M : (A,\ldots,A_l,B)
                                        \qquad \Gamma \vdash N_1 : A_1
                                        \quad \ldots \quad \Gamma \vdash N_l : A_l  }
                                   {\Gamma  \vdash M N_1 \ldots N_l : B}
                                    \quad
                                   \forall y \in \Gamma : \ord{y} \geq \ord{B}$$

The term in the conclusion is homogeneous safe therefore the term in the first premise must be of homogeneous \
type. This implies that $\ord{A_1} \geq \ldots \geq \ord{A_l}
\geq \ord{B} - 1$.
Furthermore, we can make the assumption that $\ord{A_1} = \ldots = \ord{A_l} = \ord{\overline{A}}$
(it is always possible to replace an instance of the application rule
by several consecutive instances of this kind).

By lemma \ref{lem:context_reduction}, we have for all $i \in 1..l$:
$$fv(N_i) \vdash N_i : A_i \mbox{ is valid and satisfies } P_0.$$

Let $\Sigma = \Union_{i=1..p} fv(N_i)$. Since $\ord{A_1} = \ldots = \ord{A_l}$, by applying the weakening rule we get for all $i\in 1..p$:
$$\Sigma \vdash N_i : A_i \mbox{ is valid and satisfies } P_0.$$


Applying lemma \ref{lem:context_reduction} to the term $M$ we have:
$$fv(M) \vdash M : (A_1,\ldots,A_l,B) \mbox{ is valid and satisfies } P_0.$$

The weakening rule $\rulename{wk}$ then gives:
$fv(M) \union \Sigma \vdash M : (A_1,\ldots,A_l,B)$.
Since $\Sigma \vdash N_i : A_i$ satisfies $P_0$, for any
$z \in \Sigma$ we have $\ord{z} \geq \ord{A_i} = \ord{(A_1,\ldots,A_l,B)} - 1$.
Hence:
\begin{equation}
fv(M) \union \Sigma \vdash M : (A_1,\ldots,A_l,B) \mbox{ is valid
and satisfies } P_{-1}
\label{eq:prop:nonhomogsafe_homog_restriction:m}.
\end{equation}

Similarly, for all $i \in 1..p$, the weakening rule gives $fv(M) \union \Sigma \vdash N_i : A_i$.
Since $fv(M) \vdash M : (A_1,\ldots,A_l,B)$ satisfies $P_0$,
for any $z \in fv(M)$ we have $\ord{z} \geq \ord{M} \geq \ord{A_i}$. Hence:
\begin{equation}
fv(M) \union \Sigma \vdash N_i : A_i \mbox{ is valid and satisfies }
P_0 \label{eq:prop:nonhomogsafe_homog_restriction:ni}.
\end{equation}

Let us define the context $\Sigma' = fv(M) \union \Sigma$. Using the induction hypothesis on equation
\ref{eq:prop:nonhomogsafe_homog_restriction:m} and \ref{eq:prop:nonhomogsafe_homog_restriction:ni} we have:
$$
\Sigma' \vdash^{-1} M : (A_1,\ldots,A_l,B) \qquad \mbox{and} \qquad
\Sigma' \vdash^0 N_i : A_i \mbox{ for all } i \in 1..l.
$$


We consider the following two sub-cases:
\begin{itemize}
\item If $A_1, \ldots, A_l$ forms a type partition then we can apply
rule $\rulename{app}$ of table \ref{tab:homosafelmd_rules_refined}:

$$ \rulef{\Sigma' \vdash^{-1} M : \overline{A} | B
                                        \qquad \Sigma' \vdash^{0} N_1 :
                                        A_1
                                        \quad \ldots \quad \Sigma' \vdash^{0} N_l :
                                        A_l
                                        \quad l = |\overline{A}|
                                        }
                                   {\Sigma'  \vdash^{0} M N_1 \ldots N_l : B} \quad  \rulename{app}
$$
where $\overline{A} = A_1, \ldots, A_l$.

\item  Suppose that $A_1, \ldots, A_l$ does not form a type partition, then we
have $$\ord{A_1} = \ldots = \ord{A_l} = \ord{B} - 1.$$

The side condition in the original instance of the application rule
says that for any variable $y$ in $\Gamma$ we have
$$\ord{y} \geq \ord{B} = 1 + \ord{A_l} = \ord{(A_1,\ldots, A_l,B)} = \ord{M}.$$

In particular the variables in $\Sigma' \subseteq \Gamma$ are of order greater than $\ord{M}$ and consequently
the sequent $\Sigma' \vdash M : (A,\ldots,A_l,B)$ verifies $P_0$. The induction hypothesis then gives:
$$\Sigma' \vdash^0 M : (A,\ldots,A_l,B)$$

By using $l$ consecutive instances of the rules $\rulename{app^+}$ from table \ref{tab:homosafelmd_rules_refined} we get:
$$  \rulef{ \rulef{ \rulef{ \Sigma' \vdash^0 M : (A_1,\ldots, A_l,B)
                    \qquad \Sigma'\vdash^{0} N_1 : A_1
                    }{ \Sigma' \vdash^0 M N_1 : (A_2,\ldots, A_l,B)} \quad \rulename{app^+}
          }
          { \vdots
          }
          \quad \rulename{app^+}
       }
       { \Sigma'  \vdash^{0} M N_1 \ldots N_l : B } \quad \rulename{app^+}
$$
\end{itemize}

In both cases we have proved that $\Sigma'  \vdash^{0} M N_1 \ldots N_l : B$ is a valid sequent.

Clearly $\Sigma' \subseteq \Gamma$ since $fv(M) \subseteq \Gamma$ and $\Sigma' = \Union_{i\in1..l} fv(N_i) \subseteq \Gamma$.
Suppose that $\Sigma' = \Gamma$ then the proof is done.
Suppose that $\Sigma' \subset \Gamma$, then the side condition in the original instance of the application rule says that all
the variables in $\Gamma$ have order
greater or equal to $\ord{B}$, we can therefore apply the weakening rule $\rulename{wk^0}$
of table \ref{tab:homosafelmd_rules_refined} exactly $|\Gamma\setminus \Sigma'|$ times and get:
$$ \rulef{\Sigma'  \vdash^{0} M N_1 \ldots N_l : B}
                                   {\Gamma  \vdash^{0} M N_1 \ldots N_l : B} \quad
                                   \rulename{wk^0}.
$$


\end{itemize}
\end{proof}
