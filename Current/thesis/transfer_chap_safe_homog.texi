\section{Homogeneous Safe \texorpdfstring{$\lambda$}{lambda}-Calculus}
\label{sec:safe_homog}


\subsection{Rules of the Safe \texorpdfstring{$\lambda$}{lambda}-Calculus}

There is a correspondence between higher-order grammars and the simply-typed $\lambda$-calculus. The non-terminals of a recursion scheme can be interpreted as $\lambda$-abstractions in the
simply-typed $\lambda$-calculus. The $\Sigma$-constants are
interpreted as ``constructors'' constants (in the sense of
constructor used in functional programming languages to represent
abstract data-types such as trees). The notions of variable and
application are directly transposed to the equivalent notions in the
simply-typed $\lambda$-calculus. Using this analogy it is possible
to derive a version of the safety restriction for the
$\lambda$-calculus.

The safe $\lambda$-calculus has been first proposed in
\cite{DBLP:conf/fossacs/AehligMO05}. The definition that we give here is slightly more
general in the sense that we allow the use of $\Sigma$-constants of
any higher-order type whereas the original definition only allows
first-order constants.


The \textbf{safe $\lambda$-calculus} is a sub-system of the
simply-typed $\lambda$-calculus. Typing judgements (or
terms-in-context) are of the form:
\begin{equation}
\nonumber \seq{\overline{x_1}:\overline{A_1} \, | \, \cdots \, | \,
\overline{x_n} :  \overline{A_n}}{M : B}
\end{equation}
which is shorthand for $\seq{x_{11} : A_{11}, \cdots, x_{1r}:
A_{1r}, A_{21},\ldots }{M : B}$ such that the context variables are listed in decreasing type order and
 with the condition that $\ord{x_{ik}} < \ord{x_{jl}}$ for any $k, l$ and $i<j$.

\emph{Valid typing judgements} of the system are defined by
induction over the following rules, where $\Delta$ is a given
homogeneously-typed alphabet \ie a countable set of symbols such that each
symbol has an homogeneous type, and $\Sigma$ is a set of homogeneously-typed
constants:

$$ \rulename{wk}
    {   \rulef{ \seq{\Gamma}{M:B} \qquad {\Gamma \subset \Delta} }
             { \seq{\Delta }{M : B}}
   }
\qquad
    \rulename{perm}
    {
      \rulef { \seq{\Gamma}{M:B} \qquad \sigma(\Gamma) \hbox{ homogeneous} }
            { \seq{\sigma(\Gamma)}{M : B} }
    }
$$

$$ \rulename{\Sigma\mbox{\textbf{-const}}}  \rulef{}{\seq{}{b : A}}\ b:A \in \Sigma
\qquad
 \rulename{var} \rulef{}{\seq{x_{ij} : A_{ij}\, }{x_{ij} : A_{ij}}}
$$

$$\rulename{abs}
\rulef{
 {\seq{\overline{x_1} : \overline{A_1}\, | \, \cdots\, | \, \overline{x_{n+1}} : \overline{A_{n+1}}}{M : B}}            \qquad \ord{\overline{A_{n+1}}} \geq \ord{B} -1
 }
 { \seq{\overline{x_1} : \overline{A_1}\, | \, \cdots\, | \, \overline{x_{n}} : \overline{A_{n}}}
     { \lambda \overline{x_{n+1}} : \overline{A_{n+1}} .M : (\overline{A_{n+1}} \, | \, B)  }
 }
$$

$$ \rulename{app} \rulef{{\seq{\Gamma}{M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)} \qquad
\seq{\Gamma}{N_1 : B_{11}} \quad \cdots \quad \seq{\Gamma}{N_{l} :
B_{1l}} \qquad l = |\overline{B_1}| }}
    { \seq{\Gamma}{M N_1
\cdots N_{l} : (\overline{B_2} \, | \, \cdots \, | \,
\overline{B_m} \, | \, o)}} $$

$$ \rulename{app^+} \rulef
    {\seq{\Gamma}{M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)} \qquad
    \seq{\Gamma}{N_1 : B_{11}} \quad \cdots \quad \seq{\Gamma}{N_{l} :
    B_{1l}} \qquad l < |\overline{B_1}| }
    { \seq{\Gamma}{M N_1
    \cdots N_{l} : (\overline{B} \, | \, \overline{B_2} \, | \ \cdots \, | \,
    \overline{B_m} \, | \, o)}} $$

where $\overline{B_1} = B_{11}, \ldots, B_{1l},\overline{B}$ with
the condition that every variable in $\Gamma$ has an order strictly greater
than $\ord{\overline{B_1}}$.






\begin{property}[Basic properties]
\label{proper:safe_basic_prop} Suppose $\Gamma \vdash M : B$ is a
valid judgment then
\begin{itemize}
\item[(i)] $B$ is homogeneous;
\item[(ii)] every free variable of $M$ has order at least $\ord{B}$;
\item[(iii)] $fv(M) \vdash M : B$,
\end{itemize}
where $fv(M) \subseteq \Gamma$ denotes the context constituted of the variables
in $\Gamma$ occurring free in $M$.
\end{property}
\begin{proof}
(i) and (ii) are proved by an easy structural induction. (iii) is
due to the fact that the weakening rule is the only rule which can
introduce a variable not occurring freely in $M$ in the context of a
typing judgement.
\end{proof}





\subsection{Safe \texorpdfstring{$\beta$}{beta}-reduction}

\begin{definition}[Safe redex]
A safe redex is a term of the form:
$$(\lambda \overline{x} . M) N_1 \ldots N_l$$
such that
\begin{itemize}
  \item variables $\overline{x}=x_1\ldots x_n$ are abstracted
altogether by one occurrence of the rule $\rulename{abs}$ in the
proof tree (possibly followed by the weakening rule). This implies
that:
$$\ord{M} -1 \leq \ord{\overline{x}} = \ord{x_1} = \ldots = \ord{x_n};$$
\item the terms $(\lambda \overline{x} . M)$, $N_1$,
$N_l$ are applied together at once using either:
\begin{itemize}
    \item the rule $\rulename{app}$:
        $$   \rulef{
                    \Sigma \vdash \lambda \overline{x} . M : (\overline{B_1}|\ldots|\overline{B_m}|o)
                    \quad
                    \Sigma \vdash N_1         \quad \ldots \quad \Sigma \vdash N_l
                    \quad l = |\overline{B_1}|
            }
            {
            \Sigma \vdash (\lambda \overline{x} . M) N_1 \ldots N_l
            } (\mathbf{app}),
        $$
        in which case  $n\leq |\overline{B_1}| = l$;

\item or the rule $\rulename{app^+}$:
        $$   \rulef{
                    \Sigma \vdash \lambda \overline{x} . M : (\overline{B_1}|\ldots|\overline{B_m}|o)
                    \quad
                    \Sigma \vdash N_1         \quad \ldots \quad \Sigma \vdash N_l
                    \quad l < |\overline{B_1}|
            }
            {
            \Sigma \vdash (\lambda \overline{x} . L) N_1 \ldots N_l
            } (\mathbf{app^+}),
        $$
      in which case $n \leq |\overline{B_1}|$ and no relation holds between $n$ and $l$.
\end{itemize}
\end{itemize}
It is not required to have $n = |\overline{B_1}|$.
\end{definition}

Note that there are safe terms of the form $(\lambda x_1 \ldots x_n
. M) N_1 \ldots N_l$ with $l>n$. For instance the term $ (\lambda f
. ((\lambda g h . h) a) ) a a$ of type $o \rightarrow o$ for some
constant $a:o \rightarrow o$ and variables $x : o$ and $f,g,h:o
\rightarrow o$, can be formed using the $\rulename{app}$ rule as
follows:
$$ \rulef{
    \emptyset \vdash (\lambda f . ((\lambda g h . h) a) ) : (o,o),(o,o),o,o
        \quad \emptyset \vdash a : o,o
        \quad \emptyset \vdash a : o,o
    }
    {
       \emptyset \vdash (\lambda f . ((\lambda g h . h) a) ) a a : o,o
    } \rulename{app}
$$


\begin{property} In the simply-typed $\lambda$-calculus:
\begin{enumerate}
\item $\betasred$ is strongly normalizing.
\item $\beta_s$ has the unique normal form property.
\item $\beta_s$ has the Church-Rosser property.
\end{enumerate}
\end{property}

\begin{proof}
1. This is because $\betasred \subset \betaredtr$ and, $\betared$ is
strongly normalizing in the simply-typed $\lambda$-calculus. 2. A
term has a safe redex iff it has a $\beta$-redex therefore the set
of $\beta_s$ normal forms is equal to the set of $\beta_s$ normal
forms. Hence, the unicity of $\beta$-normal form implies the unicity
of $\beta_s$-normal form. 3. is a consequence of 1 and 2.
\end{proof}

\begin{remark}
\label{rem:betasred_notpreserv_unsafety} $\betasred$ \emph{does not}
preserves ``unsafety'': Take two terms $S$ safe and $U$ unsafe of the
same type $\tau$, then the term $(\lambda x:\tau y:\tau . y) U S :\tau$ is also unsafe but it $\beta_s$-reduces to $S$ which is safe.
\end{remark}


\subsection{An alternative system of rules}


In this section, we will refine the formation rules
given in the previous section. We say that $\Gamma \vdash M : A$ satisfies $P_i$ for $i \in \zset$ if the
variables in $\Gamma$ all have orders at least $\ord{A}+i$. We introduce the notation $\Gamma \vdash^{i} M : A$ for $i \in
\zset$ to mean that $\Gamma \vdash M : A$ is a valid judgment satisfying $P_i$.


We remark that if $\Gamma \vdash M : A$ then the variables in $\Gamma$ with order
strictly smaller than $M$ cannot occur freely in $M$ and therefore it is possible to restrict
the context to a smaller number of variables:

\begin{lemma}[Context reduction]
\label{lem:restriction}

If $\Gamma \vdash^i M : A$ then $\Gamma' \vdash^{0} M : A$
where $$\Gamma' = \{ z \in \Gamma \ |
\ \ord{z} \geq \ord{M} \} = \Gamma \setminus \{ z \in \Gamma \ | \ \ord{M} + i \leq \ord{z} < \ord{M} \}$$
\end{lemma}
\begin{proof}
If $i\geq 0$ then the result is trivial. Suppose $i<0$. We proceed
by structural induction and case analysis. We only give the details
for the application cases $\rulename{app}$ and $\rulename{app^+}$:
\begin{itemize}
\item Case of the rule $\rulename{app}$:

    \[ (\mathbf{app}) \
    \rulef
        {\seq{\Gamma}{M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)} \qquad
            \seq{\Gamma}{N_1 : B_{11}} \quad \cdots \quad \seq{\Gamma}{N_{l} :
            B_{1l}} \qquad l = |\overline{B_1}| }
        { \seq{\Gamma}{M N_1
            \cdots N_{l} : (\overline{B_2} \, | \, \cdots \, | \,
            \overline{B_m} \, | \, o)}}
    \]

    If the conclusion satisfies $P_i$ then, for all $z \in \Gamma$:
    \begin{eqnarray*}
    \ord{z} \geq 1 + \ord{\overline{B_2}} + i
    &=& 1 + \ord{\overline{B_1}} + \ord{\overline{B_2}} - \ord{\overline{B_1}} + i \\
    &=& \ord{M} + (\ord{\overline{B_2}} - \ord{\overline{B_1}} + i)
    \end{eqnarray*}
    Therefore the first premise satisfies $P_j$ where $j={\ord{\overline{B_2}} - \ord{\overline{B_1}} + i}$.
    Hence by the induction hypothesis,
    $$\Gamma' \vdash^{0} M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)$$
    where $\Gamma' = \Gamma \setminus \{ z \in \Gamma \ | \ \ord{M} + j \leq \ord{z} < \ord{M} \}$.


    Similarly, for all $z \in \Sigma$:
    \begin{eqnarray*}
    \ord{z} \geq 1 + \ord{\overline{B_2}} + i
    &=& \ord{\overline{B_1}} + (1+\ord{\overline{B_2}} - \ord{\overline{B_1}} + i) \\
    &=& \ord{\overline{B_1}} + j+1
    \end{eqnarray*}
    Hence by the induction hypothesis:
    $$\Gamma'' \vdash^0 N_k : B_{1k} \mbox{ for } k \in 1..l$$
    where $\Gamma'' = \Gamma \setminus \{ z \in \Gamma \ | \ \ord{M} + j+1 \leq \ord{z} < \ord{M} \}$.

    Furthermore, $\Gamma'' = \Gamma' \union \{ z \in \Gamma \ | \ \ord{M} + j = \ord{z}\}$ therefore
    the weakening rule gives:
    $$\Gamma'' \vdash^{-1} M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)$$

    Finally the $\rulename{app}$ rule gives:
    $$\rulef{\Gamma'' \vdash^{-1} M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)
    \quad \Gamma'' \vdash^0 N_1 : B_{11} \quad \ldots \quad \Gamma'' \vdash^0 N_1 : B_{1l}
    }
        { \Gamma'' \vdash M N_1 \ldots N_l : (\overline{B_2} \, | \, \cdots \, | \,
            \overline{B_m} \, | \, o)}
    $$
    such that for all $z\in \Gamma''$:
    \begin{eqnarray*}
    \ord{z} \geq \ord{\overline{B_1}}
    &\geq& 1 + \ord{\overline{B_2}} = \ord{M N_1 \ldots N_l}
    \end{eqnarray*}

    Therefore:
    $$\Gamma'' \vdash^0 M N_1 \ldots N_l : (\overline{B_2} \, | \, \cdots \, | \,
            \overline{B_m} \, | \, o)$$

\item $\rulename{app^+}$  The side-condition of the rule $\rulename{app^+}$ ensures that the first premise
 satisfies $P_0$. The conclusion of the rule has the same order as the first premise
 therefore the conclusion also satisfies $P_0$.
\end{itemize}
\end{proof}


\begin{lemma}
\label{lem:prooftree01only} If $\Gamma \vdash^{0} M : T$ or $\Gamma
\vdash^{-1} M : T$ then there is a valid proof tree showing $\Gamma
\vdash M : T$ such that all the judgments appearing in the proof
tree satisfy either $P_0$ or $P_{-1}$.
\end{lemma}


\begin{proof}
Since $P_{-1}$ implies $P_0$, w.l.o.g.\ we can assume that the
judgment $\Gamma \vdash M : T$ satisfies $P_{-1}$. We show that
there is a proof tree for $\Gamma \vdash M : T$ where all the nodes
of the tree satisfy $P_0$ or $P_{-1}$. We proceed by structural
induction and case analysis on the last rule used to show $\Gamma
\vdash M : T$:
\begin{itemize}
\item Axiom $\rulename{const}$: the context is empty therefore the sequent satisfies $P_{-1}$.

\item Axiom $\rulename{var}$: the context contains only the variable itself therefore the sequent satisfies $P_0$.

\item Rule $\rulename{wk}$: The premise is $\Delta \vdash M : T$ with $\Delta \subset \Gamma$. Since
$\Gamma \vdash M : T$ satisfies $P_{-1}$ and $\Delta \subset \Gamma$ the premise must also satisfy $P_{-1}$. We can conclude using the
induction hypothesis.

\item Rule $\rulename{perm}$: By the induction hypothesis.


\item Rule $\rulename{abs}$: the second premise of the rule guarantees that the first
premise satisfies $P_{-1}$.

\item Rule $\rulename{app^+}$: The first premise has the same order as the
conclusion of the rule therefore the first premise satisfies
$P_0$. The side-condition of the rule $\rulename{app^+}$ ensures that all the other premises satisfy $P_0$.

\item Rule $\rulename{app}$:

$$ \rulename{app} \
    \rulef{
        { \Gamma \vdash M : (\overline{A} \, | B)
        \qquad
        \Gamma \vdash N_1 : A_1 \quad \cdots \quad \Gamma \vdash N_{l} : A_l \qquad l = |\overline{A}|
        }
    }
    {
        \Gamma \vdash^0 M N_1 \cdots N_{l} : B
    }
$$

Applying lemma \ref{lem:restriction} to the first premise we obtain:
\begin{equation}
 \Sigma \vdash^0 M : (\overline{A} \, | B) \label{eq:seq1}
\end{equation}
where $\Sigma = \{ z \in \Gamma \ | \ \ord{z} \geq \ord{(\overline{A} \, | B)} \} = \{ z \in \Gamma \ | \ \ord{z} \geq 1 + \ord{\overline{A}} \}.$

Applying lemma \ref{lem:restriction} to each of the remaining
premises gives  :
$$ \Sigma' \vdash^0 N_i : A_i \quad \mbox{ for all } i \in 1..p$$
where $\Sigma' = \{ z \in \Gamma \ | \ \ord{z} \geq \ord{A_i} =
\ord{\overline{A}} \} \supseteq \Sigma.$

If the inclusion $\Sigma \subseteq \Sigma'$ is strict then we apply the weakening rule to sequent (\ref{eq:seq1}):
$$ \rulef{\Sigma \vdash^0 M : (\overline{A} \, | B)}{\Sigma' \vdash^{-1} M : (\overline{A} \, | B)} \rulename{wk} $$

Finally, we obtain the following proof tree:
$$  \rulef{
        \rulef{
            { \Sigma' \vdash^{-1} M : (\overline{A} \, | B)
            \qquad
            \Sigma' \vdash^0 N_1 : A_1 \quad \cdots \quad \Sigma' \vdash^0 N_{l} : A_l \qquad l = |\overline{A}|
            }
        }
        {
            \Sigma' \vdash^0 M N_1 \cdots N_{l} : B
        } \rulename{app}
    }
    {
         \Gamma \vdash^0 M N_1 \cdots N_{l} : B
    } \rulename{wk}
$$

where the last weakening rules is applied only if the inclusion $\Sigma' \subseteq \Gamma$ is strict.

We can now conclude by applying the induction hypothesis on the
sequents $\Sigma' \vdash^{-1} M$, $\Sigma' \vdash^0 N_1$, \ldots,
$\Sigma' \vdash^0 N_l$ .
\end{itemize}
\end{proof}

\subsubsection{An alternative definition of the Homogeneous safe \texorpdfstring{$\lambda$}{lambda}-calculus}

Using the observations that we have just made, we will now derive
new rules for the safe $\lambda$-calculus with homogeneous type. We
want a system of rules generating sequents that satisfy $P_0$. Also,
it must be able to generate intermediate sequents that do not
necessarily satisfy $P_0$ provided that they can be used to produce
\emph{in fine} terms satisfying $P_0$.

Because of the lemma \ref{lem:prooftree01only}, we know that the
only necessary intermediate sequents are those that either satisfy
$P_0$ or $P_{-1}$. Hence, we can assume by default that premises of
the rules all satisfy $P_{-1}$ at least.

First we define an additional rule expressing the fact that $P_0$
implies $P_{-1}$:
$$ \rulename{seq} \  \rulef{\Gamma \vdash^{0} M : A}{\Gamma \vdash^{-1} M : A} $$

The weakening rule can be rewritten as follows:
$$ \rulename{wk^{0}} \   \rulef{\Gamma \vdash^{0} M : A}{\Gamma , x : B \vdash^{0} M : A} \quad \ord{B} \geq \ord{A} $$
$$ \rulename{wk^{-1}} \   \rulef{\Gamma \vdash^{-1} M : A}{\Gamma , x : B \vdash^{-1} M : A} \quad \ord{B} \geq \ord{A} -1$$

Because of the context reduction lemma, any sequent satisfying $P_{-1}$ can be obtained
by applying the weakening rule $\rulename{wk^{-1}}$ or the rule $\rulename{seq}$ to another sequent
satisfying $P_0$. Therefore, with the exception of these two rules, we only need to use rules whose conclusion sequents satisfy $P_0$:
\begin{itemize}
\item For the rules $\rulename{perm}$, $\rulename{const}$ and $\rulename{var}$, only the tagging of the sequents
changes:
$$ \rulename{var} \   \rulef{}{x : A\vdash^{0} x : A}
\qquad
\rulename{\Sigma\mbox{\textbf{-const}}}  \  \rulef{}{\vdash^0 b : A} \ b:A \in \Sigma
$$

$$
  \rulename{perm} \  \rulef{
      { \Gamma \vdash^0 M:B \qquad \sigma(\Gamma)  } \hbox{ homogeneous}
    }
      { \sigma(\Gamma) \vdash^0 M : B }
$$

\item $\rulename{abs}$ The abstraction rule has a side condition
expressing the fact that the premise satisfies $P_0$ or $P_{-1}$. Since this is always true for sequents
generated by our new system of rules, we can drop the side condition:
$$ \rulename{abs} \   \rulef{\Gamma | \overline{x} : \overline{A} \vdash^{-1} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A},B)}$$


\item $\rulename{app}$ The application rule has the following form:
$$ \rulename{app} \
    \rulef{
        { \Gamma \vdash^{-1} M : (\overline{A} \, | B)
        \qquad
        \Gamma \vdash^{-1} N_1 : A_1 \quad \cdots \quad \Gamma \vdash^{-1} N_{l} : A_l \qquad l = |\overline{A}|
        }
    }
    {
        \Gamma \vdash^0 M N_1 \cdots N_{l} : B
    }
$$

Since the first premise satisfies $P_{-1}$, by property \ref{proper:safe_basic_prop}(ii) we have:
$$\forall z \in \Gamma : \ord{z} \geq 1 + \ord{\overline{A}} -1 = \ord{\overline{A}} = \ord{\overline{N}}$$
Hence, all the sequents of the premises but the first must satisfy $P_0$. The rule (app) is therefore given by:
$$ \rulename{app} \
    \rulef{
        { \Gamma \vdash^{-1} M : (\overline{A} \, | B)
        \qquad
        \Gamma \vdash^0 N_1 : A_1 \quad \cdots \quad \Gamma \vdash^0 N_{l} : A_l \qquad l = |\overline{A}|
        }
    }{
        \Gamma \vdash^0 M N_1 \cdots N_{l} : B
      }
$$

\item For the application rule $\rulename{app^+}$, the type of the sequent in the first premise has the same order
as the type of the conclusion premise, and since the conclusion
satisfies $P_0$, the first premise must also satisfy $P_0$. The
side-condition implies that all the other sequents in the premise
satisfy $P_0$. Moreover since the first premise satisfies $P_0$, the
side-condition must hold. Hence the rule becomes:
$$ \rulename{app^+} \
    \rulef{
        \Gamma \vdash^0 M : (\overline{B_1} \, | \, \cdots \, | \, \overline{B_m} \, | \, o) \qquad
        \Gamma \vdash^0 N_1 : B_{11} \quad \cdots \quad \Gamma \vdash^0 N_{l} : B_{1l} \qquad l < |\overline{B_1}|
    }
    {
        \Gamma \vdash^0 M N_1 \cdots N_{l} : (\overline{B} \, | \, \cdots \, | \, \overline{B_m} \, | \, o)
    }
$$
where $\overline{B_1} = B_{11}, \ldots, B_{1l},\overline{B}$.
Clearly, this rule can be equivalently stated as:
$$ \rulef{\Gamma \vdash^0 M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A
                                   }
                                   {\Gamma  \vdash^{0} M N : B}$$
\end{itemize}

The full set of rules is given in table \ref{tab:homosafelmd_rules_refined}.

\begin{table}[htbp]
$$  \rulename{perm} \
    \rulef{
      { \Gamma \vdash^0 M:B \qquad \sigma(\Gamma)  } \hbox{ homogeneous}
    }
    { \sigma(\Gamma) \vdash^0 M : B
    }
\qquad
\rulename{seq} \  \rulef{\Gamma \vdash^{0} M : A}{\Gamma \vdash^{-1} M : A}
$$

$$
\rulename{\Sigma\mbox{\textbf{-const}}} \  \rulef{}{\vdash^0 b : A}\ b:A \in \Sigma
\qquad
 \rulename{var} \   \rulef{}{x : A\vdash^{0} x : A} $$

$$ \rulename{wk^{0}} \   \rulef{\Gamma \vdash^{0} M : A}{\Gamma , x : B \vdash^{0} M : A} \quad \ord{B} \geq \ord{A} $$

$$ \rulename{wk^{-1}} \   \rulef{\Gamma \vdash^{-1} M : A}{\Gamma , x : B \vdash^{-1} M : A} \quad \ord{B} \geq \ord{A} -1$$


$$ \rulename{app} \
    \rulef
        {   \Gamma \vdash^{-1} M : (\overline{A} \, | B)
            \qquad
            \Gamma \vdash^0 N_1 : A_1 \quad \cdots \quad \Gamma \vdash^0 N_{l} : A_l \qquad l = |\overline{A}|
        }
        {
            \Gamma \vdash^0 M N_1 \cdots N_{l} : B
        }
$$

$$ \rulename{app^+} \   \rulef{\Gamma \vdash^0 M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A
                                   }
                                   {\Gamma  \vdash^{0} M N : B}$$

$$ \rulename{abs} \   \rulef{\Gamma| \overline{x} : \overline{A} \vdash^{-1} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A}|B)}$$


where $\Gamma| \overline{x} : \overline{A}$ means that the lowest type-partition of the context is
$\overline{x} : \overline{A}$.
\caption{Alternative rules for the homogeneous safe lambda calculus}
\label{tab:homosafelmd_rules_refined}
\end{table}
%%%
