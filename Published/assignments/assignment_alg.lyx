# The reLyX bundled with LyX 1.3 created this file.
# For more info see http://www.lyx.org/
\lyxformat 2.15
\textclass article
\graphics default
\use_natbib 0
\use_numerical_citations 0
\begin_preamble
\usepackage{gastex}
\def\examtitle{}

\def\candidatenumber{39410}
\def\subject{Automata, Logic and Games}
\def\term{Hilary 2005}
\usepackage{oxfordexam}

\def\nat{\mathbb{N}}
\newcommand{\lsem}{[\![}
\newcommand{\rsem}{]\!]}

\def\imp{\Longrightarrow}
\def\sem#1{{\lsem #1 \rsem}}
\def\zor{\vee}
\def\zand{\wedge}
\def\znot{\neg}
\def\diamond#1{\langle #1 \rangle}

\end_preamble

\layout Standard


\latex latex 

\backslash firstpage
\latex default 

\layout Section*

Question 1
\layout Itemize

(a) 
\begin_deeper 
\layout Standard


\begin_inset Formula \( \alpha \in L\)
\end_inset 

 if and only if after some position 
\begin_inset Formula \( k\)
\end_inset 

, 
\begin_inset Formula \( \alpha\)
\end_inset 

 does not contain any occurrence of 11 and contains infinitely many occurrences
 of 101.
\layout Standard


\begin_inset Formula \( \alpha \in \sem{(0+1)^*.L'}\)
\end_inset 

 where L' is the language recognizing the words containing infinitely many
 101 but containing no occurrence of 11.
\layout Standard

Consider 
\begin_inset Formula \( \beta \in L'\)
\end_inset 

, after each occurrence of 101 in 
\begin_inset Formula \( \beta\)
\end_inset 

 there must be a 0 (since 11 is not allowed).
 Moreover, between two occurrences of 1010, the only two possible sequences
 of symbols are 0 and 10, this corresponds to the regular expression 
\begin_inset Formula \( (0+10)^*\)
\end_inset 

.
\layout Standard

Therefore 
\begin_inset Formula \( L' = \sem{ \left( 1010(0+10)^* \right)^\omega }\)
\end_inset 

 and 
\begin_inset Formula \( L
= \sem{(0+1)^*  \left( 1010(0+10)^* \right)^\omega }\)
\end_inset 


\layout Standard

The following Büchi-automaton recognizes this language: 
\layout Standard


\align center 

\begin_inset Figure
file alg-ex1
flags 9

\end_inset 


\end_deeper 
\layout Itemize

(b) 
\begin_deeper 
\layout Standard

Suppose that a deterministic automaton 
\begin_inset Formula \( A = (Q,\{0,1\}, q0, \delta,
F)\)
\end_inset 

 recognizes L.
 Then 
\begin_inset Formula \( \delta\)
\end_inset 

 is a function and we can extend it to a function 
\begin_inset Formula \( Q \times \{ 0, 1 \} \rightarrow Q\)
\end_inset 

 returning the state reached after reading a given sequence of symbols from
 a given state.
\layout Standard

A must accept 
\begin_inset Formula \( (101)^\omega\)
\end_inset 

, therefore there is a word 
\begin_inset Formula \( w_1 \in
\Sigma^*\)
\end_inset 

 such that 
\begin_inset Formula \( \delta(q_0, w_1) \in F\)
\end_inset 

, where 
\begin_inset Formula \( w_1\)
\end_inset 

 is either 
\begin_inset Formula \( (101)^{n_1}\)
\end_inset 

, 
\begin_inset Formula \( (101)^{n_1}1\)
\end_inset 

 or 
\begin_inset Formula \( (101)^{n_1}10\)
\end_inset 

 for some 
\begin_inset Formula \( n_1\in
\nat\)
\end_inset 

.
\layout Standard

Again, A must accept 
\begin_inset Formula \( w_1.11(101)^\omega\)
\end_inset 

 therefore, there is a word 
\begin_inset Formula \( w_2 \in \Sigma^*\)
\end_inset 

 such that 
\begin_inset Formula \( \delta(q_0, w_1.11.w_2) \in F\)
\end_inset 

, where 
\begin_inset Formula \( w_2\)
\end_inset 

 is either 
\begin_inset Formula \( (101)^{n_2}\)
\end_inset 

, 
\begin_inset Formula \( (101)^{n_2}1\)
\end_inset 

 or 
\begin_inset Formula \( (101)^{n_2}10\)
\end_inset 

 for some 
\begin_inset Formula \( n_2\in \nat\)
\end_inset 

.
\layout Standard

In this manner, we can create an infinite word 
\begin_inset Formula \( \alpha =
w_1.11.w_2.11.\ldots w_k.11. \ldots\)
\end_inset 

 which is recognized by A since the corresponding run passes infinitely
 through states in F.
 This is a contradiction, since 
\begin_inset Formula \( \alpha\)
\end_inset 

 contains infinitely many 11 and therefore cannot belong to L = L(A).
\end_deeper 
\layout Section*

Question 2
\layout Standard

We prove the result by contradiction.
 Suppose that 
\begin_inset Formula \( \phi(A,B)\)
\end_inset 

, expressing that A and B have the same number of elements, is definable
 in S1S.
\layout Standard

We define the S1S formula 
\begin_inset Formula \( \mbox{partition}(A,B,C)\)
\end_inset 

 stating that the sets 
\begin_inset Formula \( A\)
\end_inset 

, 
\begin_inset Formula \( B\)
\end_inset 

 and 
\begin_inset Formula \( C\)
\end_inset 

 form a partition of 
\begin_inset Formula \( \omega\)
\end_inset 

: 
\begin_inset Formula \begin{eqnarray*} 
\mbox{partition}(A,B,C) &=& \forall x . (x \in A\,\,\zor\,\,x \in B\
\zor\,\,x
\in C) \\
    && \zand  \forall y .
    \znot \left( (y \in A\,\,\zand\,\,y \in B) \zor (y \in A\,\,\zand\,\,y \in C) \zor (y \in B\,\,\zand\,\,y \in C) \right)
\end{eqnarray*}
\end_inset 


\layout Standard

We define 
\begin_inset Formula \( \psi(X,Y)\)
\end_inset 

 stating that after an occurrence of an element in 
\begin_inset Formula \( Y\)
\end_inset 

 there is no occurrence of an element in 
\begin_inset Formula \( X\)
\end_inset 

: 
\begin_inset Formula \[  \psi(X,Y) = \forall y. y \in Y \rightarrow  ( \forall x . x \geq y \rightarrow x \not\in X)\]
\end_inset 


\layout Standard

We now consider the alphabet 
\begin_inset Formula \( \Sigma = \{ 0, 1 \}^3\)
\end_inset 

.
 An infinite word 
\begin_inset Formula \( \alpha\)
\end_inset 

 on 
\begin_inset Formula \( \Sigma\)
\end_inset 

 is defined by three tracks characterized by the sets 
\begin_inset Formula \( A\)
\end_inset 

, 
\begin_inset Formula \( B\)
\end_inset 

 and 
\begin_inset Formula \( C\)
\end_inset 

: 
\begin_inset Formula \[  \forall x \in \omega : \alpha (x) = \left(
\begin{array}{cc}
{ [ x \in A ]} \\
{ [ x \in B ]} \\
{ [ x \in C ]}
\end{array}
\right)\]
\end_inset 


\layout Standard

We use the following notation: 
\begin_inset Formula \[ a = \left( \begin{array}{c} 1 \\
0 \\       0
\end{array} \right),
 b = \left( \begin{array}{c}       0 \\       1 \\       0     \end{array}
 \right) \mbox{ and }
 c = \left( \begin{array}{c}       0 \\       0 \\       1     \end{array}
 \right)\]
\end_inset 


\layout Standard

Then the following formula denotes the language 
\begin_inset Formula \( L = \{ a^n b^n
c^\omega | n \in \nat \}\)
\end_inset 

:
\layout Standard


\begin_inset Formula \[ \mbox{partition}(A,B,C) \zand \psi(A,B) \zand
\psi(B,C) \zand \psi(A,C) \zand (\exists z . z \in C)\]
\end_inset 


\layout Standard

Hence 
\begin_inset Formula \( L\)
\end_inset 

 is S1S definable and therefore there is a non-deterministic Büchi automaton
 recognizing L (by theorem 3.3 of the the lecture's notes).
\layout Standard

This is a contradiction since 
\begin_inset Formula \( L\)
\end_inset 

 is not regular.
 Indeed, suppose that a Büchi-automaton 
\begin_inset Formula \( A\)
\end_inset 

 with 
\begin_inset Formula \( m\)
\end_inset 

 states recognizes 
\begin_inset Formula \( L\)
\end_inset 

.
 Take 
\begin_inset Formula \( n >
m\)
\end_inset 

, then 
\begin_inset Formula \( a^n b^n c^\omega \in L\)
\end_inset 

.
 After reading the first 
\begin_inset Formula \( n\)
\end_inset 

 symbols 
\begin_inset Formula \( a\)
\end_inset 

, the automaton has visited twice a particular state.
 Suppose this state has been visited after reading 
\begin_inset Formula \( a^i\)
\end_inset 

 and after reading 
\begin_inset Formula \( a^j\)
\end_inset 

 with 
\begin_inset Formula \( i<j\leq n\)
\end_inset 

.
 We know that 
\begin_inset Formula \( a^i b^i c^\omega \in
L\)
\end_inset 

.
 Since 
\begin_inset Formula \( A\)
\end_inset 

 is in the same state after reading 
\begin_inset Formula \( a^i\)
\end_inset 

 and 
\begin_inset Formula \( a^j\)
\end_inset 

, we also have 
\begin_inset Formula \( a^j b^i c^\omega \in L\)
\end_inset 

 too.
 This is a contradiction since 
\begin_inset Formula \( i<j\)
\end_inset 

.
\layout Section*

Question 3
\layout Itemize

(a) Let us define the following two operators: 
\begin_inset Formula \[  A \oplus B \triangleq (A \zor B) \zand \znot (A \zand B)\]
\end_inset 

 
\begin_inset Formula \[  A \leftrightarrow B \triangleq \znot (A \oplus B)\]
\end_inset 


\begin_deeper 
\layout Standard

Then the following formula 
\begin_inset Formula \( \phi(X,Y,Z)\)
\end_inset 

 expresses that the numbers 
\begin_inset Formula \( a\)
\end_inset 

,
\begin_inset Formula \( b\)
\end_inset 

 and 
\begin_inset Formula \( c\)
\end_inset 

 represented respectively by the finite sets 
\begin_inset Formula \( X\)
\end_inset 

,
\begin_inset Formula \( Y\)
\end_inset 

 and 
\begin_inset Formula \( Z\)
\end_inset 

 are related by the equation 
\begin_inset Formula \( a+b=c\)
\end_inset 

: 
\begin_inset Formula \begin{eqnarray*} 
\phi(X,Y,Z) &=& \exists R | 0 \not\in R \\
&\zand& \forall b .\,\,b \in Z \leftrightarrow \left[ (b \in X) \oplus (b \in Y) \oplus (b \in R) \right] \\
&\zand& \forall b .\,\,\mathbf{s}\,\,b \in R \leftrightarrow \left(
\left[ (b \in X) \zand (b \in Y) \right] \zor
\left[ (b \in X) \zand (b \in R) \right] \zor
\left[ (b \in Y) \zand (b \in R) \right] \right)
\end{eqnarray*}
\end_inset 


\layout Standard

The first line states that there is a set 
\begin_inset Formula \( R\)
\end_inset 

 defining the value of the reminder for every step of the binary addition.
 
\begin_inset Formula \( 0 \not\in R\)
\end_inset 

 means that there is no reminder for the computation of the digit 0 of 
\begin_inset Formula \( c\)
\end_inset 

.
 The second line defines how the semi-addition is done and the third line
 defines how the reminder is calculated at every step.
\end_deeper 
\layout Itemize

(b) For any first-order formula 
\begin_inset Formula \( \psi\)
\end_inset 

 over the structure 
\begin_inset Formula \( (\omega,+)\)
\end_inset 

, we can construct an equivalent S1S formula 
\begin_inset Formula \( F(\psi)\)
\end_inset 

 as follow:
\begin_deeper 
\layout Standard

Let 
\begin_inset Formula \( x\)
\end_inset 

, 
\begin_inset Formula \( y\)
\end_inset 

 and 
\begin_inset Formula \( z\)
\end_inset 

 be first order variables, we define corresponding second order 
\begin_inset Formula \( \mu\)
\end_inset 

-calculus variables 
\begin_inset Formula \( X\)
\end_inset 

, 
\begin_inset Formula \( Y\)
\end_inset 

 and 
\begin_inset Formula \( Z\)
\end_inset 

. 
\begin_inset Formula \( F\)
\end_inset 

 is defined recursively as follow: 
\begin_inset Formula \begin{eqnarray*} 
F ( \psi_1 \zand \psi_2 ) &=& F( \psi_1 ) \zand F(\psi_2) \\
F ( \psi_1 \zor \psi_2 ) &=& F( \psi_1 ) \zor F(\psi_2) \\
F ( \znot \psi ) &=& \znot F( \psi )  \\
F ( \forall x . \psi ) &=& \forall X . F( \psi ) \\
F ( \exists x . \psi ) &=& \exists X . F( \psi ) \\
F ( x + y = z ) &=& \phi (X,Y,Z) \\
F ( x ) &=& X
\end{eqnarray*}
\end_inset 

 Moreover for any constant 
\begin_inset Formula \( n \in \omega\)
\end_inset 

 we define 
\begin_inset Formula \( F( n )\)
\end_inset 

 as the set of numbers corresponding to the position of 1's in the binary
 representation of 
\begin_inset Formula \( n\)
\end_inset 

: 
\begin_inset Formula \[ F ( n ) = \{ k \in \nat | \mbox{ the \(k^{th}\) binary digit in the binary representation of \(n\) is a 1} \} \]
\end_inset 


\layout Standard

A Presburger arithmetic formula 
\begin_inset Formula \( \phi(x_1,\ldots,x_n)\)
\end_inset 

 can be transformed into the S1S formula 
\begin_inset Formula \( F(\phi(x_1,\ldots,x_n)) = \psi(X_1,\ldots X_n)\)
\end_inset 

.
 From this S1S formula, we can construct the Büchi automaton 
\begin_inset Formula \( A_\psi\)
\end_inset 

 defines in slide 3-17 of the lecture's note.
 The language recognized by this automaton is not empty if and only if the
 formula 
\begin_inset Formula \( \psi\)
\end_inset 

 is satisfiable.
 Hence, since non-emptyness is decidable for Büchi automata (theorem 1.6),
 Presburger arithmetic is decidable.
\end_deeper 
\layout Itemize

(c) What we proved is that when we encode numbers into sets, we can decide
 whether the second-order variable 
\begin_inset Formula \( X\)
\end_inset 

, 
\begin_inset Formula \( Y\)
\end_inset 

 and 
\begin_inset Formula \( Z\)
\end_inset 

 encode numbers satisfying the relation 
\begin_inset Formula \( x + y = z\)
\end_inset 

.
\begin_deeper 
\layout Standard

But if 
\begin_inset Formula \( x\)
\end_inset 

, 
\begin_inset Formula \( y\)
\end_inset 

 and 
\begin_inset Formula \( z\)
\end_inset 

 are first-order variables then the natural number addition 
\begin_inset Formula \( x + y = z\)
\end_inset 

 on these first-order variables is not definable in S1S.
\end_deeper 
\layout Section*

Question 4
\layout Section*

Question 5
\layout Itemize

(a) 
\begin_deeper 
\layout Standard


\latex latex 

\backslash def{
\backslash musem}{#}
\latex default 
1
\latex latex 

\backslash |
\latex default 
 #1 
\latex latex 

\backslash |
\latex default 

\latex latex 
_
\latex default 

\latex latex 

\backslash emptyset
\latex default 

\latex latex 
^
\latex default 
T
\layout Standard

We define the following two functions: 
\begin_inset Formula \begin{eqnarray*} 
\Phi(X,Z) &=& [a] (( Z \zor \diamond{b} t ) \zand X ) \\
\phi(X) &=& \mu Z . \Phi(X,Z)
\end{eqnarray*}
\end_inset 


\layout Standard

Let us first do some preliminary computations: 
\begin_deeper 
\layout Itemize

We have: 
\begin_inset Formula \begin{eqnarray*} 
    \musem{\mu^0 Z . \Phi(S,Z) } &=& \emptyset \\
    \musem{\mu^1 Z . \Phi(S,Z) } &=& \musem{ [a] ( \underbrace{\diamond{b} t}_{\{1\}}) } = \{2 \} \\
    \musem{\mu^2 Z . \Phi(S,Z) } &=& \musem{[a] ( \underbrace{\{ 2\} \zor \{ 1\}}_{\{1,2\}}) } = \{1,2 \} \\
    \musem{\mu^3 Z . \Phi(S,Z) } &=& \musem{[a] ( \{ 1,2\} \zor \{1\}) } = \{1,2 \}
\end{eqnarray*}
\end_inset 

 therefore: 
\begin_inset Formula \begin{eqnarray} 
    \musem{\phi(S)} = \musem{\mu Z . \Phi(S,Z) } &=& \{1,2 \}  \label{eq1}
\end{eqnarray}
\end_inset 


\layout Itemize

moreover: 
\begin_inset Formula \begin{eqnarray*} 
    \musem{\mu^0 Z . \Phi(\{1,2\},Z) } &=& \emptyset \\
    \musem{\mu^1 Z . \Phi(\{1,2\},Z) } &=&    \musem{ [a] ( \{1\} \zand \{1,2\} ) }    = \musem{ [a] ( \{1\} ) } = \{ 2\} \\
    \musem{\mu^2 Z . \Phi(\{1,2\},Z) } &=&    \musem{[a] ( ( \{2\} \zor \{1\}) \zand \{1,2\} ) } =    \musem{[a] ( \{1,2\} ) } =    \{1,2\} \\
    \musem{\mu^3 Z . \Phi(\{1,2\},Z) } &=&  \musem{[a] ( ( \{1,2\} \zor \{1\}) \zand \{1,2\} ) } = \musem{[a] ( \{1,2\} ) }  = \{1,2 \}
\end{eqnarray*}
\end_inset 

 therefore: 
\begin_inset Formula \begin{eqnarray} 
    \musem{\phi(\{1,2\}) } = \musem{\mu Z . \Phi(\{1,2\},Z) } = \{1,2 \}  \label{eq2}
\end{eqnarray}
\end_inset 


\end_deeper 
\layout Standard

We can compute the fixpoint approximants for 
\begin_inset Formula \( \musem{\nu X . \phi(X)}\)
\end_inset 

: 
\begin_inset Formula \begin{eqnarray*} 
    \musem{\nu^0 X . \phi(X)} &=& S\\
    \musem{\nu^1 X . \phi(X)} &=& \musem{ \phi(S) } = \{1,2\} \quad \mbox{ (equation \ref{eq1})} \\
    \musem{\nu^2 X . \phi(X)} &=& \musem{ \phi(\{1,2\}) } = \{1,2\} \quad \mbox{ (equation \ref{eq2})}
\end{eqnarray*}
\end_inset 


\layout Standard

Hence 
\begin_inset Formula \( \musem{\nu X . \phi(X)} = \{ 1,2\}\)
\end_inset 

.
\end_deeper 
\layout Itemize

(b) The following graph describes the game 
\begin_inset Formula \( \mathcal{G}_\emptyset^T\left( 2, \mu Z. \nu X. ([a](Z \zor \diamond{b} t)
\zand [b] X) \right)\)
\end_inset 

: 
\begin_inset Figure
file alg-ex5
flags 9

\end_inset 


\begin_deeper 
\layout Standard

The green position correspond to the verifier's winning positions, the red
 positions correspond to the refuterl's winning position.
\layout Standard

We recall theorem 5.2 from the notes: 
\latex latex 

\backslash newtheorem{theorem}{
\latex default 
Theorem
\latex latex 
}
\latex default 

\latex latex 
 
\backslash begin{theorem}
\newline 

\backslash begin{enumerate}
\newline 

\backslash item 
\backslash (s 
\backslash models_V^T 
\backslash phi
\backslash ) iff player V has as history-free winning strategy for 
\backslash (
\backslash mathcal{G}_V^T(s,
\backslash phi)
\backslash )
\newline 

\backslash item 
\backslash (s 
\backslash not
\backslash models_V^T 
\backslash phi
\backslash ) iff player R has as history-free winning strategy for 
\backslash (
\backslash mathcal{G}_V^T(s,
\backslash phi)
\backslash )
\newline 

\backslash end{enumerate}
\newline 

\backslash end{theorem}
\latex default 

\layout Standard

V has a history-free winning strategy for 
\begin_inset Formula \( \mathcal{G}_\emptyset^T\left( 2, \mu Z. \nu X. ([a](Z \zor \diamond{b} t)
\zand [b] X) \right)\)
\end_inset 

 consisting in choosing the position 
\begin_inset Quotes eld
\end_inset 


\begin_inset Formula \( 1,\diamond{b} t\)
\end_inset 


\begin_inset Quotes erd
\end_inset 

 when the game is at position 
\begin_inset Quotes eld
\end_inset 


\begin_inset Formula \( 1,Z\zor \diamond{b}t\)
\end_inset 


\begin_inset Quotes erd
\end_inset 

.
 Hence 
\begin_inset Formula \(  2 \models \mu Z. \nu X. ([a](Z \zor \diamond{b} t)
\zand [b] X)\)
\end_inset 

.
\end_deeper 
\layout Section*

Question 6
\layout Itemize

(a) 
\begin_inset Formula \begin{eqnarray*} 
  \alpha \models \mathbf{X} \phi \rightarrow \mathbf{X} \psi &\iff& (\alpha \models \mathbf{X} \phi) \imp (\alpha \models \mathbf{X} \psi) \\
            &\iff& (\alpha^1 \models \phi) \imp (\alpha^1 \models \psi) \\
            &\iff& \alpha^1 \models (\phi \rightarrow \psi) \\
            &\iff& \alpha \models \mathbf{X} (\phi \rightarrow \psi)
\end{eqnarray*}
\end_inset 


\layout Itemize

(b) 
\begin_inset Formula \begin{eqnarray} 
\alpha \models \phi\,\,\mathbf{R}\,\,\psi &\iff& \forall k \geq 0 . (\alpha^k \models \psi\,\,\zor\,\,\exists i : 0 \leq i < k . \alpha^i \models \phi ) \nonumber \\
    &\iff& \qquad \left[ \alpha \models \psi\,\,\zor\,\,\overbrace{\exists i : 0 \leq i < 0 . \alpha^i \models \phi}^{false} \right] \qquad\qquad\qquad\qquad (k=0) \nonumber \\
        && \zand \underbrace{\forall k > 0 . (\alpha^k \models \psi\,\,\zor\,\,\exists i : 0 \leq i < k . \alpha^i \models \phi )}_{A} \nonumber \\
    &\iff& \alpha \models \psi
        \zand \left[ (A \zand \alpha \models \psi) \zor (A \zand \alpha \not\models \psi) \right] \label{eq3}
\end{eqnarray}
\end_inset 


\begin_deeper 
\layout Itemize

Since 
\begin_inset Formula \[  \alpha \models \phi \qquad \imp \qquad \left[ \forall k>0 . \exists i:0\leq i < k .\alpha^i \models \phi \right] \equiv A\]
\end_inset 

 we have 
\begin_inset Formula \(  (A \zand \alpha \models \psi) \quad \equiv \quad \alpha \models \phi\)
\end_inset 

.
\layout Itemize

Moreover, 
\begin_inset Formula \begin{eqnarray*} 
A \zand \alpha \not\models \phi &\imp& \forall k>0 . (\alpha^k \models \psi  \zor \exists i:0<i<k.\alpha^i \models \phi) \\
&\stackrel{k\leftarrow k-1}{\iff}& \forall k\geq 0 . (\alpha^{k+1} \models \psi  \zor \exists i:0<i<k+1.\alpha^i \models \phi) \\
&\stackrel{i\leftarrow i-1}{\iff}& \forall k\geq 0 . (\alpha^{k+1} \models \psi  \zor \exists i:0\leq i<k.\alpha^{i+1} \models \phi) \\
&\iff& \forall k\geq 0 . ( (\alpha^1)^k \models \psi  \zor \exists i:0\leq i<k.(\alpha^1)^i \models \phi) \\
&\stackrel{R \mbox{ def.}}{\iff}& \alpha^1 \models \phi\,\,\mathbf{R}\,\,\psi \\
&\imp& \alpha \models  \mathbf{X} (\phi\,\,\mathbf{R}\,\,\psi)
\end{eqnarray*}
\end_inset 


\end_deeper 
\begin_deeper 
\layout Standard

By plugging these two results into equation 
\begin_inset LatexCommand \ref{eq3}

\end_inset 

 we obtain the desired result: 
\begin_inset Formula \[ 
\alpha \models \phi\,\,\mathbf{R}\,\,\psi \imp
 \alpha \models \psi
        \zand \left[ \alpha \models \phi \zor  \alpha \models  \mathbf{X} (\phi\,\,\mathbf{R}\,\,\psi)  \right]
\]
\end_inset 


\end_deeper 
\layout Itemize

(c) We first prove the identity 
\begin_inset Formula \( \textrm{f}\,\,\mathbf{R}\,\,\phi = \mathbf{G} \phi\)
\end_inset 

: 
\begin_inset Formula \begin{eqnarray*} 
\alpha \models \textrm{f}\,\,\mathbf{R}\,\,\phi &\iff& \forall k \geq 0 . \alpha^k \models \phi \,\,\zor\,\,\exists i:0\leq i<k : \alpha^i \models \textrm{f} \\
&\iff& \forall k \geq 0 . \alpha^k \models \phi \\
&\iff& \alpha \models \mathbf{G} \phi
\end{eqnarray*}
\end_inset 


\begin_deeper 
\layout Standard

Hence: 
\begin_inset Formula \begin{eqnarray*} 
\textrm{f}\,\,\mathbf{R}\,\,(\phi \zand \mathbf{X} \phi) \rightarrow ( \phi \rightarrow \textrm{f}\,\,\mathbf{R} \phi )
&\equiv&
\mathbf{G} (\phi \zand \mathbf{X} \phi) \rightarrow (\phi \rightarrow \mathbf{G} \phi) \\
&\equiv&
\mathbf{G} \phi \rightarrow (\phi \rightarrow \mathbf{G} \phi) \\
&\equiv&
(\mathbf{G} \phi  \zand \phi ) \rightarrow (\mathbf{G} \phi) \\
&\equiv&
\mathbf{G} \phi  \rightarrow (\mathbf{G} \phi) \\
&\equiv&
\mathbf{true}
\end{eqnarray*}
\end_inset 


\end_deeper 
\layout Itemize

(d) Claim: 
\begin_inset Formula \( \phi\,\,\mathbf{R}\,\,\psi \equiv \mathbf{G} (\znot \phi \zand \psi)\,\,\zor\,\,(\znot\phi \zand\psi) \mathbf{U} (\phi \zand\psi) \)
\end_inset 


\begin_deeper 
\layout Standard

Proof: Note that 
\begin_inset Formula \( \phi\,\,\mathbf{R}\,\,\psi \equiv \left[ (\phi\,\,\mathbf{R}\,\,\psi) \zand \mathbf{G} \znot \phi \right]\,\,\zor\
    \left[ (\phi\,\,\mathbf{R}\,\,\psi) \zand \mathbf{F} \phi \right]\)
\end_inset 


\begin_deeper 
\layout Itemize

We have 
\begin_inset Formula \(  (\phi\,\,\mathbf{R}\,\,\psi) \zand \mathbf{G} \znot \phi \equiv\,\,\mathbf{G} (\znot \phi \zand \psi)\)
\end_inset 

 indeed, 
\begin_inset Formula \begin{eqnarray*} 
    \alpha \models (\phi\,\,\mathbf{R}\,\,\psi) \zand \mathbf{G} \znot \phi  &\iff&
\left( \forall k \geq 0 . \alpha^k \models \psi \zor \exists i : 0 \leq i < k . \alpha^i \models \phi \right)
\zand ( \forall k \geq 0 : \alpha^k \models \not \psi
  \end{eqnarray*}
\end_inset 


\layout Itemize


\begin_inset Formula \(  \)
\end_inset 


\end_deeper 
\end_deeper 
\layout Section*

Question 7
\the_end
