We present a sub-language of the lambda-calculus derived from
the safety condition, a syntactic restriction for higher-order
grammars constraining occurrences of variables in the
production rules according to their order (KNU02). Contrary to
the original definition of safety, our calculus does not
constrain types. We show that it is alpha-conversion free and
propose an adequate notion of beta-reduction that preserves
safety. In the vein of Schwichtenberg's result (SCH76), we
obtain that the numerical functions representable in our
calculus are exactly the multivariate polynomials. Thus
conditional is not definable. Finally we give a game-semantic
account of safety by showing that safe terms are denoted by
P-incrementally-justified strategies. Consequently pointers in
the game semantics only start to be necessary at order 4.
