

We use a set of sequents of the form $\Gamma \vdash^{i} M : A$ where
the meaning is ``variables in $\Gamma$ have orders at least
$\ord{A}+i$'' where $i \in \zset$. The following set of rules are
defined for $i \in \zset$:

$$ \mathbf{(seq^i_\delta)} \quad \rule{\Gamma \vdash^{i} M : A}{\Gamma \vdash^{i-\delta} M : A} \quad i \in \zset, \delta > 0  $$

$$ \mathbf{(var)} \quad  \rule{}{x : A\vdash^{0} x : A} $$

$$ \mathbf{(wk^i)} \quad  \rule{\Gamma \vdash^i M : A}{\Gamma , x : B \vdash^i M : A} \quad \ord{B} \geq \ord{A} + i $$

$$ \mathbf{(app^i)} \quad  \rule{\Gamma \vdash^i M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A}
                                   {\Gamma  \vdash^{i+\delta} M N : B}
                                    \qquad
                                   \delta = \max\left(0, 1 + \ord{A} - \ord{B}\right)$$

$$ \mathbf{(abs^i)} \quad  \rule{\Gamma, \overline{x} : \overline{A} \vdash^{i} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A},B)} \qquad
                                   \forall y \in \Gamma : \ord{y} \geq \ord{\overline{A},B}$$


Note that:
\begin{itemize}
\item $(\overline{A},B)$ denotes the type $(A_1,A_2, \ldots, A_n, B)$;
\item all the types appearing in the rule are not required to be homogeneous. For instance in the rule $\mathbf{(app^i)}$, the type $A \rightarrow B$ is not necessarily
homogeneous;
\item the environment $\Gamma, \overline{x}$ is not stratified. In particular, variables in $\overline{x}$ do not necessarily have the same order. Also
there may be variable in $\Gamma$ of order smaller than $\ord{x}$
for some variable $x$ in $\overline{x}$.
\item The sequents that we really want to prove are those of type $\Gamma \vdash^0 M$. Those terms are the safe terms.
Other terms are only used as intermediate steps in a proof.
\end{itemize}

\begin{rem}
\label{rem:rulesineg}

This set of rules is equivalent (in term of safe terms that can be
generated) to the same set of rule where $i$ is restricted to be a
negative integer and where the rule $(app^i)$ becomes:

$$ \mathbf{(app^i)} \quad  \rule{\Gamma \vdash^i M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A}
                                   {\Gamma  \vdash^{\min(i+\delta,0)} M N : B}
                                    \qquad
                                   \delta = \max\left(0, 1 + \ord{A} - \ord{B}\right) \quad i \leq 0 $$

With this new set of rules, the sequents of the form $\Gamma
\vdash^{k} M$ with $k>0$ cannot be derived anymore, however, the set
of safe terms that can built remain the same. Indeed, suppose that
we derive $\Gamma \vdash^0 M$ using the sequent $\Gamma \vdash^k N$
with $k>0$ somewhere in the proof. Then an easy induction shows that
the sequent $\Gamma \vdash^0 N$ can as well be derived by making use
of the rule $(seq^i_\delta)$ for $i\leq 0$.
\end{rem}

\begin{lem}[Basic properties]
\label{lem:nonhomosafe_basic_prop} Suppose $\Gamma \vdash^0 M : B$
is a valid judgment then every variable in $\Gamma$ has order at
least $ord(M)$.
\end{lem}
\begin{proof}
An easy induction on the proof tree shows that if $\Gamma \vdash^{i}
M : A$ then the variables in $\Gamma$ have orders at least
$\ord{A}+i$. The induction step for the application is: suppose
$\Gamma  \vdash^{i+\delta} M N : B$ where $\Gamma \vdash^i M :
A\rightarrow B$. Then by induction we have $\forall y \in \Gamma :
\ord{y} \geq \ord{A\rightarrow B} + i = \max(1+\ord{A}, \ord{B})+i =
\delta + \ord{B} + i$.
\end{proof}

\begin{lem}[No variable capture lemma]
Provided that substitution is done simultaneously (even for variable
of different order), there is not variable capture when performing
substitution on a safe (non homogeneous) term.
\end{lem}

\begin{proof}
Suppose that a capture occurs during the substitution $M[N/\varphi]$
where $M$ and $N$ are safe. Then the following conditions must hold:
\begin{enumerate}
\item $\varphi:A, \Gamma \vdash^0 M$,
\item $\Gamma \vdash^0 N$,
\item there is a subterm $\lambda \overline{x} . L$ in $M$ (where the abstraction is taken as wide as possible) such that:
\item $\varphi \in fv(\lambda \overline{x} . L)$ (and therefore $\varphi \in fv(L)$),
\item $x \in fv(N)$ for some $x \in \overline{x}$.
\end{enumerate}

By lemma \ref{lem:nonhomosafe_basic_prop} and (v) we have:

\begin{equation}
\ord{x} \geq \ord{N} = \ord{\varphi} \label{eq:xigeqphi}
\end{equation}

$\lambda \overline{x} . L$ is a subterm of $M$, therefore (since the
abstraction $\lambda \overline{x}.L$ is taken as large as possible)
there is a node $\Sigma \vdash^u \lambda \overline{x} . L$ in the
proof tree for some $u$.

There are only three kind of rules that can derive an abstraction:
$\mathbf{(abs^i)}$, $\mathbf{(seq^i_\delta)}$ and $\mathbf{(wk^i)}$.
The only rule that can introduce the abstraction is
$\mathbf{(abs^i)}$. Therefore the proof tree has the following form:

$$ \rule{
    \rule{
        \rule{
            \rule  {\ldots}
                   {\Sigma' \vdash^0 \lambda \overline{x} . L} \mathbf{(abs^i)}
        }
        {\ldots} r_1
    }
    {\vdots} r_2
    }
    { \Sigma \vdash^u \lambda \overline{x} . L } r_l
    \qquad \mbox{where } r_j \in \{ \mathbf{(seq^i_\delta)},\ \mathbf{(wk^i)}\ |\ i \in \zset, \delta > 0 \},
            \quad j\in 1..l.
$$


Since $\varphi \in fv (L)$ we must have $\varphi \in \Sigma'$ and
since $\Sigma' \vdash^0 \lambda \overline{x} . L$, by lemma
\ref{lem:nonhomosafe_basic_prop} we have:

$$\ord{\varphi} \geq \ord{\lambda \overline{x} . L} \geq 1 + \ord{x} > \ord{x}$$

which contradicts equation (\ref{eq:xigeqphi}).
\end{proof}


\section{Particular case of homogeneously-safe lambda terms}

We look at a particular sub-class of lambda terms. The types of
these terms respect a property call homogeneity as defined in
section \ref{sec:homotypes}. A type $(A_1, A_2, \ldots A_n, o)$ is
said to be homogeneous whenever $\order{A_1} \geq \order{A_2} \geq
\ldots \geq  \order{A_n}$. A term is homogeneous if its type is
homogeneous.


In their definition of safety (\cite{KNU02}), Knapik et al. require
that all the recursion equations of a safe recursion scheme have a
homogeneous type.

In the rules defining safety for the non-homogeneous case, the only
rule that can potentially introduce a non-homogeneous term from a
homogeneous one is the abstraction rule. But such a term (a lambda
abstraction) corresponds exactly to a recursion equation in the
recursion scheme setting of Knapik et al. Therefore requiring that
recursions equation have homogeneous type is the same as requiring
that all sequents appearing in the proof tree of a safe term are of
homogeneous type.

We say that a term is homogeneously-safe if its type is homogeneous
and there is a proof tree showing its safety where all the sequents
of the proof tree are of homogenous type!

\begin{lem}
\label{lem:homog_judg_zero_minusone} If a term is homogeneously-safe
then there is valid proof tree showing that it is safe containing
only judgments of the form $\Gamma \vdash^{k} M : T$ with $k\in
\{-1,0\}$.
\end{lem}

\begin{proof}
Assume that $\Gamma \vdash^{0} S : T_S$ with $T_S$ homogeneous.


Because of remark \ref{rem:rulesineg} we just need to show that
there is a proof tree where there is no sequent of the form $\Gamma
\vdash^{k} M$ with $k<-1$.

Suppose that the proof tree of $\Gamma \vdash^{0} S : T_S$ contains
$\Gamma \vdash^{-k} M : T$ for $k>0$ and $T$ a homogeneous type.

The term $M$ is unsafe but we hope that eventually we will form a
safe term with it. Since $M$ is unsafe, its order must be strictly
greater than $1$: we assume that $T = \overline{A} | B$. The
homogeneity of $\overline{A} | B$ implies $ord(M) = 1 +
ord(\overline{A})$.

We observe that the only two possible ways to make a safe term is to
use the rule $(app^i)$ or $(abs^i)$ for some $i$ (they are the only
rules which can decrease $k$):

\begin{itemize}
\item
 Suppose that we want to form a homogeneously-safe term by abstracting a variable. Respecting type homogeneity
 requires $ord(x) \geq ord(A)$.

Then it is easy to see that the sequent $\Gamma \vdash^{-k} M : A
\rightarrow B$ was too strong and that we could have derived the
sequent $\Gamma \vdash^0 M : A \rightarrow B$ instead!

\item
Suppose that we want to form a safe term by applying another term
safe term $\Gamma \vdash^0 N : A$ to $\Gamma \vdash^{-k} M : A
\rightarrow B$ (that way the unsafe term $M$ does not appear at an
operand position).

Using the application rules once may not be enough to get a safe
term, it may be necessary to perform several consecutive
applications until the order of the term becomes low enough. We now
consider the very last such application, the one that turns the non
safe term into a safe one. This consideration allows us to assume
that in the type $A \rightarrow B$, $A$ is the last type of its
partition, i.e. $\ord{A} \geq \ord{B}$ and $\ord{M} = 1 + \ord{A}$.

We observe that in the rule $(app^{-i})$, the environments  of the
two premises ($\Gamma$) are the same. The second premise is $\Gamma
\vdash^{0} N : A$ therefore by lemma
\ref{lem:nonhomosafe_basic_prop} we have:

\begin{equation}
\forall x \in \Gamma : \ord{x} \geq \ord{N} = \ord{A} = \ord{M} - 1
\end{equation}

Again the sequent $\Gamma \vdash^{-k} M : A \rightarrow B$ was too
strong and we could have derived the sequent $\Gamma \vdash^{-1} M :
A \rightarrow B$ instead!

\end{itemize}
\end{proof}

From this lemma we can derive rules for the homogeneously-safe
lambda calculus.

\subsection{The example of the application rule}

We are now about to derive the application rules specialized for the
case of homogeneous types. We recall the rule $\mathbf{(app^i)}$:
$$ \mathbf{(app^i)} \quad  \rule{\Gamma \vdash^i M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A}
                                   {\Gamma  \vdash^{u} M N : B}
                                    \qquad
                                   u = \min(i+\max\left(0, 1 + \ord{A} - \ord{B}\right),0) \quad i \in \{ -1, 0 \} $$

Type homogeneity implies that $\ord{A} \geq \ord{B} - 1$.

\begin{itemize}
\item Suppose that $\ord{A} \geq \ord{B}$ then the condition $i \in \{-1, 0\}$ implies $u=0$ and we obtain the following rule:
$$ \mathbf{(app_1^i)} \quad  \rule{\Gamma \vdash^i M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A }
                                   {\Gamma  \vdash^{0} M N : B}
                                    \qquad \ord{A} \geq \ord{B} ,\quad i \in \{ -1, 0 \} $$

\item Suppose that $\ord{A} = \ord{B} - 1$ then
$ u = \min(i,0) = i$  (since $i \in \{-1,0\}$).
 We obtain the following rule:
$$ \mathbf{(app_2^i)} \quad  \rule{\Gamma \vdash^i M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A,
                                   }
                                   {\Gamma  \vdash^i M N : B}
                                    \qquad \ord{A} = \ord{B} - 1, \quad i \in \{ -1, 0 \} $$
\end{itemize}

In fact $\mathbf{(app_1^0)}$ is redundant since we can derive it
from $\mathbf{(app_1^{-1})}$ and $\mathbf{(seq^0_1)}$. The rules
$\mathbf{(app_1^i)}$ and $\mathbf{(app_2^i)}$ can be restated as
follow:
$$ \mathbf{(app^0)} \quad  \rule{\Gamma \vdash^0 M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A }
                                {\Gamma  \vdash^{0} M N : B}$$

$$ \mathbf{(app^{-1})} \quad  \rule{\Gamma \vdash^{-1} M : A\rightarrow B
                                        \qquad \Gamma \vdash^0 N : A}
                                   {\Gamma  \vdash^0 M N : B}
                                    \qquad \ord{A} \geq \ord{B}$$

$$ \mathbf{(app'^{-1})} \quad  \rule{\Gamma \vdash^{-1} M : A\rightarrow B
                                        \qquad \Gamma \vdash^0 N : A}
                                   {\Gamma  \vdash^{-1} M N : B}
                                    \qquad \ord{A} = \ord{B} - 1$$


\subsection{The abstraction rule}

Let us derive the abstraction rule specialized for the case of
homogeneous types. We recall the rule $\mathbf{(abs)}$:
$$ \mathbf{(abs^i)} \quad  \rule{\Gamma, \overline{x} : \overline{A} \vdash^{i} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A},B)} \qquad
                                   \forall y \in \Gamma : \ord{y} \geq \ord{\overline{A},B}$$

We now partitionned the context $\Gamma$ according to the order of
the variables. The partition are written in decreasing order of type
order. The notation $\Gamma | \overline{x}:\overline{A}$ means that
$\overline{x}:\overline{A}$ is the lowest partition of the context.

We also use the notation $(\overline{A}|B)$ to denote the
homogeneous type $(A_1, A_2, \ldots A_n, B)$ where $\ord{A_1} =
\ord{A_2} =  \ldots \ord{A_n} \geq \ord{B} -1$.


Suppose that we abstract the single variable $\overline{x} = x$,
then in order to respect the side condition, we need to abstract all
variables of order lower or equal to $\ord{x}$. In particular we
need to abstract the partition of the order of $x$.

Moreover to respect type homogeneity, we need to abstract variables
of the lowest order first.

Hence we can change the abstraction rule so that it only allows
abstraction of the lowest variable partition. The rule can then be
used repeatedely if further partitions need to be abstracted. We
obtained the following rule where the side-condition has
disappeared:

$$ \mathbf{(abs^i)} \quad  \rule{\Gamma| \overline{x} : \overline{A} \vdash^{i} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A}|B)}$$


\subsection{The entire set of rules}

Table \ref{tab:homosafelmd_rules} gives the entire set of rules.


\begin{table}[htbp]
$$ \mathbf{(seq)} \quad \rule{\Gamma \vdash^{0} M : A}{\Gamma \vdash^{-1} M : A} $$

$$ \mathbf{(var)} \quad  \rule{}{x : A\vdash^{0} x : A} $$

$$ \mathbf{(wk^{0})} \quad  \rule{\Gamma \vdash^{0} M : A}{\Gamma , x : B \vdash^{0} M : A} \quad \ord{B} \geq \ord{A} $$

$$ \mathbf{(wk^{-1})} \quad  \rule{\Gamma \vdash^{-1} M : A}{\Gamma , x : B \vdash^{-1} M : A} \quad \ord{B} \geq \ord{A} -1$$


$$ \mathbf{(app^{-1})} \quad  \rule{\Gamma \vdash^{-1} M : A\rightarrow B
                                        \qquad \Gamma \vdash^0 N : A,
                                   }
                                   {\Gamma  \vdash^0 M N : B}
                                    \qquad \ord{A} \geq \ord{B}$$

$$ \mathbf{(app'^{-1})} \quad  \rule{\Gamma \vdash^{-1} M : A\rightarrow B
                                        \qquad \Gamma \vdash^0 N : A,
                                   }
                                   {\Gamma  \vdash^{-1} M N : B}
                                    \qquad \ord{A} = \ord{B} - 1$$

$$ \mathbf{(app^0)} \quad  \rule{\Gamma \vdash^0 M : A\rightarrow B
                                        \qquad \Gamma \vdash^{0} N : A,
                                   }
                                   {\Gamma  \vdash^{0} M N : B}$$

$$ \mathbf{(abs^i)} \quad  \rule{\Gamma| \overline{x} : \overline{A} \vdash^{i} M : B}
                                   {\Gamma  \vdash^{0} \lambda \overline{x} : \overline{A} . M : (\overline{A}|B)}$$
\caption{Rules of the homogeneous safe lambda calculus}
\label{tab:homosafelmd_rules}
\end{table}


If we rename the sequents $\vdash^{0}$ and $\vdash^{-1}$ into
$\vdash^+$ and $\vdash^{-}$ respectively we observe that the rules
are similar to the ones given in \cite{Ong2005} except that the rule
$\mathbf{(app'^{-1})}$ is missing in \cite{Ong2005}.


$x+1=f_{0+x}^{\cos{d}}$